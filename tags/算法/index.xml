<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>算法 on Ken Blog</title>
    <link>http://www.hello-api.cn/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Ken Blog</description>
    <image>
      <url>http://www.hello-api.cn/papermod-cover.png</url>
      <link>http://www.hello-api.cn/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 10 Dec 2022 12:04:00 +0800</lastBuildDate><atom:link href="http://www.hello-api.cn/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go-希尔排序算法</title>
      <link>http://www.hello-api.cn/study/go-shell-sort/</link>
      <pubDate>Sat, 10 Dec 2022 12:04:00 +0800</pubDate>
      
      <guid>http://www.hello-api.cn/study/go-shell-sort/</guid>
      <description>package main import &amp;#34;fmt&amp;#34; func main() { var arr = []int{9, 7, 6, 8, 4, 1, 5, 2, 3} fmt.Printf(&amp;#34;arr: %v\n&amp;#34;, arr) var gap = 1 for { if gap &amp;gt;= (len(arr))/3 { break } gap = gap*3 + 1 } fmt.Printf(&amp;#34;gap: %v\n&amp;#34;, gap) for gap := gap; gap &amp;gt; 0; gap = (gap - 1) / 3 { for i := gap; i &amp;lt; len(arr); i++ { for j := i; j &amp;gt; gap-1 &amp;amp;&amp;amp; arr[j] &amp;lt; arr[j-gap]; j -= gap { swap(arr, j, j-gap) } } fmt.</description>
    </item>
    
    <item>
      <title>go-插入排序算法</title>
      <link>http://www.hello-api.cn/study/go-insertion-sort/</link>
      <pubDate>Sat, 10 Dec 2022 11:22:00 +0800</pubDate>
      
      <guid>http://www.hello-api.cn/study/go-insertion-sort/</guid>
      <description>package main import &amp;#34;fmt&amp;#34; func main() { var arr = []int{9, 7, 6, 8, 4, 1, 5, 2, 3} for i := 1; i &amp;lt; len(arr); i++ { for j := i; j &amp;gt; 0; j-- { if arr[j] &amp;lt; arr[j-1] { swap(arr, j, j-1) } } fmt.Printf(&amp;#34;arr: %v\n&amp;#34;, arr) } } func swap(arr []int, a, b int) { var temp = arr[a] arr[a] = arr[b] arr[b] = temp } 输出</description>
    </item>
    
    <item>
      <title>go-冒泡排序算法</title>
      <link>http://www.hello-api.cn/study/go-buddle-sort/</link>
      <pubDate>Thu, 08 Dec 2022 15:44:00 +0800</pubDate>
      
      <guid>http://www.hello-api.cn/study/go-buddle-sort/</guid>
      <description>package main import &amp;#34;fmt&amp;#34; func main() { var arr = []int{9, 7, 6, 8, 4, 1, 5, 2, 3} for i := len(arr) - 1; i &amp;gt; 0; i-- { for j := 0; j &amp;lt; len(arr)-1; j++ { if arr[j] &amp;gt; arr[j+1] { swap(arr, j, j+1) } } fmt.Printf(&amp;#34;arr: %v\n&amp;#34;, arr) } } func swap(arr []int, a, b int) { var temp = arr[a] arr[a] = arr[b] arr[b] = temp } 输出</description>
    </item>
    
    <item>
      <title>Go-选择排序算法</title>
      <link>http://www.hello-api.cn/study/go-selection-sort/</link>
      <pubDate>Tue, 06 Dec 2022 23:10:00 +0800</pubDate>
      
      <guid>http://www.hello-api.cn/study/go-selection-sort/</guid>
      <description>正常版 每次寻找一个最小值并交换
package main import &amp;#34;fmt&amp;#34; func main() { var arr = []int{5, 3, 8, 6, 1, 8, 6, 1, 7} fmt.Printf(&amp;#34;arr: %v\n&amp;#34;, arr) for i := 0; i &amp;lt; len(arr)-1; i++ { var minPos = i for j := i + 1; j &amp;lt; len(arr); j++ { if arr[j] &amp;lt; arr[minPos] { minPos = j } } swap(arr, i, minPos) fmt.Printf(&amp;#34;arr: %v\n&amp;#34;, arr) } } func swap(arr []int, a, b int) { var temp = arr[a] arr[a] = arr[b] arr[b] = temp } 输出结果</description>
    </item>
    
  </channel>
</rss>
