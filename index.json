[{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary. Guide Follow Quick Start guide to setup and create a new site.\nNote: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\nMake sure you install latest version of hugo(\u0026gt;=0.83.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ncd themes/PaperMod git pull Method 2 you can use as submodule with\ngit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Note: You may use --branch v5.0 to end of above command if you want to stick to specific release.\nUpdating theme :\ngit submodule update --remote --merge Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\nMaster Branch (Latest) v6.0 v5.0 v4.0 v3.0 v2.0 v1.0 Finally \u0026hellip; Add in config.yml:\ntheme: \u0026#34;PaperMod\u0026#34; Method 4 Install Go programming language in your operating system.\nIntialize your own hugo mod\nhugo mod init YOUR_OWN_GIT_REPOSITORY Add PaperMod in your config.yml file module: imports: - path: github.com/adityatelange/hugo-PaperMod Update theme hugo mod get -u Quick Links Papermod - Features Papermod - FAQs Papermod - Variables Papermod - Icons ChangeLog Sample config.yml Example Site Structure is present here: exampleSite\nUse appropriately\nbaseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026#34;https://twitter.com/\u0026#34; - name: stackoverflow url: \u0026#34;https://stackoverflow.com\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Sample Page.md --- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; ","permalink":"/posts/papermod/papermod-installation/","summary":"Read Install and Update instructions here","title":"Installation | Update"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\nYou can find any YML to TOML converters if necessary.\nAssets (js/css) The following is enabled by default\nminification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/intergity check. Default Theme light/dark/auto params: # defaultTheme: light # defaultTheme: dark defaultTheme: auto # to switch between dark or light according to browser theme Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\ndisableThemeToggle: true You can refer following table for better understanding\u0026hellip;\ndefaultTheme disableThemeToggle checks local storage? checks system theme? Info auto true No Yes only system theme false Yes (if not-\u0026gt;2) Yes (2) switch present dark true No No force dark only false Yes No switch present light true No No force light only false Yes No switch present Archives Layout Create a page with archive.md in content directory with following content\n. ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ├── static/ └── themes/ └── PaperMod/ and add the following to it\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- Note: Archives Layout does not support Multilingual Month Translations.\nex: archives.md\nRegular Mode (default-mode) Home-Info Mode Use 1st entry as some Information\nadd following to config file\nparams: homeInfoParams: Title: Hi there wave Content: Can be Info, links, about... socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Profile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\nparams: profileMode: enabled: true title: \u0026#34;\u0026lt;Title\u0026gt;\u0026#34; # optional default will be site title subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;image link\u0026gt;\u0026#34; # optional imageTitle: \u0026#34;\u0026lt;title of image as alt\u0026gt;\u0026#34; # optional imageWidth: 120 # custom size imageHeight: 120 # custom size buttons: - name: Archive url: \u0026#34;/archive\u0026#34; - name: Github url: \u0026#34;https://github.com/\u0026#34; socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Search Page PaperMod uses Fuse.js Basic for search functionality\nAdd the following to site config, config.yml\noutputs: home: - HTML - RSS - JSON # is necessary Create a page with search.md in content directory with following content\n--- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;placeholder text in search input box\u0026#34; --- To hide a particular page from being searched, add it in post\u0026rsquo;s frontmatter\n--- searchHidden: true ex: search.md\nSearch Page also has Key bindings:\nArrow keys to move up/down the list Enter key (return) or Right Arrow key to go to the highlighted page Escape key to clear searchbox and results For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\nparams: fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] Draft Page indication adds [draft] mark to indicate draft pages.\nPost Cover Image In post\u0026rsquo;s page-variables add :\ncover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; relative: false # To use relative path for cover image, used in hugo Page-bundles When you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\nparams: cover: responsiveImages: false To enable hyperlinks to the full image size on post pages, use\nparams: cover: linkFullImages: true Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\nparams: ShowShareButtons: true Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\nParams: ShowReadingTime: true Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\nShowToc: true To keep Toc Open by default on a post add following to page-variables:\nTocOpen: true BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\nparams: ShowBreadCrumbs: true Can be diabled for particular page\u0026rsquo;s front-matter\n--- ShowBreadCrumbs: false --- Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\nParams: editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link Can be modified for individual pages\n--- editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\nParameter Required Default Value editPost.URL true - editPost.appendFilePath false false editPost.Text false \u0026ldquo;Edit\u0026rdquo; Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\nOther Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\nparams: ShowPostNavLinks: true Code Copy Button Adds a copy button in code block to copy the code it contains\nparams: ShowCodeCopyButtons: true Multiple Authors To Use multiple authors for a post, in post-variables:\n--- author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] --- To use Multiple Authors Site-wide, in config.yml:\nparams: author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\nparams: comments: true read more about this hugo-comments\nAccessKeys c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu What\u0026rsquo;s AccessKeys ?\nEnhanced SEO Enabled only when env: production\nRich Results/Snippets Support Twitter Cards Support The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. OpenGraph support The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. videos: - filename01.mov - filename02.avi Multilingual Support Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) Displays a Scroll-to-Top button in right-bottom corner Google Analytics integration Syntax highlighting RSS feeds ","permalink":"/posts/papermod/papermod-features/","summary":"Learn About All Features in PaperMod","title":"Features"},{"content":"前言 搭建个人博客或者其他网站站点的时候,只有静态页面显得比较冷清,想了解自己的文章能不能帮到更多有相同疑惑的人,或者为自己的网站增添功能\n目标 扩展自己的网站支持评论功能\n前置条件 有github的账号\n正式内容 感谢提供这个评论功能的giscus,在不用维护评论功能以及数据库的情况下,这是款十分便利的评论系统\n创建github仓库 首先需要创建一个github的仓库,用于保存评论的留言,并且需要一些小小的配置,参考官网\n选择 giscus 连接到的仓库。请确保：\n此仓库是公开的，否则访客将无法查看 discussion。 giscus app 已安装否则访客将无法评论和回应。 指导入口 Discussions功能已在你的仓库中启用。指导 选择配置 创建完仓库后,在giscus的配置栏中选择自己需要的配置 如本文的配置为\n\u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;suguer/giscus.github.io\u0026#34; data-repo-id=\u0026#34;R_kgDOH08FpA\u0026#34; data-category=\u0026#34;Announcements\u0026#34; data-category-id=\u0026#34;DIC_kwDOH08FpM4CQ2jj\u0026#34; data-mapping=\u0026#34;title\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;top\u0026#34; data-theme=\u0026#34;preferred_color_scheme\u0026#34; data-lang=\u0026#34;zh-CN\u0026#34; data-loading=\u0026#34;lazy\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 嵌入js代码 hugo的详情文章路径一般在主题下的layouts/_default/single.html，建议不要在主题下theme直接修改文件，避免后续升级覆盖没了，可在根目录下相同创建出layouts/_default/single.html，接着在代码最后粘贴giscus的那段js代码即可\n","permalink":"/tech/hugo-004/","summary":"前言 搭建个人博客或者其他网站站点的时候,只有静态页面显得比较冷清,想了解自己的文章能不能帮到更多有相同疑惑的人,或者为自己的网站增添功能\n目标 扩展自己的网站支持评论功能\n前置条件 有github的账号\n正式内容 感谢提供这个评论功能的giscus,在不用维护评论功能以及数据库的情况下,这是款十分便利的评论系统\n创建github仓库 首先需要创建一个github的仓库,用于保存评论的留言,并且需要一些小小的配置,参考官网\n选择 giscus 连接到的仓库。请确保：\n此仓库是公开的，否则访客将无法查看 discussion。 giscus app 已安装否则访客将无法评论和回应。 指导入口 Discussions功能已在你的仓库中启用。指导 选择配置 创建完仓库后,在giscus的配置栏中选择自己需要的配置 如本文的配置为\n\u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;suguer/giscus.github.io\u0026#34; data-repo-id=\u0026#34;R_kgDOH08FpA\u0026#34; data-category=\u0026#34;Announcements\u0026#34; data-category-id=\u0026#34;DIC_kwDOH08FpM4CQ2jj\u0026#34; data-mapping=\u0026#34;title\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;top\u0026#34; data-theme=\u0026#34;preferred_color_scheme\u0026#34; data-lang=\u0026#34;zh-CN\u0026#34; data-loading=\u0026#34;lazy\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 嵌入js代码 hugo的详情文章路径一般在主题下的layouts/_default/single.html，建议不要在主题下theme直接修改文件，避免后续升级覆盖没了，可在根目录下相同创建出layouts/_default/single.html，接着在代码最后粘贴giscus的那段js代码即可","title":"从0到1 记录搭建Hugo个人博客-04 增加评论功能"},{"content":"powerdns | powerdns_http_api | download link\n1、 环境 environment 系统 centos 7.9\n2、 安装 install powerdns yum install epel-release yum-plugin-priorities curl -o /etc/yum.repos.d/powerdns-auth-45.repo https://repo.powerdns.com/repo-files/centos-auth-45.repo\nyum install pdns\n3、 安装 install pdns-recursor yum -y install epel-release yum-plugin-priorities curl -o /etc/yum.repos.d/powerdns-rec-45.repo https://repo.powerdns.com/repo-files/centos-rec-45.repo yum -y install pdns-recursor\n4、 配置 configure 修改mysql配置文件\n[mysqld] /etc/my.cnf\ninnodb_file_per_table = 1 innodb_flush_log_at_trx_commit = 0 character-set-server=utf8 collation-server=utf8_general_ci create database poweradmin; grant all on poweradmin.* to puser1@localhost identified by \u0026#34;wisdom123@\u0026#34;; flush privileges; mysql -u root poweradmin \u0026lt; /usr/share/doc/pdns-backend-mysql-4.1.10/schema.mysql.sql\n[powerdns] /etc/pdns/pdns.conf\napi=yes api-key=123456 api-logfile=/var/log/pdns.log launch=gmysql gmysql-host=localhost gmysql-user=puser1 gmysql-dbname=poweradmin gmysql-password=mysqlpassword server-id=ns1.example.com webserver=yes webserver-address=0.0.0.0 webserver-allow-from=127.0.0.1 webserver-password=123456 webserver-port=8081 5、安装 isntall poweradmin2.1 wget https://nchc.dl.sourceforge.net/project/poweradmin/poweradmin-2.1.7.tgz\ntar -xvf poweradmin-2.1.7.tgz cp -r poweradmin-2.1.7 /var/www/html/poweradmin\ncd /var/www/html/poweradmin\ntouch inc/config.inc.php\nchmod 777 inc/config.inc.php\n使用浏览器配置poweradmin\npowerdns 不支持cname空主机头的解析 ","permalink":"/study/powerdns/","summary":"powerdns | powerdns_http_api | download link\n1、 环境 environment 系统 centos 7.9\n2、 安装 install powerdns yum install epel-release yum-plugin-priorities curl -o /etc/yum.repos.d/powerdns-auth-45.repo https://repo.powerdns.com/repo-files/centos-auth-45.repo\nyum install pdns\n3、 安装 install pdns-recursor yum -y install epel-release yum-plugin-priorities curl -o /etc/yum.repos.d/powerdns-rec-45.repo https://repo.powerdns.com/repo-files/centos-rec-45.repo yum -y install pdns-recursor\n4、 配置 configure 修改mysql配置文件\n[mysqld] /etc/my.cnf\ninnodb_file_per_table = 1 innodb_flush_log_at_trx_commit = 0 character-set-server=utf8 collation-server=utf8_general_ci create database poweradmin; grant all on poweradmin.* to puser1@localhost identified by \u0026#34;wisdom123@\u0026#34;; flush privileges; mysql -u root poweradmin \u0026lt; /usr/share/doc/pdns-backend-mysql-4.","title":"powerdns-学习如何搭建个人专属DNS服务器"},{"content":"前言 在外网正式环境中如果配置不足,编译前端项目可能导致服务器的卡死甚至死机,因此可采取内网服务器上编译再自动发布\n目标 内网编译前端项目,分发到另一个git项目并自动提交发布\n前置条件 gitblit\n正式内容 1. 创建 append-auto-compile.groovy import com.gitblit.GitBlit import com.gitblit.Keys import com.gitblit.models.RepositoryModel import com.gitblit.models.TeamModel import com.gitblit.models.UserModel import com.gitblit.utils.JGitUtils import com.gitblit.utils.StringUtils import java.text.SimpleDateFormat import org.eclipse.jgit.api.CloneCommand import org.eclipse.jgit.api.PullCommand import org.eclipse.jgit.api.Git import org.eclipse.jgit.lib.Repository import org.eclipse.jgit.lib.Config import org.eclipse.jgit.revwalk.RevCommit import org.eclipse.jgit.transport.ReceiveCommand import org.eclipse.jgit.transport.ReceiveCommand.Result import org.eclipse.jgit.util.FileUtils import org.slf4j.Logger logger.info(\u0026#34;append-auto-compile hook triggered by ${user.username} for ${repository.name} l\u0026#34;) def rootFolder = \u0026#39;/home/git/\u0026#39; def bare = false def cloneAllBranches = true def cloneBranch = \u0026#39;refs/heads/master\u0026#39; def includeSubmodules = true def repoName = repository.name def destinationFolder = new File(rootFolder, StringUtils.stripDotGit(repoName)) def srcUrl = \u0026#39;file://\u0026#39; + new File(gitblit.getRepositoriesFolder(), repoName).absolutePath Runtime r = Runtime.getRuntime(); for (ReceiveCommand command : commands) { if(command.refName==\u0026#34;refs/heads/released\u0026#34;){ r.exec(\u0026#34;/bin/sh /home/gitblit/gitblit_data/scriptsFolder/gitcompile.sh ${destinationFolder} ${repoName}\u0026#34;); logger.info(\u0026#34;compile ${srcUrl} Folder=${destinationFolder} repoName= ${repoName} \u0026#34;); } } 2. 创建 gitcompile.sh cd $1 #/usr/local/git/bin/git pull #sh $1.sh #/usr/local/git/bin/git pull \u0026gt;\u0026gt;/tmp/$2.log 2\u0026gt;\u0026amp;1 sh $1_compile.sh \u0026gt;\u0026gt;/tmp/$2.compile.log 2\u0026gt;\u0026amp;1 ####3. 创建仓库名+compile.sh 如 git_name_compile.sh\n我在自动化部署上主要执行了自动编译和钉钉推送,git上传等操作\ntime3=$(date \u0026#34;+%Y-%m-%d %H:%M:%S\u0026#34;) curl --location --request POST \u0026#39;https://oapi.dingtalk.com/robot/send?access_token=钉钉的access_token\u0026#39; \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --data \u0026#34;{ \\\u0026#34;msgtype\\\u0026#34;: \\\u0026#34;text\\\u0026#34;, \\\u0026#34;text\\\u0026#34;: { \\\u0026#34;content\\\u0026#34;: \\\u0026#34;[${time3}]正在编译中\\\u0026#34; } }\u0026#34; cd /home/git/项目目录 cnpm run build cd /home/git/compile/另一个项目目录 time3=$(date \u0026#34;+%Y-%m-%d %H:%M:%S\u0026#34;) git pull /usr/bin/rsync -avu --delete --exclude \u0026#34;.git\u0026#34; /home/git/项目目录/dist/ /home/git/compile/另一个项目目录 git add . git commit -m \u0026#34;${time3}\u0026#34; git push curl --location --request POST \u0026#39;https://oapi.dingtalk.com/robot/send?access_token=钉钉的access_token\u0026#39; \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --data \u0026#34;{ \\\u0026#34;msgtype\\\u0026#34;: \\\u0026#34;text\\\u0026#34;, \\\u0026#34;text\\\u0026#34;: { \\\u0026#34;content\\\u0026#34;: \\\u0026#34;[${time3}]编译完毕\\\u0026#34; } }\u0026#34; ~ ~ ","permalink":"/tech/gitblit/","summary":"前言 在外网正式环境中如果配置不足,编译前端项目可能导致服务器的卡死甚至死机,因此可采取内网服务器上编译再自动发布\n目标 内网编译前端项目,分发到另一个git项目并自动提交发布\n前置条件 gitblit\n正式内容 1. 创建 append-auto-compile.groovy import com.gitblit.GitBlit import com.gitblit.Keys import com.gitblit.models.RepositoryModel import com.gitblit.models.TeamModel import com.gitblit.models.UserModel import com.gitblit.utils.JGitUtils import com.gitblit.utils.StringUtils import java.text.SimpleDateFormat import org.eclipse.jgit.api.CloneCommand import org.eclipse.jgit.api.PullCommand import org.eclipse.jgit.api.Git import org.eclipse.jgit.lib.Repository import org.eclipse.jgit.lib.Config import org.eclipse.jgit.revwalk.RevCommit import org.eclipse.jgit.transport.ReceiveCommand import org.eclipse.jgit.transport.ReceiveCommand.Result import org.eclipse.jgit.util.FileUtils import org.slf4j.Logger logger.info(\u0026#34;append-auto-compile hook triggered by ${user.username} for ${repository.name} l\u0026#34;) def rootFolder = \u0026#39;/home/git/\u0026#39; def bare = false def cloneAllBranches = true def cloneBranch = \u0026#39;refs/heads/master\u0026#39; def includeSubmodules = true def repoName = repository.","title":"Gitblit-如何实现自动编译发布"},{"content":"前言 目前github已经不允许使用账号密码上传代码,因此记录如何通过设置ssh来上传\n目标 前置条件 能运行ssh-keygen\n正式内容 ssh-keygen -t rsa -C \u0026ldquo;email\u0026rdquo;\n在 C:\\Users\\用户.ssh下\n|- id_rsa (上传的时候携带该数据)\n|- id_rsa.pub (可在项目或者个人中心设置中添加该数据)\n如果想要免密码上传代码\n可输入 http://账号:密码@url.gt\n","permalink":"/tech/github-001/","summary":"前言 目前github已经不允许使用账号密码上传代码,因此记录如何通过设置ssh来上传\n目标 前置条件 能运行ssh-keygen\n正式内容 ssh-keygen -t rsa -C \u0026ldquo;email\u0026rdquo;\n在 C:\\Users\\用户.ssh下\n|- id_rsa (上传的时候携带该数据)\n|- id_rsa.pub (可在项目或者个人中心设置中添加该数据)\n如果想要免密码上传代码\n可输入 http://账号:密码@url.gt","title":"Github-"},{"content":"自定义的一个小功能,线程池处理,用法很简单\ndef handleThread(a,b): pass main = ThreadPool(5) req = WorkRequest(handleThread, args=[1, 2], kwds={}) main.putRequest(req) #-*-encoding:utf-8-*- \u0026#39;\u0026#39;\u0026#39; Created on 2012-3-9 @summary: 线程池 \u0026#39;\u0026#39;\u0026#39; import sys import threading import queue import traceback import statistics # 定义一些Exception，用于自定义异常处理 class NoResultsPending(Exception): \u0026#34;\u0026#34;\u0026#34;All works requests have been processed\u0026#34;\u0026#34;\u0026#34; pass class NoWorkersAvailable(Exception): \u0026#34;\u0026#34;\u0026#34;No worket threads available to process remaining requests.\u0026#34;\u0026#34;\u0026#34; pass def _handle_thread_exception(request, exc_info): \u0026#34;\u0026#34;\u0026#34;默认的异常处理函数，只是简单的打印\u0026#34;\u0026#34;\u0026#34; traceback.print_exception(*exc_info) #classes class WorkerThread(threading.Thread): \u0026#34;\u0026#34;\u0026#34;后台线程，真正的工作线程，从请求队列(requestQueue)中获取work， 并将执行后的结果添加到结果队列(resultQueue)\u0026#34;\u0026#34;\u0026#34; def __init__(self,requestQueue,resultQueue,poll_timeout=5,**kwds): threading.Thread.__init__(self,**kwds) \u0026#39;\u0026#39;\u0026#39;设置为守护进行\u0026#39;\u0026#39;\u0026#39; self.setDaemon(True) self._requestQueue = requestQueue self._resultQueue = resultQueue self._poll_timeout = poll_timeout \u0026#39;\u0026#39;\u0026#39;设置一个flag信号，用来表示该线程是否还被dismiss,默认为false\u0026#39;\u0026#39;\u0026#39; self._dismissed = threading.Event() self.start() # self.join() def run(self): \u0026#39;\u0026#39;\u0026#39;每个线程尽可能多的执行work，所以采用loop， 只要线程可用，并且requestQueue有work未完成，则一直loop\u0026#39;\u0026#39;\u0026#39; while True: if self._dismissed.is_set(): break try: \u0026#39;\u0026#39;\u0026#39; Queue.Queue队列设置了线程同步策略，并且可以设置timeout。 一直block，直到requestQueue有值，或者超时 \u0026#39;\u0026#39;\u0026#39; request = self._requestQueue.get(True, self._poll_timeout) except queue.Empty: continue else: \u0026#39;\u0026#39;\u0026#39;之所以在这里再次判断dimissed，是因为之前的timeout时间里，很有可能，该线程被dismiss掉了\u0026#39;\u0026#39;\u0026#39; if self._dismissed.is_set(): self._requestQueue.put(request) break try: \u0026#39;\u0026#39;\u0026#39;执行callable，讲请求和结果以tuple的方式放入requestQueue\u0026#39;\u0026#39;\u0026#39; result = request.callable(*request.args, **request.kwds) # statistics.g_logger.debug self.getName() self._resultQueue.put((request, result)) except: \u0026#39;\u0026#39;\u0026#39;异常处理\u0026#39;\u0026#39;\u0026#39; request.exception = True self._resultQueue.put((request, sys.exc_info())) def dismiss(self): \u0026#39;\u0026#39;\u0026#39; 设置一个标志，表示完成当前work之后，退出 \u0026#39;\u0026#39;\u0026#39; self._dismissed.set() class WorkRequest: \u0026#39;\u0026#39;\u0026#39; @param callable_:，可定制的，执行work的函数 @param args: 列表参数 @param kwds: 字典参数 @param requestID: id @param callback: 可定制的，处理resultQueue队列元素的函数 @param exc_callback:可定制的，处理异常的函数 \u0026#39;\u0026#39;\u0026#39; def __init__(self, callable_, args=None, kwds=None, requestID=None, callback=None, exc_callback=_handle_thread_exception): if requestID == None: self.requestID = id(self) else: try: self.requestID = hash(requestID) except TypeError: raise TypeError(\u0026#34;requestId must be hashable\u0026#34;) self.exception = False self.callback = callback self.exc_callback = exc_callback self.callable = callable_ self.args = args or [] self.kwds = kwds or {} def __str__(self): return \u0026#34;WorkRequest id=%s args=%r kwargs=%r exception=%s\u0026#34; % \\ (self.requestID, self.args, self.kwds, self.exception) class ThreadPool: \u0026#39;\u0026#39;\u0026#39; @param num_workers:初始化的线程数量 @param q_size,resq_size: requestQueue和result队列的初始大小 @param poll_timeout: 设置工作线程WorkerThread的timeout，也就是等待requestQueue的timeout \u0026#39;\u0026#39;\u0026#39; def __init__(self, num_workers, q_size=0, resq_size=0, poll_timeout=5): self._requestQueue = queue.Queue(q_size) self._resultQueue = queue.Queue(resq_size) self.workers = [] self.dismissedWorkers = [] self.workRequests = {} #设置个字典，方便使用 self.createWorkers(num_workers,poll_timeout) def createWorkers(self,num_workers,poll_timeout=5): \u0026#39;\u0026#39;\u0026#39;创建num_workers个WorkThread,默认timeout为5\u0026#39;\u0026#39;\u0026#39; for i in range(num_workers): self.workers.append(WorkerThread(self._requestQueue, self._resultQueue, poll_timeout=poll_timeout)) def dismissWorkers(self, num_workers, do_join=False): \u0026#39;\u0026#39;\u0026#39;停用num_workers数量的线程，并加入dismiss_list\u0026#39;\u0026#39;\u0026#39; dismiss_list = [] for i in range(min(num_workers, len(self.workers))): worker = self.workers.pop() worker.dismiss() dismiss_list.append(worker) if do_join: for worker in dismiss_list: worker.join() else: self.dismissedWorkers.extend(dismiss_list) def joinAllDismissedWorkers(self): \u0026#39;\u0026#39;\u0026#39;join 所有停用的thread\u0026#39;\u0026#39;\u0026#39; #statistics.g_logger.info len(self.dismissedWorkers) for worker in self.dismissedWorkers: worker.join() self.dismissedWorkers = [] def putRequest(self, request, block=True, timeout=None): assert isinstance(request, WorkRequest) assert not getattr(request, \u0026#39;exception\u0026#39;, None) \u0026#39;\u0026#39;\u0026#39;当queue满了，也就是容量达到了前面设定的q_size,它将一直阻塞，直到有空余位置，或是timeout\u0026#39;\u0026#39;\u0026#39; self._requestQueue.put(request, block, timeout) self.workRequests[request.requestID] = request def poll(self, block=False): while True: if not self.workRequests: raise NoResultsPending elif block and not self.workers: raise NoWorkersAvailable try: \u0026#39;\u0026#39;\u0026#39;默认只要resultQueue有值，则取出，否则一直block\u0026#39;\u0026#39;\u0026#39; request, result = self._resultQueue.get(block=block) if request.exception and request.exc_callback: request.exc_callback(request, result) if request.callback and not (request.exception and request.exc_callback): request.callback(request, result) del self.workRequests[request.requestID] except queue.Empty: break except Exception as e: # statistics.g_logger.error(traceback.print_exc()) # statistics.g_logger.info(e) pass def wait(self): while True: try: self.poll(True) except NoResultsPending: break def workersize(self): return len(self.workers) def stop(self): \u0026#39;\u0026#39;\u0026#39;join 所有的thread,确保所有的线程都执行完毕\u0026#39;\u0026#39;\u0026#39; self.dismissWorkers(self.workersize(), True) self.joinAllDismissedWorkers() #Test a demo if __name__==\u0026#39;__main__\u0026#39;: import random import time import datetime def do_work(data): time.sleep(random.randint(1, 3)) res = str(datetime.datetime.now()) + \u0026#34; \u0026#34; + str(data) return res def print_result(request,result): print(\u0026#34;---Result from request %s : %r\u0026#34; % (request.requestID, result)) # statistics.g_logger.info(\u0026#34;---Result from request %s : %r\u0026#34; % (request.requestID, result)) main = ThreadPool(3) for i in range(40): req = WorkRequest(do_work, args=[i], kwds={}, callback=print_result) main.putRequest(req) print(\u0026#34;work request #%s added.\u0026#34; % req.requestID) # statistics.g_logger.info(\u0026#34;work request #%s added.\u0026#34; % req.requestID) print(\u0026#34;work request #%s added.\u0026#34; % req.requestID) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize() + \u0026#39;-\u0026#39;*20) counter = 0 while True: try: time.sleep(0.5) main.poll() if(counter==5): statistics.g_logger.info(\u0026#34;Add 3 more workers threads\u0026#34;) main.createWorkers(3) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize()+\u0026#39;-\u0026#39;*20) if(counter==10): statistics.g_logger.info(\u0026#34;dismiss 2 workers threads\u0026#34;) main.dismissWorkers(2) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize() + \u0026#39;-\u0026#39;*20) counter+=1 except NoResultsPending: statistics.g_logger.info(\u0026#34;no pending results\u0026#34;) break main.stop() statistics.g_logger.info(\u0026#34;Stop\u0026#34;) ","permalink":"/code/python-threadpool/","summary":"自定义的一个小功能,线程池处理,用法很简单\ndef handleThread(a,b): pass main = ThreadPool(5) req = WorkRequest(handleThread, args=[1, 2], kwds={}) main.putRequest(req) #-*-encoding:utf-8-*- \u0026#39;\u0026#39;\u0026#39; Created on 2012-3-9 @summary: 线程池 \u0026#39;\u0026#39;\u0026#39; import sys import threading import queue import traceback import statistics # 定义一些Exception，用于自定义异常处理 class NoResultsPending(Exception): \u0026#34;\u0026#34;\u0026#34;All works requests have been processed\u0026#34;\u0026#34;\u0026#34; pass class NoWorkersAvailable(Exception): \u0026#34;\u0026#34;\u0026#34;No worket threads available to process remaining requests.\u0026#34;\u0026#34;\u0026#34; pass def _handle_thread_exception(request, exc_info): \u0026#34;\u0026#34;\u0026#34;默认的异常处理函数，只是简单的打印\u0026#34;\u0026#34;\u0026#34; traceback.print_exception(*exc_info) #classes class WorkerThread(threading.Thread): \u0026#34;\u0026#34;\u0026#34;后台线程，真正的工作线程，从请求队列(requestQueue)中获取work， 并将执行后的结果添加到结果队列(resultQueue)\u0026#34;\u0026#34;\u0026#34; def __init__(self,requestQueue,resultQueue,poll_timeout=5,**kwds): threading.Thread.__init__(self,**kwds) \u0026#39;\u0026#39;\u0026#39;设置为守护进行\u0026#39;\u0026#39;\u0026#39; self.setDaemon(True) self._requestQueue = requestQueue self.","title":"python-自定义线程池"},{"content":"前言 对于某些网站平台如果想支持收取波场区块链,但是又不清楚完整的流程应该如何部署的话,这里可以提供一套较为完整的方案,实现如商城下支持对客户的在线支付,\n目标 实现客户在线支付,收取波场链的usdt或usdc,并且自动支付和激活订单,最后能归集到一个账户上自由使用\n前置条件 在波场链有足够的trx,数量的多少取决于你对于归集的效率的需求,如果需要归集的周期越短,效率越快,则需要的trx越多\n1个总钱包,其中会扩展的功能有,分发冻结能量,收款,激活钱包,也可以看业务需要拆开成3个钱包\n开发环境: python mysql\n正式内容 所有的接口以及交互均来自 波场链官网文档 ,如果对于文档不太熟的同学请先阅读了解下波场链的交易流程\n主要数据结构 节点数据 block_chain_block\n数据类型 类型 描述 id bigint 区块节点 total int 总交易数 active int 已激活交易数 created_at timestamp 创建时间 updated_at timestamp 更新时间 started_at timestamp 开始执行时间 ended_at timestamp 结束执行时间 block_at timestamp 节点时间 error timestamp 节点错误信息 钱包数据 block_chain_wallet\n数据类型 类型 描述 id int 自增id address varchar(255) 地址 private_key varchar(1024) 地址密钥(建议保存到数据库时加密) user_id int 客户用户ID created_at timestamp 创建时间 updated_at timestamp 更新时间 deposit decimal(30,6) 余额 status varchar(16) 状态 扫块系统 想要获取到链上所有的交易信息,主要有两种方式,第一自建超级节点服务器,这样就可以频繁获取数据而不受限制,但是对于一般的网站平台来说,搭建一台波场链节点服务器浪费了资金,因此这里采用第二种方式,通过官网提供的接口进行查询同步,需注意本文涉及用到的接口均是固块化API\n查询当前最新节点 文档 通过接口获取到当前最新节点和本地已同步的节点比较,能知道当前程序同步的情况如何,如果存在\u0026quot;追不上\u0026quot;差值越来越大,可能需要增加线程处理等方式 接口: /walletsolidity/getnowblock\n{ \u0026#34;blockID\u0026#34;: \u0026#34;000000000198e6cee71c8e83366b925e64c5cf715529ac009bfbaff132e98d6b\u0026#34;, \u0026#34;block_header\u0026#34;: { \u0026#34;raw_data\u0026#34;: { \u0026#34;number\u0026#34;: 26797774, \u0026#34;txTrieRoot\u0026#34;: \u0026#34;f5689c087055959a66ac7638e79c57319dffb84631992852791a3f47784b267e\u0026#34;, \u0026#34;witness_address\u0026#34;: \u0026#34;41d42e593de3cee8156934cc2182ef4d107e9291f0\u0026#34;, \u0026#34;parentHash\u0026#34;: \u0026#34;000000000198e6cde394799dcc330b00422a8cc028be767526e1f1500afcd682\u0026#34;, \u0026#34;version\u0026#34;: 24, \u0026#34;timestamp\u0026#34;: 1660618479000 }, \u0026#34;witness_signature\u0026#34;: \u0026#34;c4317733f65fe7a9f3d235f9037b903cb1e3c6b2192f4dce5a24930c92f0663167ed9dbbdb5c134692c107416d44a874d07fd62dc61fed4bde318eae3adf8f0300\u0026#34; }, \u0026#34;transactions\u0026#34;: [ { \u0026#34;ret\u0026#34;: [ { \u0026#34;contractRet\u0026#34;: \u0026#34;SUCCESS\u0026#34; } ], \u0026#34;signature\u0026#34;: [ \u0026#34;fd0750453b2ae27ae02df417b724518ceac4fb432181f30dafddc2e73d83784768143ae9e12cb15816c9f852436f48303fd927aa3e6908cc9880ecf505fffe8300\u0026#34; ], \u0026#34;txID\u0026#34;: \u0026#34;92e168626aa79ed3c307ce2030acf12aa92dcb6114f66b53a8243dba738ea720\u0026#34;, \u0026#34;raw_data\u0026#34;: { \u0026#34;contract\u0026#34;: [ { \u0026#34;parameter\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;amount\u0026#34;: 650, \u0026#34;owner_address\u0026#34;: \u0026#34;411b51ed3f22cec14b4c53abb99c4f5bff1aa5b5d1\u0026#34;, \u0026#34;to_address\u0026#34;: \u0026#34;41a7040c812f5e8188243bc781dfbcace984ec832b\u0026#34; }, \u0026#34;type_url\u0026#34;: \u0026#34;type.googleapis.com/protocol.TransferContract\u0026#34; }, \u0026#34;type\u0026#34;: \u0026#34;TransferContract\u0026#34; } ], \u0026#34;ref_block_bytes\u0026#34;: \u0026#34;e6bb\u0026#34;, \u0026#34;ref_block_hash\u0026#34;: \u0026#34;2f39e8e056fb3672\u0026#34;, \u0026#34;expiration\u0026#34;: 1660618536000, \u0026#34;timestamp\u0026#34;: 1660618476362 }, \u0026#34;raw_data_hex\u0026#34;: \u0026#34;0a02e6bb22082f39e8e056fb367240c0e8cfa4aa305a66080112620a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412310a15411b51ed3f22cec14b4c53abb99c4f5bff1aa5b5d1121541a7040c812f5e8188243bc781dfbcace984ec832b188a0570ca96cca4aa30\u0026#34; }, { \u0026#34;ret\u0026#34;: [ { \u0026#34;contractRet\u0026#34;: \u0026#34;SUCCESS\u0026#34; } ], \u0026#34;signature\u0026#34;: [ \u0026#34;6fc213cc693d9aadf7941792e5ee35dd33203290428391be499e9ea1f9799febbc5265eea5ed342b5c006a8a9e7113bbc34ecf148005e32cd8ea127ecbd094a700\u0026#34; ], \u0026#34;txID\u0026#34;: \u0026#34;48855473d1263692f6b8ce34c654996cdb05d89fcbd7c8eb152736fcd4c10bb7\u0026#34;, \u0026#34;raw_data\u0026#34;: { \u0026#34;contract\u0026#34;: [ { \u0026#34;parameter\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;amount\u0026#34;: 60500, \u0026#34;owner_address\u0026#34;: \u0026#34;41b3dbb883203c53cdf3d7d85521ee8322c1d92125\u0026#34;, \u0026#34;to_address\u0026#34;: \u0026#34;41000e42c42d4d525eb291ef7374da28d3f251c9b0\u0026#34; }, \u0026#34;type_url\u0026#34;: \u0026#34;type.googleapis.com/protocol.TransferContract\u0026#34; }, \u0026#34;type\u0026#34;: \u0026#34;TransferContract\u0026#34; } ], \u0026#34;ref_block_bytes\u0026#34;: \u0026#34;e6bb\u0026#34;, \u0026#34;ref_block_hash\u0026#34;: \u0026#34;2f39e8e056fb3672\u0026#34;, \u0026#34;expiration\u0026#34;: 1660618537006, \u0026#34;timestamp\u0026#34;: 1660618477006 }, \u0026#34;raw_data_hex\u0026#34;: \u0026#34;0a02e6bb22082f39e8e056fb367240aef0cfa4aa305a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541b3dbb883203c53cdf3d7d85521ee8322c1d92125121541000e42c42d4d525eb291ef7374da28d3f251c9b018d4d80370ce9bcca4aa30\u0026#34; } ] } 当前节点为 now_block_num = int(GetNowBlock.get(\u0026lsquo;block_header\u0026rsquo;).get(\u0026lsquo;raw_data\u0026rsquo;).get(\u0026rsquo;number\u0026rsquo;))\n查询数据表中已同步最新的节点 block = session.query(BlockChainBlock).order_by(BlockChainBlock.id.desc()).first() if block is None: blocksnum = now_block_num - 95 else: blocksnum = block.id + 1 if blocksnum \u0026gt; now_block_num: print(\u0026#34;扫块速度过快超过波场出块,停歇一会\u0026#34;) time.sleep(3) continue 每次按批查询一定节点的数据 min_block_num = min(blocksnum + 30, now_block_num) for i in range(blocksnum, min_block_num): block = session.query(BlockChainBlock).filter(BlockChainBlock.id == i).first() if block is not None: continue else: block = BlockChainBlock( id=i, total=0, active=0, created_at=datetime.datetime.now(), updated_at=datetime.datetime.now(), ) session.add(block) session.commit() req = WorkRequest(handleThread, args=[i, 1], kwds={}) main.putRequest(req) # 将之前没同步到的区块重新查一下 history_block_list = session.query(BlockChainBlock) \\ .filter( # BlockChainBlock.ended_at == None, BlockChainBlock.error == \u0026#39;503 Service Temporarily Unavailable\u0026#39;, BlockChainBlock.updated_at \u0026lt;= (datetime.datetime.now() - datetime.timedelta(minutes=15)).strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)) \\ .all() for block in history_block_list: block.updated_at = datetime.datetime.now() session.add(block) session.commit() req = WorkRequest(handleThread, args=[block.id, 1], kwds={}) main.putRequest(req) try: # 清理一下历史没问题的节点数据,释放数据库空间 session.query(BlockChainBlock).filter( BlockChainBlock.active == 0, # BlockChainBlock.ended_at != None, BlockChainBlock.updated_at \u0026lt;= (datetime.datetime.now() - datetime.timedelta(hours=6)).strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) ).delete() session.commit() except Exception as e: print(e) pass # 如果当前最新需同步的区块较少的,可等待久点累积一下 if min_block_num - blocksnum \u0026lt; 5: time.sleep(10) else: time.sleep(1) 处理节点数据,获取交易列表详情\n这段的代码比较多,基本来说就是获取每个节点下的交易数据,然后把每条交易数据进行解析,获取需要合约地址,金额,对象,时间,这样处理后扫块的流程基本就完结 pool_engine = create_engine(config.SQLALCHEMY_DATABASE_URI, pool_size=10, max_overflow=10, pool_timeout=180) PoolSession = sessionmaker(bind=pool_engine) def handleThread(blocksnum, delay=0): trx = Trx(None) session = PoolSession() block = session.query(BlockChainBlock).filter(BlockChainBlock.id == blocksnum).first() #更新开始执行时间 block.started_at = datetime.datetime.now() block.error = \u0026#34;\u0026#34; session.add(block) session.commit() try: #获取当前节点的全部交易数据 transactionsData = trx.get_walletsolidity_block_by_num(block.id) except Exception as e: print(\u0026#34;get_walletsolidity_block_by_num\u0026#34;) print(e) block.error = \u0026#34;503 Service Temporarily Unavailable\u0026#34; block.ended_at = datetime.datetime.now() session.add(block) session.commit() session.close() return try: transaction_at = (transactionsData[\u0026#39;block_header\u0026#39;][\u0026#39;raw_data\u0026#39;][\u0026#39;timestamp\u0026#39;]) / 1000 transaction_at = time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;, time.localtime(transaction_at)) except Exception as e: print(e) block.error = \u0026#34;not timestamp\u0026#34; block.ended_at = datetime.datetime.now() session.add(block) session.commit() session.close() return if transactionsData.get(\u0026#34;transactions\u0026#34;) is None: block.error = \u0026#34;not transactions\u0026#34; block.ended_at = datetime.datetime.now() block.block_at = transaction_at session.add(block) session.commit() session.close() return block.block_at = transaction_at block.total = len(transactionsData[\u0026#39;transactions\u0026#39;]) session.add(block) session.commit() active = 0 exist_count = 0 for transaction in transactionsData[\u0026#39;transactions\u0026#39;]: out_trade_no = transaction[\u0026#39;txID\u0026#39;] status = transaction[\u0026#39;ret\u0026#39;][0][\u0026#39;contractRet\u0026#39;].lower() if status != \u0026#39;success\u0026#39;: continue try: contract = transaction[\u0026#39;raw_data\u0026#39;][\u0026#39;contract\u0026#39;][0][\u0026#39;parameter\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;contract_address\u0026#39;] contract = keys.to_base58check_address(contract) except: continue #active_contract = None #for contract_address in config_contract.contract_address: # if contract_address.get(\u0026#34;address\u0026#34;) == contract: # active_contract = contract_address # break #if active_contract is None: # continue func = transaction[\u0026#39;raw_data\u0026#39;][\u0026#34;contract\u0026#34;][0][\u0026#34;parameter\u0026#34;][\u0026#34;value\u0026#34;][\u0026#34;data\u0026#34;][0:8] if func != \u0026#34;a9059cbb\u0026#34;: continue to_address = keys.to_base58check_address( transaction[\u0026#39;raw_data\u0026#39;][\u0026#34;contract\u0026#34;][0][\u0026#34;parameter\u0026#34;][\u0026#34;value\u0026#34;][\u0026#34;data\u0026#34;][9:72].lstrip(\u0026#34;0\u0026#34;)) try: transactionAmount = int( transaction[\u0026#39;raw_data\u0026#39;][\u0026#34;contract\u0026#34;][0][\u0026#34;parameter\u0026#34;][\u0026#34;value\u0026#34;][\u0026#34;data\u0026#34;][72:].lstrip(\u0026#34;0\u0026#34;), 16) / 1000000 except: continue # transaction_at 交易时间 # contract 合约地址 # to_address 收款地址 # transactionAmount 收款金额 # 实现自己的功能 block.ended_at = datetime.datetime.now() block.doed_at = transaction_at block.active = active session.add(block) session.commit() 多线程处理 handleThread 节点之间的数据查询并不会影响,因此在处理节点数据handleThread的时候,可增加多线程来操作,加快扫块的效率 本文主要讲述的是扫块的模块,还有冻结能量的模块另外再展开说明\n","permalink":"/tech/tronlink-001/","summary":"前言 对于某些网站平台如果想支持收取波场区块链,但是又不清楚完整的流程应该如何部署的话,这里可以提供一套较为完整的方案,实现如商城下支持对客户的在线支付,\n目标 实现客户在线支付,收取波场链的usdt或usdc,并且自动支付和激活订单,最后能归集到一个账户上自由使用\n前置条件 在波场链有足够的trx,数量的多少取决于你对于归集的效率的需求,如果需要归集的周期越短,效率越快,则需要的trx越多\n1个总钱包,其中会扩展的功能有,分发冻结能量,收款,激活钱包,也可以看业务需要拆开成3个钱包\n开发环境: python mysql\n正式内容 所有的接口以及交互均来自 波场链官网文档 ,如果对于文档不太熟的同学请先阅读了解下波场链的交易流程\n主要数据结构 节点数据 block_chain_block\n数据类型 类型 描述 id bigint 区块节点 total int 总交易数 active int 已激活交易数 created_at timestamp 创建时间 updated_at timestamp 更新时间 started_at timestamp 开始执行时间 ended_at timestamp 结束执行时间 block_at timestamp 节点时间 error timestamp 节点错误信息 钱包数据 block_chain_wallet\n数据类型 类型 描述 id int 自增id address varchar(255) 地址 private_key varchar(1024) 地址密钥(建议保存到数据库时加密) user_id int 客户用户ID created_at timestamp 创建时间 updated_at timestamp 更新时间 deposit decimal(30,6) 余额 status varchar(16) 状态 扫块系统 想要获取到链上所有的交易信息,主要有两种方式,第一自建超级节点服务器,这样就可以频繁获取数据而不受限制,但是对于一般的网站平台来说,搭建一台波场链节点服务器浪费了资金,因此这里采用第二种方式,通过官网提供的接口进行查询同步,需注意本文涉及用到的接口均是固块化API","title":"tronlink-从0到1搭建自己的归集系统"},{"content":"Message 简单来说就是消息,在微信中聊天的文字,转账,语音等等都是消息的一种,因此是最重要的一项 官网\n# 消息类型 class MessageType(betterproto.Enum): MESSAGE_TYPE_UNSPECIFIED = 0 MESSAGE_TYPE_ATTACHMENT = 1 MESSAGE_TYPE_AUDIO = 2 MESSAGE_TYPE_CONTACT = 3 MESSAGE_TYPE_EMOTICON = 4 MESSAGE_TYPE_IMAGE = 5 图像 MESSAGE_TYPE_TEXT = 6 文字 MESSAGE_TYPE_VIDEO = 7 MESSAGE_TYPE_CHAT_HISTORY = 8 MESSAGE_TYPE_LOCATION = 9 MESSAGE_TYPE_MINI_PROGRAM = 10 MESSAGE_TYPE_TRANSFER = 11 MESSAGE_TYPE_RED_ENVELOPE = 12 MESSAGE_TYPE_RECALLED = 13 MESSAGE_TYPE_URL = 14 常用说明:\ntype 消息类型,具体类型参考上述 print(msg.type()) text 接受的文本信息 print(msg.text()) say 回复信息,不仅文本消息,图片等都可以发送 await msg.say(msg.text()) 发送图片\nfrom wechaty import (FileBox) file_box = FileBox.from_url(\u0026#39;https://wechaty.js.org/img/icon.png\u0026#39;, name=\u0026#39;ding-dong.jpg\u0026#39;) await msg.say(file_box) talker 发送者 print(msg.talker()) is_self -\u0026gt; bool 判断是否自己发出的消息 if msg.is_self() is False: room -\u0026gt; [Room,None] 获取当前消息所在的微信群,如果不存在返回None msg.room() ###Room 微信群,可实现自动邀请进群,踢群等动作 官网\n常用说明:\nfind 根据条件搜索特定的微信群 topic = \u0026#39;微信群名\u0026#39; await self.Room.find(query=RoomQueryFilter(topic=topic)) add 邀请好友进群 await room.add(msg.talker()) delete 踢人出群 await room.delete(msg.talker()) Contact指微信中的好友 常用说明:\nfind from wechaty import (ContactQueryFilter) await self.Contact.find(query=ContactQueryFilter(name=\u0026#34;微信昵称\u0026#34;)) 其中 ContactQueryFilter 表示搜索的条件,可根据特定的条件搜索出指定的微信用户\n@dataclass class ContactQueryFilter: \u0026#34;\u0026#34;\u0026#34; alias can be regular expression \u0026#34;\u0026#34;\u0026#34; alias: Optional[str] = None 备注名 id: Optional[str] = None name: Optional[str] = None 微信昵称 weixin: Optional[str] = None ","permalink":"/study/wechaty-002/","summary":"Message 简单来说就是消息,在微信中聊天的文字,转账,语音等等都是消息的一种,因此是最重要的一项 官网\n# 消息类型 class MessageType(betterproto.Enum): MESSAGE_TYPE_UNSPECIFIED = 0 MESSAGE_TYPE_ATTACHMENT = 1 MESSAGE_TYPE_AUDIO = 2 MESSAGE_TYPE_CONTACT = 3 MESSAGE_TYPE_EMOTICON = 4 MESSAGE_TYPE_IMAGE = 5 图像 MESSAGE_TYPE_TEXT = 6 文字 MESSAGE_TYPE_VIDEO = 7 MESSAGE_TYPE_CHAT_HISTORY = 8 MESSAGE_TYPE_LOCATION = 9 MESSAGE_TYPE_MINI_PROGRAM = 10 MESSAGE_TYPE_TRANSFER = 11 MESSAGE_TYPE_RED_ENVELOPE = 12 MESSAGE_TYPE_RECALLED = 13 MESSAGE_TYPE_URL = 14 常用说明:\ntype 消息类型,具体类型参考上述 print(msg.type()) text 接受的文本信息 print(msg.text()) say 回复信息,不仅文本消息,图片等都可以发送 await msg.say(msg.text()) 发送图片\nfrom wechaty import (FileBox) file_box = FileBox.","title":"wechaty-描述各方法的类型"},{"content":"wechaty能做到什么 能自定制微信机器人服务,为你订造专属智能客服 能利用微信强大的社交机制带来潜在利益 github | 官网教程\n其他教程 wechaty.readthedocs.io\n有关视频教程资源:\nlive-coding\nAI情话\n准备阶段，有条件的小伙伴可以自己搭建一个服务端，好处就在于免费，或者可以使用网上其他提供协议,可参考 Padlocal协议 和 Paimon协议, 本教程主要以自搭建为主\n","permalink":"/study/wechaty-001/","summary":"wechaty能做到什么 能自定制微信机器人服务,为你订造专属智能客服 能利用微信强大的社交机制带来潜在利益 github | 官网教程\n其他教程 wechaty.readthedocs.io\n有关视频教程资源:\nlive-coding\nAI情话\n准备阶段，有条件的小伙伴可以自己搭建一个服务端，好处就在于免费，或者可以使用网上其他提供协议,可参考 Padlocal协议 和 Paimon协议, 本教程主要以自搭建为主","title":"wechaty-初识wechaty用途"},{"content":"seo一般指搜索引擎优化，主要就是为了网站让更多人发现和访问，记录一下了解过程中有关的\n5118.com 一种站长工具,支持各种的关键词搜索,对于检测seo有很大的帮助 百度站长平台\n360站长平台\n神马站长平台\n","permalink":"/life/seo/","summary":"seo一般指搜索引擎优化，主要就是为了网站让更多人发现和访问，记录一下了解过程中有关的\n5118.com 一种站长工具,支持各种的关键词搜索,对于检测seo有很大的帮助 百度站长平台\n360站长平台\n神马站长平台","title":"seo"},{"content":"实现功能模块\n房屋模块\n|-创建房子\n|-创建合同\n|-定时确认账单 统计模块\n|-查阅最近1年每月的收支情况 |-获取到最新房屋合同的动态 推送模块 |-自定义订阅需要推送的日期 ","permalink":"/life/wechat-rent/","summary":"实现功能模块\n房屋模块\n|-创建房子\n|-创建合同\n|-定时确认账单 统计模块\n|-查阅最近1年每月的收支情况 |-获取到最新房屋合同的动态 推送模块 |-自定义订阅需要推送的日期 ","title":"微信小程序-云收租"},{"content":"[github]路径(https://github.com/suguer/python-tronlink-scan)\npython-tronlink-scan 波场链的扫块功能,如果对于需要获取波场链上的交易情况,又没有条件部署一台自己的节点,那么采用本文的方式是一个不错的选择,通过调用接口也能及时获取到交易信息\n安装需要的用到的插件\npip install -r requirements.txt 运行即可,有需要的可调整为数据库的结构来存\npython main.py example: 需要记录的合约 config/contract.csv\n地址|名称|精度\naddress,name,decimals TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,USDT,6 TEkxiTehnzSmSe2XqrBj4w32RUN966rdz8,USDC,6 TAFjULxiVgT4qWk6UZwjqwZXTSaGaqnVp4,BitTorrent,18 需要记录的钱包 config/wallet.csv\n地址|密钥\naddress,private_key TSRg164MqUKMxDn2eQYvAg9iFNhQYXAFa8, TNV2h4c2ibuQKes5XTgwuuP9mdfQiAHxpL, TGn37A4yEjVBCXojhFNpZvovWvfNdzwC3x, 激活的要以 config/transaction.csv\nhash|区块|发出地址|接收地址|区块时间|数额|合约地址|状态\nhash,block,from,to,block_at,amount,contract_address,status f474e2ceb883637aae1f666adc7714309bf933cfd956173c68bd0512e2190f34,40967609,TPJA5T1QaJEZnCgujC36GpX2wGLYsYnqAh,TNV2h4c2ibuQKes5XTgwuuP9mdfQiAHxpL,2022-05-25 13:32:27,28.29,TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,success fbd03d69af7ba8e1f7c56dd11738c8d6269497193daf0efa23eff3ed477e6f12,40969058,TJDFLrCiKneK2rXjCudn4gGMcYhVeqB8ru,TGn37A4yEjVBCXojhFNpZvovWvfNdzwC3x,2022-05-25 14:45:06,7229.02,TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,success ","permalink":"/life/python-tronlink-scan/","summary":"[github]路径(https://github.com/suguer/python-tronlink-scan)\npython-tronlink-scan 波场链的扫块功能,如果对于需要获取波场链上的交易情况,又没有条件部署一台自己的节点,那么采用本文的方式是一个不错的选择,通过调用接口也能及时获取到交易信息\n安装需要的用到的插件\npip install -r requirements.txt 运行即可,有需要的可调整为数据库的结构来存\npython main.py example: 需要记录的合约 config/contract.csv\n地址|名称|精度\naddress,name,decimals TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,USDT,6 TEkxiTehnzSmSe2XqrBj4w32RUN966rdz8,USDC,6 TAFjULxiVgT4qWk6UZwjqwZXTSaGaqnVp4,BitTorrent,18 需要记录的钱包 config/wallet.csv\n地址|密钥\naddress,private_key TSRg164MqUKMxDn2eQYvAg9iFNhQYXAFa8, TNV2h4c2ibuQKes5XTgwuuP9mdfQiAHxpL, TGn37A4yEjVBCXojhFNpZvovWvfNdzwC3x, 激活的要以 config/transaction.csv\nhash|区块|发出地址|接收地址|区块时间|数额|合约地址|状态\nhash,block,from,to,block_at,amount,contract_address,status f474e2ceb883637aae1f666adc7714309bf933cfd956173c68bd0512e2190f34,40967609,TPJA5T1QaJEZnCgujC36GpX2wGLYsYnqAh,TNV2h4c2ibuQKes5XTgwuuP9mdfQiAHxpL,2022-05-25 13:32:27,28.29,TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,success fbd03d69af7ba8e1f7c56dd11738c8d6269497193daf0efa23eff3ed477e6f12,40969058,TJDFLrCiKneK2rXjCudn4gGMcYhVeqB8ru,TGn37A4yEjVBCXojhFNpZvovWvfNdzwC3x,2022-05-25 14:45:06,7229.02,TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t,success ","title":"python-波场区块链的扫块系统"},{"content":"域名竞价交易,即为域名充当交易物品进行价值交换,其中比较出名的有国内聚名 ,以及海外的GNAME, 以GNAME为例子讲述如何对接交易模块,\nGname的API接口文档\n过期预定预定 预定结束=\u0026gt; [抢注成功直接得标, 抢注失败直接失标, 抢注失败需竞价] 竞价域名,涉及到本地多人出价的竞价已经与远端竞价的比较 [直接出价,代理出价] 竞价结束 =\u0026gt; [竞价成功,竞价失败] 简单描述竞价流程\n竞价域名详情 DescribeAuctionInstance 参数 Domain 域名\n检查竞价类型 本地竞价 检查竞价时间是否已过期等 远端竞价 同步远端竞价详情,根据实际情况是否更新本地的出价进度 ##竞价域名出价 CreateAuctionInstance\n参数 Domain 域名 , Price 价格\n同步远端竞价详情,根据实际情况是否更新本地的出价进度 判断是否需要闯入竞价 判断余额是否足够支付提交的冻结金 判断本地是否存在代理出价 有其他用户的代理出价,并且当前出价高于Price,直接出局 该用户的代理出价则比较金额大小 大于单次最低出价就要生成代理出价 提交请求远端的出价记录 ","permalink":"/life/php-domain-auction/","summary":"域名竞价交易,即为域名充当交易物品进行价值交换,其中比较出名的有国内聚名 ,以及海外的GNAME, 以GNAME为例子讲述如何对接交易模块,\nGname的API接口文档\n过期预定预定 预定结束=\u0026gt; [抢注成功直接得标, 抢注失败直接失标, 抢注失败需竞价] 竞价域名,涉及到本地多人出价的竞价已经与远端竞价的比较 [直接出价,代理出价] 竞价结束 =\u0026gt; [竞价成功,竞价失败] 简单描述竞价流程\n竞价域名详情 DescribeAuctionInstance 参数 Domain 域名\n检查竞价类型 本地竞价 检查竞价时间是否已过期等 远端竞价 同步远端竞价详情,根据实际情况是否更新本地的出价进度 ##竞价域名出价 CreateAuctionInstance\n参数 Domain 域名 , Price 价格\n同步远端竞价详情,根据实际情况是否更新本地的出价进度 判断是否需要闯入竞价 判断余额是否足够支付提交的冻结金 判断本地是否存在代理出价 有其他用户的代理出价,并且当前出价高于Price,直接出局 该用户的代理出价则比较金额大小 大于单次最低出价就要生成代理出价 提交请求远端的出价记录 ","title":"php-域名竞价模块"},{"content":"Hugo添加Algolia搜索支持 本文主要介绍如何在Hugo上增加Algolia的搜索支持,Alogolia官网\n添加Algolia搜索支持主要以下步骤： ###1. 进入 Algolia 官网注册创建环境\n个人使用选择免费版即可,可以满足日常需求了\n地区若是国内则建议选择Hong Kong ,延迟较小效果比较好\n最后提交即可\n###2. 创建Application和Index 名称可自定义,我为了方便区别,创建都习惯用直接的域名作为名称 https://www.algolia.com/account/api-keys/all?applicationId=你的applicationId ###3. Hugo配置Algolia的环境\n修改 config.toml 文件声明需要生成Algolia索引文件以及相关信息 [outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;RSS\u0026rdquo;, \u0026ldquo;Algolia\u0026rdquo;]\n\u0026hellip;中间省略\n[outputFormats.Algolia]\nbaseName = \u0026ldquo;algolia\u0026rdquo;\nisPlainText = true\nmediaType = \u0026ldquo;application/json\u0026rdquo;\nnotAlternative = true\n[params.algolia]\nappId = \u0026ldquo;你的Application ID\u0026rdquo;\nindexName = \u0026ldquo;你的索引名字\u0026rdquo;\nsearchOnlyKey = \u0026ldquo;你的Search-Only API Key\u0026rdquo;\n注意outputs下面home的末尾有\u0026quot;Algolia\u0026quot;，漏了就不会生成了。 appId, indexName, searchOnlyKey 填写刚才记录的Algolia信息。\n根目录下 layouts/_default (没有就新建) 文件夹中新建 list.algolia.json 文件，内容如下: {{/* 生成Algolia搜索索引文件 /}}\n{{- $.Scratch.Add \u0026ldquo;index\u0026rdquo; slice -}}\n{{/ content/posts或content/post目录下的博文才生成索引 */}}\n{{- range where (where .Site.Pages \u0026ldquo;Type\u0026rdquo; \u0026ldquo;in\u0026rdquo; (slice \u0026ldquo;posts\u0026rdquo; \u0026ldquo;post\u0026rdquo;)) \u0026ldquo;IsPage\u0026rdquo; true -}}\n{{- if and (not .Draft) (not .Params.private) -}}\n{{- $.Scratch.Add \u0026ldquo;index\u0026rdquo; (dict \u0026ldquo;objectID\u0026rdquo; .File.UniqueID \u0026ldquo;url\u0026rdquo; .Permalink \u0026ldquo;content\u0026rdquo; (.Summary | plainify) \u0026ldquo;tags\u0026rdquo; .Params.Tags \u0026ldquo;lvl0\u0026rdquo; .Title \u0026ldquo;lvl1\u0026rdquo; .Params.Categories \u0026ldquo;lvl2\u0026rdquo; \u0026ldquo;摘要\u0026rdquo;) -}}\n{{- end -}}\n{{- end -}}\n{{- $.Scratch.Get \u0026ldquo;index\u0026rdquo; | jsonify -}}\n执行 hugo 命令(不用带参数)之后，在 public 目录下就会生成 algolia.json 文件\n安装 atomic-algolia npm init npm install atomic-algolia \u0026ndash;save\n修改目录下的 package.json 文件，在 scripts 下添加 \u0026quot;algolia\u0026quot;: \u0026quot;atomic-algolia\u0026quot;\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34;, \u0026#34;algolia\u0026#34;: \u0026#34;atomic-algolia\u0026#34; } } 配置.env\nALGOLIA_APP_ID= ALGOLIA_INDEX_NAME= ALGOLIA_INDEX_FILE= ALGOLIA_ADMIN_KEY= 执行hugo命令后,再执行npm run algolia,可以发现搜索的索引文件会自动发布到Algolia的服务器了\n###4. 最后一步搭建前端UI 在 layouts\\partials\\head.html中引入css和js\n{{- if .Site.Params.algolia.appId -}} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ `docsearch/docsearch.min.css` | absURL }}\u0026#34;\u0026gt; {{- end -}} \u0026lt;script src=\u0026#34;{{ `docsearch/docsearch.min.js` | absURL }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 在需要增加搜索框的组件上增加以下代码,例如我是在layouts\\partials\\navigation.html添加的\n{{- if .Site.Params.algolia.appId -}} \u0026lt;input type=\u0026#34;search\u0026#34; class=\u0026#34;docsearch-input-nav align-middle mr-2 \u0026#34; placeholder=\u0026#34;请输入关键词\u0026#34; /\u0026gt; \u0026lt;script\u0026gt; docsearch({ apiKey: {{ .Site.Params.algolia.searchOnlyKey }}, indexName: {{ .Site.Params.algolia.indexName }}, appId: {{ .Site.Params.algolia.appId }}, inputSelector: \u0026#39;.docsearch-input-nav\u0026#39;, debug: true, }); \u0026lt;/script\u0026gt; {{- end -}} ","permalink":"/tech/hugo-003/","summary":"Hugo添加Algolia搜索支持 本文主要介绍如何在Hugo上增加Algolia的搜索支持,Alogolia官网\n添加Algolia搜索支持主要以下步骤： ###1. 进入 Algolia 官网注册创建环境\n个人使用选择免费版即可,可以满足日常需求了\n地区若是国内则建议选择Hong Kong ,延迟较小效果比较好\n最后提交即可\n###2. 创建Application和Index 名称可自定义,我为了方便区别,创建都习惯用直接的域名作为名称 https://www.algolia.com/account/api-keys/all?applicationId=你的applicationId ###3. Hugo配置Algolia的环境\n修改 config.toml 文件声明需要生成Algolia索引文件以及相关信息 [outputs]\nhome = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;RSS\u0026rdquo;, \u0026ldquo;Algolia\u0026rdquo;]\n\u0026hellip;中间省略\n[outputFormats.Algolia]\nbaseName = \u0026ldquo;algolia\u0026rdquo;\nisPlainText = true\nmediaType = \u0026ldquo;application/json\u0026rdquo;\nnotAlternative = true\n[params.algolia]\nappId = \u0026ldquo;你的Application ID\u0026rdquo;\nindexName = \u0026ldquo;你的索引名字\u0026rdquo;\nsearchOnlyKey = \u0026ldquo;你的Search-Only API Key\u0026rdquo;\n注意outputs下面home的末尾有\u0026quot;Algolia\u0026quot;，漏了就不会生成了。 appId, indexName, searchOnlyKey 填写刚才记录的Algolia信息。\n根目录下 layouts/_default (没有就新建) 文件夹中新建 list.algolia.json 文件，内容如下: {{/* 生成Algolia搜索索引文件 /}}\n{{- $.Scratch.Add \u0026ldquo;index\u0026rdquo; slice -}}","title":"从0到1 记录搭建Hugo个人博客-03 使用Algolia搜索"},{"content":"官网 现在laravel的最新版已经升级到了9.0,目前公司还在用5.x版本,因此对于升级的注意事项做个记录,当做预防以后的踩坑\n注意事项\n同一个设置成支持php7.0,php8,新的9.0仅支持php8以上,为了能平滑迁移项目,需要服务器可支持2个版本 购物车插件gloudemans/shoppingcart 不可使用 , 测试 bumbummen99/shoppingcart 是否可替代 接收参数函数 Input::get() 废弃,用request()-\u0026gt;get() 替代 $input{$i+1} 花括号不可用 $input[$i+1] Route::controller 隐式控制路由废弃, 使用lesichkovm/laravel-advanced-route 插件 AdvancedRoute::controller 替代 队列在redis上保存的值有较大变动, laravel/vendor/laravel/framework/src/Illuminate/Queue/Queue.php createPayload函数 增加部分变量 laravel/vendor/laravel/framework/src/Illuminate/Queue/RedisQueue.php createPayload函数 attempts设置默认为0 原生类的构造函数改成__construct 对于整形和字符串判断更严格了,如mktime 参数必须是int; abs(\u0026quot;\u0026quot;) 会报错 有用到的废弃函数 create_function 需要更换 ORM查询返回的数据永远是obj类型, conf/database.inc.php 设置的$ORM-\u0026gt;setFetchMode(PDO::FETCH_ASSOC); 无效,源自 https://laravel.com/docs/5.4/upgrade 以上的记录是我实际的项目产生的问题,因此不一定适合大部分人\n正则表达式替换php7的语法警告\n(\\$[a-zA-Z\\_]+)\\[([a-zA-Z]+[a-zA-Z\\_\\d]*)\\] $1[\u0026#39;$2\u0026#39;] ","permalink":"/study/php-laravel-002/","summary":"官网 现在laravel的最新版已经升级到了9.0,目前公司还在用5.x版本,因此对于升级的注意事项做个记录,当做预防以后的踩坑\n注意事项\n同一个设置成支持php7.0,php8,新的9.0仅支持php8以上,为了能平滑迁移项目,需要服务器可支持2个版本 购物车插件gloudemans/shoppingcart 不可使用 , 测试 bumbummen99/shoppingcart 是否可替代 接收参数函数 Input::get() 废弃,用request()-\u0026gt;get() 替代 $input{$i+1} 花括号不可用 $input[$i+1] Route::controller 隐式控制路由废弃, 使用lesichkovm/laravel-advanced-route 插件 AdvancedRoute::controller 替代 队列在redis上保存的值有较大变动, laravel/vendor/laravel/framework/src/Illuminate/Queue/Queue.php createPayload函数 增加部分变量 laravel/vendor/laravel/framework/src/Illuminate/Queue/RedisQueue.php createPayload函数 attempts设置默认为0 原生类的构造函数改成__construct 对于整形和字符串判断更严格了,如mktime 参数必须是int; abs(\u0026quot;\u0026quot;) 会报错 有用到的废弃函数 create_function 需要更换 ORM查询返回的数据永远是obj类型, conf/database.inc.php 设置的$ORM-\u0026gt;setFetchMode(PDO::FETCH_ASSOC); 无效,源自 https://laravel.com/docs/5.4/upgrade 以上的记录是我实际的项目产生的问题,因此不一定适合大部分人\n正则表达式替换php7的语法警告\n(\\$[a-zA-Z\\_]+)\\[([a-zA-Z]+[a-zA-Z\\_\\d]*)\\] $1[\u0026#39;$2\u0026#39;] ","title":"php-laravel升级注意事项"},{"content":"是否有人对于每次写一个laravel的控制器都要在路由上写一堆的声明路由感到麻烦,后期维护又不好处理,这里总结下如何让自己写出的接口更加规范格式化,本人在laravel项目中使用了dingo/api\n.env上配置dingo的配置信息 #Dingo API API_PREFIX=api API_VERSION=v1 API_DEBUG=true 在route.php的路由方法中添加这几行代码 $api = app(\u0026#39;Dingo\\Api\\Routing\\Router\u0026#39;); $api-\u0026gt;version(\u0026#39;v1\u0026#39;, function ($api) { $api-\u0026gt;any(\u0026#39;{slug}\u0026#39;, \u0026#39;\\App\\Http\\ApiRouter@route\u0026#39;)-\u0026gt;where(\u0026#39;slug\u0026#39;, \u0026#39;(.*)?\u0026#39;); }); 封装统一入口ApiRouter.php use App; use Dingo\\Api\\Routing\\Helpers; use Illuminate\\Routing\\Controller; use Illuminate\\Support\\Str; use core\\util\\router\\RouterHelper; class ApiRouter extends Controller { use Helpers; private $ns; const API_NS = \u0026#39;core\\bapi\u0026#39;; function __construct($ns) { header(\u0026#39;Access-Control-Allow-Origin: *\u0026#39;); header(\u0026#39;Access-Control-Allow-Methods:*\u0026#39;); header(\u0026#39;Access-Control-Allow-Headers:*\u0026#39;); $this-\u0026gt;ns = $ns; } /** * @var string Allows early access to page action. */ public static $action; /** * @var array Allows early access to page parameters. */ public static $params; /** * 调试模式在.env设置API_DEBUG=true会有出错跟踪，不设置的话返回500的一般格式错误 */ public function route($url = null) { $API_SUBTYPE=env(\u0026#39;API_SUBTYPE\u0026#39;, \u0026#39;\u0026#39;); $params = RouterHelper::segmentizeUrl($url); if(isset($_SERVER[\u0026#39;HTTP_ACCEPT\u0026#39;])\u0026amp;\u0026amp;preg_match(\u0026#34;/x.{$API_SUBTYPE}.v([\\d]+)\\+json/\u0026#34;,$_SERVER[\u0026#39;HTTP_ACCEPT\u0026#39;],$matches)) { //dingo api 的判断版本方式,以header头部的Accept来判断的 define(\u0026#34;API_VERSION\u0026#34;,$matches[1]); }elseif ($params[0] == \u0026#39;v2\u0026#39;) { array_shift($params); define(\u0026#34;API_VERSION\u0026#34;,2); }else{ define(\u0026#34;API_VERSION\u0026#34;,1); } /* * Look for a Api controller */ $testPathDeep = 0; if (isset($params[2])) { $testPathDeep = 1; $api = $params[0] .\u0026#34;\\\\\u0026#34;. Str::ucfirst($params[1]) ; } else { $api = isset($params[0]) ? $params[0] : null; } $api = Str::ucfirst($api).\u0026#39;Api\u0026#39;; $apiClass = $this-\u0026gt;ns.\u0026#34;\\\\\u0026#34;.$api; // 是否测试类 if (env(\u0026#39;APP_DEBUG\u0026#39;) \u0026amp;\u0026amp; $params[0] == \u0026#39;test\u0026#39;) { $api = isset($params[1]) ? $params[1] : null; $api = Str::ucfirst($api).\u0026#39;Test\u0026#39;; $apiClass = $this-\u0026gt;ns.\u0026#34;\\\\test\\\\\u0026#34;.$api; $testPathDeep = 1; } if (is_null($api)) { return $this-\u0026gt;response-\u0026gt;errorNotFound(\u0026#39;api not exist \u0026#39;); } self::$action = $action = isset($params[$testPathDeep+1]) ? $this-\u0026gt;parseAction($params[$testPathDeep+1]) : null; self::$params = $controllerParams = array_slice($params, $testPathDeep+2); if (!class_exists($apiClass)) { return $this-\u0026gt;response-\u0026gt;errorNotFound(\u0026#39;api path not exist \u0026#39; . (env(\u0026#39;APP_DEBUG\u0026#39;) ? $apiClass : \u0026#39;\u0026#39;)); } else { $controllerObj = App::make($apiClass); if (!$action) $action = \u0026#39;index\u0026#39;; if ($controllerObj-\u0026gt;actionExists($action)) { return $controllerObj-\u0026gt;handle($action, $controllerParams); } else { return $this-\u0026gt;response-\u0026gt;errorNotFound(\u0026#39;api command not exist \u0026#39; . (env(\u0026#39;APP_DEBUG\u0026#39;) ? $action : \u0026#39;\u0026#39;)); } } } /** * Process the action name, since dashes are not supported in PHP methods. * @param string $actionName * @return string */ protected function parseAction($actionName) { if (strpos($actionName, \u0026#39;-\u0026#39;) !== false) { return camel_case($actionName); } return $actionName; } } 以上环境部署完成后,文件结构如有 /api/UserApi.php 此时如访问/api/user/info 即可访问到相应的类和方法下了 /api/User/ActionApi.php =\u0026gt; /api/user/action/create ","permalink":"/study/php-laravel-001/","summary":"是否有人对于每次写一个laravel的控制器都要在路由上写一堆的声明路由感到麻烦,后期维护又不好处理,这里总结下如何让自己写出的接口更加规范格式化,本人在laravel项目中使用了dingo/api\n.env上配置dingo的配置信息 #Dingo API API_PREFIX=api API_VERSION=v1 API_DEBUG=true 在route.php的路由方法中添加这几行代码 $api = app(\u0026#39;Dingo\\Api\\Routing\\Router\u0026#39;); $api-\u0026gt;version(\u0026#39;v1\u0026#39;, function ($api) { $api-\u0026gt;any(\u0026#39;{slug}\u0026#39;, \u0026#39;\\App\\Http\\ApiRouter@route\u0026#39;)-\u0026gt;where(\u0026#39;slug\u0026#39;, \u0026#39;(.*)?\u0026#39;); }); 封装统一入口ApiRouter.php use App; use Dingo\\Api\\Routing\\Helpers; use Illuminate\\Routing\\Controller; use Illuminate\\Support\\Str; use core\\util\\router\\RouterHelper; class ApiRouter extends Controller { use Helpers; private $ns; const API_NS = \u0026#39;core\\bapi\u0026#39;; function __construct($ns) { header(\u0026#39;Access-Control-Allow-Origin: *\u0026#39;); header(\u0026#39;Access-Control-Allow-Methods:*\u0026#39;); header(\u0026#39;Access-Control-Allow-Headers:*\u0026#39;); $this-\u0026gt;ns = $ns; } /** * @var string Allows early access to page action. */ public static $action; /** * @var array Allows early access to page parameters.","title":"php-总结laravel使用技巧-001"},{"content":"前言 最近比较了几家大的云平台产品,发现百度云的ocr识别,只要通过了企业认证的话,可以每天免费获取一定额度的使用,因此在这里分享下如何使用ocr识别api\n目标 可用在实现内部员工系统的快速身份认证,或者部分客户的营业执照和个人认证,注意仅限小量内部使用,如需用在正式环境中建议购买足够的流量包\n前置条件 开发环境 PHP 百度云能企业认证\n正式内容 百度接口的认证方式 百度的鉴权方式是以Token的方式,具体教程可查看官网API,这里不重复说明了\nfunction getToken 封装下获取Token的方式,避免重复请求次数过于频繁\npublic function getToken() { $filename = \u0026#34;/data/baidu_access_token.{$this-\u0026gt;access_key}.json\u0026#34;; if (file_exists($filename)) { $content = file_get_contents($filename); if ($content) { $json = json_decode($content, 1); if (strtotime($json[\u0026#39;expires_in\u0026#39;]) \u0026gt; time()) { return $json[\u0026#39;access_token\u0026#39;]; } } } $resp = json_decode($this-\u0026gt;client-\u0026gt;request(\u0026#34;POST\u0026#34;, \u0026#34;https://aip.baidubce.com/oauth/2.0/token\u0026#34;, [ \u0026#39;form_params\u0026#39; =\u0026gt; [ \u0026#39;grant_type\u0026#39; =\u0026gt; \u0026#39;client_credentials\u0026#39;, \u0026#39;client_id\u0026#39; =\u0026gt; $this-\u0026gt;access_key, \u0026#39;client_secret\u0026#39; =\u0026gt; $this-\u0026gt;secret_key, ] ])-\u0026gt;getBody()-\u0026gt;getContents(), 1); $data = [ \u0026#39;access_token\u0026#39; =\u0026gt; $resp[\u0026#39;access_token\u0026#39;], \u0026#39;expires_in\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d H:i:s\u0026#34;, strtotime(\u0026#34;+29 day\u0026#34;)), ]; file_put_contents($filename, json_encode($data, JSON_UNESCAPED_UNICODE)); return $resp[\u0026#39;access_token\u0026#39;]; } private function request($action, $p) { $option = [ \u0026#39;query\u0026#39; =\u0026gt; [ \u0026#39;access_token\u0026#39; =\u0026gt; $this-\u0026gt;getToken(), ], ]; if ($this-\u0026gt;target == \u0026#39;face\u0026#39;) { $option[\u0026#39;json\u0026#39;] = $p; } else { $option[\u0026#39;form_params\u0026#39;] = $p; } $resp = $this-\u0026gt;client-\u0026gt;request(\u0026#34;POST\u0026#34;, \u0026#34;{$api_url}/{$action}\u0026#34;, $option) -\u0026gt;getBody() -\u0026gt;getContents(); return json_decode($resp, true); } 身份证识别 function OcrIdcard 先展示官方文档,文档中可看出ocr的识别支持两种提交方式,图片的base64或者图片url,因此这里稍微封装一下\n/** * 身份证识别 * @param $id_card_side string 正反面 -front：身份证含照片的一面 -back：身份证带国徽的一面 * @param string $image string 图像数据 * @param string $url string 图片完整URL * @param array $param * @return mixed */ public function OcrIdcard($id_card_side, $image = \u0026#34;\u0026#34;, $url = \u0026#34;\u0026#34;, $param = []) { $p = [\u0026#39;id_card_side\u0026#39; =\u0026gt; $id_card_side]; if ($image) { $p[\u0026#39;image\u0026#39;] = $image; } elseif ($url) { $p[\u0026#39;url\u0026#39;] = $url; } $redisValue = $this-\u0026gt;redis-\u0026gt;get(\u0026#34;Ocr:Baidu:Idcard\u0026#34;); $redisDate = $this-\u0026gt;redis-\u0026gt;get(\u0026#34;Ocr:Baidu:IdcardDate\u0026#34;); if (!$redisDate || $redisDate != date(\u0026#34;Y-m-d\u0026#34;)) { $this-\u0026gt;redis-\u0026gt;set(\u0026#34;Ocr:Baidu:IdcardDate\u0026#34;, date(\u0026#34;Y-m-d\u0026#34;)); $redisValue = 0; } if ($redisValue \u0026amp;\u0026amp; $redisValue \u0026gt; 480) { return \u0026#34;api.count.limit\u0026#34;; } $this-\u0026gt;redis-\u0026gt;set(\u0026#34;Ocr:Baidu:Idcard\u0026#34;, $redisValue ? $redisValue + 1 : 1); $resp = $this-\u0026gt;request(\u0026#34;/rest/2.0/ocr/v1/idcard\u0026#34;, $p); if (isset($resp[\u0026#34;error_msg\u0026#34;])) { return $resp[\u0026#34;error_msg\u0026#34;]; } $data = [ \u0026#39;name\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;姓名\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;姓名\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;姓名\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;nation\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;民族\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;民族\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;民族\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;address\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;住址\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;住址\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;住址\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;idnumber\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;公民身份号码\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;公民身份号码\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;公民身份号码\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;birthday\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;出生\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;出生\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;出生\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;sex\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;性别\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;性别\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;性别\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;expired_at\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;失效日期\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;失效日期\u0026#34;] ? date(\u0026#34;Y-m-d\u0026#34;,strtotime($resp[\u0026#34;words_result\u0026#34;][\u0026#34;失效日期\u0026#34;][\u0026#39;words\u0026#39;])) : \u0026#34;\u0026#34;, \u0026#39;created_at\u0026#39; =\u0026gt; isset($resp[\u0026#34;words_result\u0026#34;][\u0026#34;签发日期\u0026#34;])\u0026amp;\u0026amp;$resp[\u0026#34;words_result\u0026#34;][\u0026#34;签发日期\u0026#34;] ? date(\u0026#34;Y-m-d\u0026#34;,strtotime($resp[\u0026#34;words_result\u0026#34;][\u0026#34;签发日期\u0026#34;][\u0026#39;words\u0026#39;])) : \u0026#34;\u0026#34;, ]; if (!$data[\u0026#39;idnumber\u0026#39;]\u0026amp;\u0026amp;!$data[\u0026#39;expired_at\u0026#39;]) return \u0026#34;idnumber.empty\u0026#34;; return $data; } 可以看到这里使用了一段redis进行数量限制,百度每日可免费使用的额度是500次,避免测试中引起的差异,这里限制正式环境中每天可调用490次接口\n营业执照识别 function OcrBusinessLicense public function OcrBusinessLicense($image = \u0026#34;\u0026#34;, $url = \u0026#34;\u0026#34;, $param = []) { $p = [ ]; if ($image) { $p[\u0026#39;image\u0026#39;] = $image; } elseif ($url) { $p[\u0026#39;url\u0026#39;] = $url; } $redisValue = $this-\u0026gt;redis-\u0026gt;get(\u0026#34;Ocr:Baidu:BusinessLicense\u0026#34;); $redisDate = $this-\u0026gt;redis-\u0026gt;get(\u0026#34;Ocr:Baidu:BusinessLicenseDate\u0026#34;); if (!$redisDate || $redisDate != date(\u0026#34;Y-m-d\u0026#34;)) { $this-\u0026gt;redis-\u0026gt;set(\u0026#34;Ocr:Baidu:BusinessLicenseDate\u0026#34;, date(\u0026#34;Y-m-d\u0026#34;)); $redisValue = 0; } if ($redisValue \u0026amp;\u0026amp; $redisValue \u0026gt; 190) { return \u0026#34;api.count.limit\u0026#34;; } $this-\u0026gt;redis-\u0026gt;set(\u0026#34;Ocr:Baidu:BusinessLicense\u0026#34;, $redisValue ? $redisValue + 1 : 1); $resp = $this-\u0026gt;request(\u0026#34;/rest/2.0/ocr/v1/business_license\u0026#34;, $p); if (isset($resp[\u0026#34;error_msg\u0026#34;])) { return $resp[\u0026#34;error_msg\u0026#34;]; } $data = [ \u0026#39;reg_num\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;社会信用代码\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;社会信用代码\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //注册号 \u0026#39;name\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;单位名称\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;单位名称\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司名称 \u0026#39;type\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;类型\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;类型\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司类型 \u0026#39;person\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;法人\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;法人\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司法人 \u0026#39;establish_date\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;成立日期\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;成立日期\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司注册日期 \u0026#39;valid_period\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;有效期\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;有效期\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司营业期限终止日期 \u0026#39;address\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;地址\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;地址\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //公司地址 \u0026#39;capital\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;注册资本\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;注册资本\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //注册资本 \u0026#39;business\u0026#39; =\u0026gt; $resp[\u0026#34;words_result\u0026#34;][\u0026#34;经营范围\u0026#34;] ? $resp[\u0026#34;words_result\u0026#34;][\u0026#34;经营范围\u0026#34;][\u0026#39;words\u0026#39;] : \u0026#34;\u0026#34;, //经营范围 ]; if (!$data[\u0026#39;reg_num\u0026#39;]) { return \u0026#34;reg_num.empty\u0026#34;; } $data[\u0026#39;establish_date\u0026#39;] = str_replace([\u0026#34;年\u0026#34;, \u0026#34;月\u0026#34;], \u0026#34;-\u0026#34;, $data[\u0026#39;establish_date\u0026#39;]); $data[\u0026#39;establish_date\u0026#39;] = str_replace([\u0026#34;日\u0026#34;], \u0026#34;\u0026#34;, $data[\u0026#39;establish_date\u0026#39;]); $data[\u0026#39;valid_period\u0026#39;] = str_replace([\u0026#34;年\u0026#34;, \u0026#34;月\u0026#34;], \u0026#34;-\u0026#34;, $data[\u0026#39;valid_period\u0026#39;]); $data[\u0026#39;valid_period\u0026#39;] = str_replace([\u0026#34;日\u0026#34;], \u0026#34;\u0026#34;, $data[\u0026#39;valid_period\u0026#39;]); return $data; } ","permalink":"/tech/php-ocr/","summary":"前言 最近比较了几家大的云平台产品,发现百度云的ocr识别,只要通过了企业认证的话,可以每天免费获取一定额度的使用,因此在这里分享下如何使用ocr识别api\n目标 可用在实现内部员工系统的快速身份认证,或者部分客户的营业执照和个人认证,注意仅限小量内部使用,如需用在正式环境中建议购买足够的流量包\n前置条件 开发环境 PHP 百度云能企业认证\n正式内容 百度接口的认证方式 百度的鉴权方式是以Token的方式,具体教程可查看官网API,这里不重复说明了\nfunction getToken 封装下获取Token的方式,避免重复请求次数过于频繁\npublic function getToken() { $filename = \u0026#34;/data/baidu_access_token.{$this-\u0026gt;access_key}.json\u0026#34;; if (file_exists($filename)) { $content = file_get_contents($filename); if ($content) { $json = json_decode($content, 1); if (strtotime($json[\u0026#39;expires_in\u0026#39;]) \u0026gt; time()) { return $json[\u0026#39;access_token\u0026#39;]; } } } $resp = json_decode($this-\u0026gt;client-\u0026gt;request(\u0026#34;POST\u0026#34;, \u0026#34;https://aip.baidubce.com/oauth/2.0/token\u0026#34;, [ \u0026#39;form_params\u0026#39; =\u0026gt; [ \u0026#39;grant_type\u0026#39; =\u0026gt; \u0026#39;client_credentials\u0026#39;, \u0026#39;client_id\u0026#39; =\u0026gt; $this-\u0026gt;access_key, \u0026#39;client_secret\u0026#39; =\u0026gt; $this-\u0026gt;secret_key, ] ])-\u0026gt;getBody()-\u0026gt;getContents(), 1); $data = [ \u0026#39;access_token\u0026#39; =\u0026gt; $resp[\u0026#39;access_token\u0026#39;], \u0026#39;expires_in\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d H:i:s\u0026#34;, strtotime(\u0026#34;+29 day\u0026#34;)), ]; file_put_contents($filename, json_encode($data, JSON_UNESCAPED_UNICODE)); return $resp[\u0026#39;access_token\u0026#39;]; } private function request($action, $p) { $option = [ \u0026#39;query\u0026#39; =\u0026gt; [ \u0026#39;access_token\u0026#39; =\u0026gt; $this-\u0026gt;getToken(), ], ]; if ($this-\u0026gt;target == \u0026#39;face\u0026#39;) { $option[\u0026#39;json\u0026#39;] = $p; } else { $option[\u0026#39;form_params\u0026#39;] = $p; } $resp = $this-\u0026gt;client-\u0026gt;request(\u0026#34;POST\u0026#34;, \u0026#34;{$api_url}/{$action}\u0026#34;, $option) -\u0026gt;getBody() -\u0026gt;getContents(); return json_decode($resp, true); } 身份证识别 function OcrIdcard 先展示官方文档,文档中可看出ocr的识别支持两种提交方式,图片的base64或者图片url,因此这里稍微封装一下","title":"php-分享自有系统接入OCR图片识别"},{"content":"/** * 自定义的一个加解密插件 * User: staff * Date: 2019/3/27 * Time: 16:13 */ class Encrypter { private static $key = \u0026#34;ZmUbqPipJ0Pr7tGmkHDBazjpbKjFZc7S\u0026#34;; private static $cipher = \u0026#34;AES-256-CBC\u0026#34;; public static function encrypt($str) { $ivlen = openssl_cipher_iv_length(self::$cipher); $iv = openssl_random_pseudo_bytes($ivlen); $value = openssl_encrypt($str, self::$cipher, self::$key, 0, $iv); $iv = base64_encode($iv); $param = [ \u0026#39;iv\u0026#39; =\u0026gt; $iv, \u0026#39;value\u0026#39; =\u0026gt; $value ]; return base64_encode(json_encode($param)); } public static function decrypt($str) { $payload = self::getJsonPayload($str); $iv = base64_decode($payload[\u0026#39;iv\u0026#39;]); $decrypted = openssl_decrypt($payload[\u0026#39;value\u0026#39;], self::$cipher, self::$key, 0, $iv); return $decrypted; } /** * @param $payload * @return array */ static function getJsonPayload($payload) { $payload = json_decode(base64_decode($payload), true); return $payload; } } ","permalink":"/study/php-encrypter/","summary":"/** * 自定义的一个加解密插件 * User: staff * Date: 2019/3/27 * Time: 16:13 */ class Encrypter { private static $key = \u0026#34;ZmUbqPipJ0Pr7tGmkHDBazjpbKjFZc7S\u0026#34;; private static $cipher = \u0026#34;AES-256-CBC\u0026#34;; public static function encrypt($str) { $ivlen = openssl_cipher_iv_length(self::$cipher); $iv = openssl_random_pseudo_bytes($ivlen); $value = openssl_encrypt($str, self::$cipher, self::$key, 0, $iv); $iv = base64_encode($iv); $param = [ \u0026#39;iv\u0026#39; =\u0026gt; $iv, \u0026#39;value\u0026#39; =\u0026gt; $value ]; return base64_encode(json_encode($param)); } public static function decrypt($str) { $payload = self::getJsonPayload($str); $iv = base64_decode($payload[\u0026#39;iv\u0026#39;]); $decrypted = openssl_decrypt($payload[\u0026#39;value\u0026#39;], self::$cipher, self::$key, 0, $iv); return $decrypted; } /** * @param $payload * @return array */ static function getJsonPayload($payload) { $payload = json_decode(base64_decode($payload), true); return $payload; } } ","title":"Php-自定义封装加密方法"},{"content":"前言 招商银行的收款通知可以添加邮件推送,因此利用php-imap收取邮件,可达到自动化确款的目的\n目标 前置条件 composer require php-imap/php-imap\n正式内容 php-imap 的使用 $mailbox = new Mailbox( \u0026#39;{SMTP服务器:SMTP端口号/imap}INBOX\u0026#39;, // IMAP server and mailbox folder \u0026#39;邮箱账号\u0026#39;, // Username for the before configured mailbox \u0026#39;邮箱密码\u0026#39;, // Password for the before configured username null, // Directory, where attachments will be saved (optional) \u0026#39;UTF-8\u0026#39; // Server encoding (optional) ); try { $mailsIds = $mailbox-\u0026gt;searchMailbox(\u0026#39;ALL\u0026#39;); } catch (PhpImap\\Exceptions\\ConnectionException $ex) { echo \u0026#34;IMAP connection failed: \u0026#34; . $ex; die(); } rsort($mailsIds); foreach ($mailsIds as $key =\u0026gt; $item) { //循环遍历 $mail = $mailbox-\u0026gt;getMail($item); $fromAddress = $mail-\u0026gt;fromAddress; $content = $mail-\u0026gt;textHtml; if(!$content){ $content = $mail-\u0026gt;textPlain; } // $mail-\u0026gt;subject;标题 // $mail-\u0026gt;date;发件日期 } 对招商银行的邮件进行内容提取和匹配 private function CmbchinaFormat($content){ preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日)他行实时转入人民币([\\d\\.]+)，付方(\\S*)/\u0026#34;,$content,$matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;$matches[4],]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日\\d{2}:\\d{2})二维码收款\\（(\\S*)\\），人民币([\\d\\.]+)/\u0026#34;,$content,$matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[4],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;$matches[3],]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日\\d{2}:\\d{2})收款人民币([\\d\\.]*)，备注：(\\S*)/\u0026#34;, $content, $matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;str_replace(\u0026#34;，更多详情请查看招商银行APP动账通知。\u0026#34;, \u0026#34;\u0026#34;, $matches[4]),]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日\\d{2}:\\d{2})银联入账人民币([\\d\\.]*)元\\（(\\S*)\\）/\u0026#34;, $content, $matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;$matches[4],]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日\\d{2}:\\d{2})转账汇款人民币([\\d\\.]*)，手续费人民币([\\d\\.]*)，收款人：马颂新，请以收款人实际入账为准/\u0026#34;, $content, $matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日)收到汇款人民币([\\d\\.]*)，付方(\\S*)，账号尾号(\\d{4})，备注：(\\S*)/\u0026#34;, $content, $matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;$matches[4],\u0026#39;remark\u0026#39;=\u0026gt;$matches[6],\u0026#39;payed_card\u0026#39;=\u0026gt;$matches[5]]; } preg_match(\u0026#34;/您账户(\\d{4})于(\\d{2}月\\d{2}日\\d{2}:\\d{2})银联转入人民币([\\d\\.]*)/\u0026#34;, $content, $matches); if(!empty($matches)){ return [\u0026#39;price\u0026#39;=\u0026gt;$matches[3],\u0026#39;card\u0026#39;=\u0026gt;$matches[1],\u0026#39;payed_name\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,\u0026#39;remark\u0026#39;=\u0026gt;\u0026#39;\u0026#39;,\u0026#39;payed_card\u0026#39;=\u0026gt;\u0026#39;\u0026#39;]; } return false; } 识别招商的发件人来源 95555@message.cmbchina.com\n最后根据邮件内容识别到的金额和时间就可以达到简单的自动化操作 ","permalink":"/tech/php-imap/","summary":"前言 招商银行的收款通知可以添加邮件推送,因此利用php-imap收取邮件,可达到自动化确款的目的\n目标 前置条件 composer require php-imap/php-imap\n正式内容 php-imap 的使用 $mailbox = new Mailbox( \u0026#39;{SMTP服务器:SMTP端口号/imap}INBOX\u0026#39;, // IMAP server and mailbox folder \u0026#39;邮箱账号\u0026#39;, // Username for the before configured mailbox \u0026#39;邮箱密码\u0026#39;, // Password for the before configured username null, // Directory, where attachments will be saved (optional) \u0026#39;UTF-8\u0026#39; // Server encoding (optional) ); try { $mailsIds = $mailbox-\u0026gt;searchMailbox(\u0026#39;ALL\u0026#39;); } catch (PhpImap\\Exceptions\\ConnectionException $ex) { echo \u0026#34;IMAP connection failed: \u0026#34; . $ex; die(); } rsort($mailsIds); foreach ($mailsIds as $key =\u0026gt; $item) { //循环遍历 $mail = $mailbox-\u0026gt;getMail($item); $fromAddress = $mail-\u0026gt;fromAddress; $content = $mail-\u0026gt;textHtml; if(!","title":"Php邮件收取imap"},{"content":"前言 对比一般市场上的虚拟主机,宝塔都能兼容支持绝大多数的功能,并且宝塔有个比较大的特点为,页面上的接口均可以通过api请求,因此产生了这个想法定制出宝塔基础的虚拟主机\n目标 前置条件 window server的主机\n宝塔需安装在数据盘D盘上\n正式内容 定义的配置文件 /data/vhost/baota.conf.json\n[ { \u0026#34;fchrServer\u0026#34;:\u0026#34;flage\u0026#34;, \u0026#34;host\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;key\u0026#34;:\u0026#34;bt_api_key\u0026#34;, \u0026#34;port\u0026#34;:\u0026#34;8888\u0026#34;, \u0026#34;mysql\u0026#34;:\u0026#34;mysql_password\u0026#34;, \u0026#34;sqlserver\u0026#34;:\u0026#34;mssql_password\u0026#34;, \u0026#34;region_id\u0026#34;:\u0026#34;hk\u0026#34;, \u0026#34;zone_id\u0026#34;:\u0026#34;hk-02\u0026#34;, \u0026#34;network\u0026#34;:\u0026#34;bgp\u0026#34; } ] 封装好的交互php函数方法\nclass VhostBaotaClient implements VhostClientInterface { use ApiConfigTrait; use ApiLoggerTrait; private $client; private $key = \u0026#34;\u0026#34;; public $host = \u0026#34;\u0026#34;; private $port = \u0026#34;8888\u0026#34;; private $mssql_password = \u0026#34;\u0026#34;; /** * @var array 远端主机的状态转换 */ public $RemoteStatus = [ \u0026#39;1\u0026#39; =\u0026gt; \u0026#39;Running\u0026#39;, \u0026#39;0\u0026#39; =\u0026gt; \u0026#39;Stopped\u0026#39;, ]; public $IISRemoteStatus = [ \u0026#39;Started\u0026#39; =\u0026gt; \u0026#39;Running\u0026#39;, \u0026#39;Stopped\u0026#39; =\u0026gt; \u0026#39;Stopped\u0026#39;, ]; public static function getConfig() { return json_decode(file_get_contents(\u0026#39;/data/vhost/baota.conf.json\u0026#39;), 1); } public function __construct($chrFTPServer = \u0026#34;\u0026#34;) { if ($chrFTPServer) { $config = self::getConfig(); preg_match(\u0026#34;([\\d]+)\u0026#34;, $chrFTPServer, $matches); foreach ($config as $value) { if ($value[\u0026#39;fchrServer\u0026#39;] == $matches[0]) { $this-\u0026gt;key = $value[\u0026#39;key\u0026#39;]; $this-\u0026gt;host = $value[\u0026#39;host\u0026#39;]; $this-\u0026gt;port = $value[\u0026#39;port\u0026#39;]; $this-\u0026gt;mssql_password = $value[\u0026#39;sqlserver\u0026#39;]; break; } } } $this-\u0026gt;initLogger(-3, 2); $this-\u0026gt;client = new GuzzleHttp\\Client([ \u0026#39;timeout\u0026#39; =\u0026gt; 300.0, ]); } public function SetChrFTPServer($chrFTPServer = \u0026#34;\u0026#34;) { if ($chrFTPServer) { $config = self::getConfig(); preg_match(\u0026#34;([\\d]+)\u0026#34;, $chrFTPServer, $matches); foreach ($config as $value) { if ($value[\u0026#39;fchrServer\u0026#39;] == $matches[0]) { $this-\u0026gt;key = $value[\u0026#39;key\u0026#39;]; $this-\u0026gt;host = $value[\u0026#39;host\u0026#39;]; $this-\u0026gt;port = $value[\u0026#39;port\u0026#39;]; $this-\u0026gt;mssql_password = $value[\u0026#39;sqlserver\u0026#39;]; break; } } } } /** * 获取vhost实例远程信息 * @param array $ids 主参数，实例列表数组 * @param array $params 其它参数 * @return mixed */ public function describeInstances($ids = [], $params = []) { $action = \u0026#39;/data?action=getData\u0026#39;; $p = [ \u0026#39;table\u0026#39; =\u0026gt; \u0026#39;sites\u0026#39;, \u0026#39;type\u0026#39; =\u0026gt; -1, \u0026#39;limit\u0026#39; =\u0026gt; 20, \u0026#39;p\u0026#39; =\u0026gt; 1, \u0026#39;search\u0026#39; =\u0026gt; $ids[0] ]; return $this-\u0026gt;request($action, $p); } public function describePrice($vhost, $Period, $PeriodUnit) { // TODO: Implement describePrice() method. } public function describeRenewPrice($vhost, $Period, $PeriodUnit) { // TODO: Implement describeRenewPrice() method. } /** * 登陆第三方的控制平台 * @param $ecs * @return mixed */ public function describeControlPanel($vhost) { // TODO: Implement describeControlPanel() method. } /** * 登陆第三方的数据库控制平台 * @param $ecs * @return mixed */ public function describeDatabasePanel($vhost, $param = []) { $action = \u0026#34;/files?action=GetDirList\u0026#34;; $p = [ \u0026#39;p\u0026#39; =\u0026gt; 1, \u0026#39;showRow\u0026#39; =\u0026gt; 100, \u0026#39;path\u0026#39; =\u0026gt; \u0026#39;D:/BtSoft/phpmyadmin\u0026#39;, \u0026#39;is_operating\u0026#39; =\u0026gt; true, ]; $resp = $this-\u0026gt;request($action, $p); $filename = \u0026#34;\u0026#34;; foreach ($resp[\u0026#39;LIST\u0026#39;] as $item) { if (stripos($item[\u0026#39;filename\u0026#39;], \u0026#34;phpmyadmin\u0026#34;) !== false) { $filename = $item[\u0026#39;filename\u0026#39;]; } }; return [ \u0026#39;content\u0026#39; =\u0026gt; \u0026#34;http://{$this-\u0026gt;host}:888/{$filename}\u0026#34;, \u0026#39;type\u0026#39; =\u0026gt; \u0026#39;url\u0026#39;, ]; } /** * 查询可使用的数据库 * @param $vhost * @return mixed */ public function DescribeDatabase($vhost) { // TODO: Implement DescribeDatabase() method. } /** * 修改密码 * @param $vhost * @param $password * @return mixed */ public function ModifyInstancePasswd($vhost, $password) { $ftp_resp = $this-\u0026gt;GetData(\u0026#34;ftps\u0026#34;, $vhost[\u0026#39;chrDomain\u0026#39;]); $action = \u0026#34;/ftp?action=SetUserPassword\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $ftp_resp[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;], \u0026#39;ftp_username\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;new_password\u0026#39; =\u0026gt; $password, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } /** * 更换数据库 * @param $vhost * @param array $param * @return mixed */ public function ExchangeDatabase($vhost, $param = []) { // TODO: Implement ExchangeDatabase() method. } /** * 更换服务器 * @param $vhost * @param array $param * @return mixed */ public function ExchangeInstance($vhost, $param = []) { // TODO: Implement ExchangeInstance() method. } /** * 域名绑定 * @param $vhost * @param $domain * @return mixed */ public function BindDomain($vhost, $domain) { $action = \u0026#34;/site?action=AddDomain\u0026#34;; $p = [ \u0026#39;domain\u0026#39; =\u0026gt; $domain, \u0026#39;webname\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); if($resp[\u0026#39;status\u0026#39;] === true){ return true; }elseif (stripos($resp[\u0026#39;msg\u0026#39;], \u0026#34;指定域名已绑定过\u0026#34;) !== false){ // 判断 已绑定的域名是否和当前主机id一致 $GetData = $this-\u0026gt;GetData(\u0026#39;sites\u0026#39;, $domain); if($GetData[\u0026#39;data\u0026#39;]\u0026amp;\u0026amp;$GetData[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;]==$vhost[\u0026#39;remoteID\u0026#39;]){ return true; } } return $resp[\u0026#39;msg\u0026#39;]; } public function sign($params) { $now_time = time(); $sign = [ \u0026#39;request_token\u0026#39; =\u0026gt; md5($now_time . \u0026#39;\u0026#39; . md5($this-\u0026gt;key)), \u0026#39;request_time\u0026#39; =\u0026gt; $now_time ]; return array_merge($params, $sign); } public function request($action, $params = []) { $query = $this-\u0026gt;sign($params); try { $resp = $this-\u0026gt;client-\u0026gt;request(\u0026#39;POST\u0026#39;, \u0026#34;http://{$this-\u0026gt;host}:{$this-\u0026gt;port}/{$action}\u0026#34;, [\u0026#39;form_params\u0026#39; =\u0026gt; $query, \u0026#39;verify\u0026#39; =\u0026gt; false,]); $content = $resp-\u0026gt;getBody()-\u0026gt;getContents(); return json_decode($content, 1) !== null ? json_decode($content, 1) : $content; } catch (\\Exception $e) { return [\u0026#39;status\u0026#39; =\u0026gt; \u0026#39;failed\u0026#39;, \u0026#39;message\u0026#39; =\u0026gt; \u0026#39;remote api error\u0026#39; . $e-\u0026gt;getMessage()]; } } /** * 创建实例 * \\panel\\data\\defaultDoc.html * @param $vhost * @param $Period * @param $PeriodUnit * @param bool $DryRun * @return mixed */ public function CreateInstance($vhost, $Period, $PeriodUnit, $DryRun = false) { $versionInfo = $this-\u0026gt;DescribePHPVersion(); $product = Product::find($vhost[\u0026#39;fIDProd\u0026#39;]); $version = $versionInfo[count($versionInfo) - 1][\u0026#39;version\u0026#39;]; $type = \u0026#34;PHP\u0026#34;; $systeminfo = $this-\u0026gt;GetSystemTotal(); if (stripos($systeminfo[\u0026#39;system\u0026#39;], \u0026#34;centos\u0026#34;) !== false) { $basePath = \u0026#34;/www/wwwroot/\u0026#34;; } else { $basePath = \u0026#34;D:/\u0026#34;; } $path = \u0026#34;{$basePath}{$product[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;; $datauser = $vhost[\u0026#39;UserName\u0026#39;]; $datapassword = $vhost[\u0026#39;Password\u0026#39;]; $database = VhostDB::whereIn(\u0026#39;fIDIDProd\u0026#39;, [\u0026#34;h{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;, \u0026#34;ch{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;]) -\u0026gt;with([\u0026#39;product\u0026#39;]) -\u0026gt;first(); if ($database \u0026amp;\u0026amp; preg_match(\u0026#34;/mysql/i\u0026#34;, $database[\u0026#39;product\u0026#39;][\u0026#39;chrScript\u0026#39;])) { $datauser = $database[\u0026#39;DBLogin\u0026#39;]; $datapassword = $database[\u0026#39;Password\u0026#39;] ? $database[\u0026#39;Password\u0026#39;] : $vhost[\u0026#39;Password\u0026#39;]; } $p = [ \u0026#39;webname\u0026#39; =\u0026gt; json_encode([\u0026#39;domain\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;domainlist\u0026#39; =\u0026gt; [], \u0026#39;count\u0026#39; =\u0026gt; 0], JSON_UNESCAPED_UNICODE), \u0026#39;check_dir\u0026#39; =\u0026gt; 1, \u0026#39;path\u0026#39; =\u0026gt; $path, \u0026#39;type_id\u0026#39; =\u0026gt; 0, \u0026#39;type\u0026#39; =\u0026gt; $type, //Asp Php \u0026#39;port\u0026#39; =\u0026gt; \u0026#39;80\u0026#39;, \u0026#39;ftp\u0026#39; =\u0026gt; \u0026#39;true\u0026#39;, \u0026#39;ftp_username\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;ftp_password\u0026#39; =\u0026gt; $vhost[\u0026#39;Password\u0026#39;], \u0026#39;sql\u0026#39; =\u0026gt; \u0026#39;true\u0026#39;, // \u0026#39;sql\u0026#39; =\u0026gt; \u0026#39;SQLServer\u0026#39;, \u0026#39;codeing\u0026#39; =\u0026gt; \u0026#39;utf8mb4\u0026#39;, \u0026#39;datauser\u0026#39; =\u0026gt; $datauser, \u0026#39;datapassword\u0026#39; =\u0026gt; $datapassword, \u0026#39;version\u0026#39; =\u0026gt; $version, \u0026#39;ps\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], ]; $action = \u0026#34;/site?action=AddSite\u0026#34;; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); if (isset($resp[\u0026#39;status\u0026#39;]) \u0026amp;\u0026amp; !$resp[\u0026#39;status\u0026#39;]) return $resp[\u0026#39;msg\u0026#39;]; // 设置过期时间 $p = [ \u0026#39;id\u0026#39; =\u0026gt; $resp[\u0026#39;siteId\u0026#39;], \u0026#39;edate\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d\u0026#34;, strtotime($vhost[\u0026#39;dtExpired\u0026#39;])), ]; $this-\u0026gt;request(\u0026#34;/site?action=SetEdate\u0026#34;, $p); //设置数据库可全部人访问 $p = [ \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;dataAccess\u0026#39; =\u0026gt; \u0026#39;%\u0026#39;, \u0026#39;access\u0026#39; =\u0026gt; \u0026#39;%\u0026#39;, ]; $this-\u0026gt;request(\u0026#34;/database?action=SetDatabaseAccess\u0026#34;, $p); $this-\u0026gt;ChangePHPVersion($vhost, $version); return $resp; } /** * 开机 * @return mixed */ public function StartInstance($vhost) { $action = \u0026#34;/site?action=SiteStart\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } /** * 关机 * @return mixed */ public function StopInstance($vhost) { $action = \u0026#34;/site?action=SiteStop\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetData($table, $search = \u0026#34;\u0026#34;, $p = 1, $limit = 20, $type = null) { $action = \u0026#34;/data?action=getData\u0026#34;; $p = [ \u0026#39;table\u0026#39; =\u0026gt; $table, \u0026#39;search\u0026#39; =\u0026gt; $search, \u0026#39;p\u0026#39; =\u0026gt; $p, \u0026#39;limit\u0026#39; =\u0026gt; $limit, ]; if ($type !== null) { $p[\u0026#39;type\u0026#39;] = $type; } $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;data\u0026#39;] \u0026amp;\u0026amp; is_array($resp[\u0026#39;data\u0026#39;]) ? $resp : $resp[\u0026#39;data\u0026#39;]; } /** * 修改数据库密码 * @param $vhost * @param $password * @return mixed */ public function ModifyDatabasePasswd($vhost, $password, $param = []) { $data_resp = $this-\u0026gt;GetData(\u0026#34;databases\u0026#34;, $vhost[\u0026#39;UserName\u0026#39;]); $action = \u0026#34;/database?action=ResDatabasePassword\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $data_resp[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;], \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;password\u0026#39; =\u0026gt; $password, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function upgradeInstance($vhost, $param = []) { $systeminfo = $this-\u0026gt;GetSystemTotal(); $product = Product::find($vhost[\u0026#39;fIDProd\u0026#39;]); $newProduct = Product::find($param[\u0026#39;new_product_id\u0026#39;]); if (stripos($systeminfo[\u0026#39;system\u0026#39;], \u0026#34;centos\u0026#34;) !== false) { $basePath = \u0026#34;/www/wwwroot/\u0026#34;; } else { $basePath = \u0026#34;D:/\u0026#34;; } //检查文件夹是否存在 $action = \u0026#34;/files?action=CheckExistsFiles\u0026#34;; $p = [ \u0026#39;dfile\u0026#39; =\u0026gt; \u0026#34;{$basePath}{$newProduct[\u0026#39;Space\u0026#39;]}\u0026#34;, \u0026#39;filename\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); if (empty($resp)) { //目标不存在进行复制项目文件夹 $action = \u0026#34;/files?action=CopyFile\u0026#34;; $p = [ \u0026#39;sfile\u0026#39; =\u0026gt; \u0026#34;{$basePath}{$product[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, \u0026#39;dfile\u0026#39; =\u0026gt; \u0026#34;{$basePath}{$newProduct[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); if ($resp[\u0026#39;status\u0026#39;] !== true) return $resp[\u0026#39;msg\u0026#39;]; sleep(3); } $action = \u0026#34;/site?action=SetPath\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; strval($vhost[\u0026#39;remoteID\u0026#39;]), \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$basePath}{$newProduct[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); sleep(2); $ftpArray = $this-\u0026gt;GetData(\u0026#34;ftps\u0026#34;, $vhost[\u0026#39;UserName\u0026#39;]); if(empty($ftpArray)||$ftpArray[\u0026#39;data\u0026#39;][0][\u0026#39;path\u0026#39;]!=\u0026#34;{$basePath}{$newProduct[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;){ //删除原来的ftp账号 $ftp_remote_id = $ftpArray[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;]; $action = \u0026#34;/ftp?action=DeleteUser\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; strval($ftp_remote_id), \u0026#39;username\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); sleep(2); //切换ftp $action = \u0026#34;/ftp?action=AddUser\u0026#34;; $p = [ \u0026#39;ftp_username\u0026#39; =\u0026gt; strval($vhost[\u0026#39;UserName\u0026#39;]), \u0026#39;ftp_password\u0026#39; =\u0026gt; strval($vhost[\u0026#39;Password\u0026#39;]), \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$basePath}{$newProduct[\u0026#39;Space\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, \u0026#39;ps\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); } return $resp[\u0026#39;status\u0026#39;] === true || $resp[\u0026#39;msg\u0026#39;] == \u0026#39;与原路径一致，无需修改!\u0026#39; ? true : $resp[\u0026#39;msg\u0026#39;]; } /** * 续费实例 * @param $vhost * @param $Period * @param $PeriodUnit * @return mixed */ public function RenewInstance($vhost, $Period, $PeriodUnit) { $action = \u0026#34;/site?action=SetEdate\u0026#34;; // 设置过期时间 $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], \u0026#39;edate\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d\u0026#34;, strtotime(\u0026#34;{$vhost[\u0026#39;dtExpired\u0026#39;]} + {$Period} {$PeriodUnit}\u0026#34;)), ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); if ($resp[\u0026#39;status\u0026#39;] === true) { $this-\u0026gt;StartInstance($vhost); } return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetSystemTotal() { $action = \u0026#34;/system?action=GetSystemTotal\u0026#34;; $resp = $this-\u0026gt;request($action); return $resp; } public function GetSystemConfig() { $action = \u0026#34;/config?action=get_config\u0026#34;; $resp = $this-\u0026gt;request($action); return $resp; } public function DescribePHPVersion() { $action = \u0026#34;/site?action=GetPHPVersion\u0026#34;; $resp = $this-\u0026gt;request($action); $data = []; foreach ($resp as $item) { if ($item[\u0026#39;version\u0026#39;] \u0026gt; 0) { $data[] = [ \u0026#39;version\u0026#39; =\u0026gt; $item[\u0026#39;version\u0026#39;], \u0026#39;name\u0026#39; =\u0026gt; $item[\u0026#39;name\u0026#39;], ]; } } return $data; } public function GetPHPVersion($vhost) { $action = \u0026#34;/site?action=GetSitePHPVersion\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return [\u0026#39;Version\u0026#39; =\u0026gt; $resp[\u0026#39;phpversion\u0026#39;]]; } public function ChangePHPVersion($vhost, $version) { $action = \u0026#34;/site?action=SetPHPVersion\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;version\u0026#39; =\u0026gt; $version, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } /** * 域名解绑 * @param $vhost * @param $domain * @return mixed */ public function RemoveBindDomain($vhost, $domain) { $action = \u0026#34;/site?action=DelDomain\u0026#34;; $p = [ \u0026#39;domain\u0026#39; =\u0026gt; $domain, \u0026#39;webname\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], \u0026#39;port\u0026#39; =\u0026gt; 80, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetIndex($vhost) { $action = \u0026#34;/site?action=GetIndex\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); return explode(\u0026#34;,\u0026#34;, $resp); } public function SetIndex($vhost, $indexArray = []) { $action = \u0026#34;/site?action=SetIndex\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;], \u0026#39;Index\u0026#39; =\u0026gt; implode(\u0026#34;,\u0026#34;, $indexArray) ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function CreateBackup($vhost) { $DescribeBackup = $this-\u0026gt;DescribeBackup($vhost); if (count($DescribeBackup) \u0026gt;= 5) { return \u0026#34;count.limit\u0026#34;; } $action = \u0026#34;/site?action=ToBackup\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $vhost[\u0026#39;remoteID\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function DescribeBackup($vhost, $param = []) { $GetSystemConfig = $this-\u0026gt;GetSystemConfig(); $action = \u0026#34;/files?action=GetDirList\u0026#34;; $p = [ \u0026#39;p\u0026#39; =\u0026gt; 1, \u0026#39;showRow\u0026#39; =\u0026gt; 100, \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$GetSystemConfig[\u0026#39;backup_path\u0026#39;]}/site\u0026#34;, \u0026#39;search\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); $data = []; foreach ($resp[\u0026#39;LIST\u0026#39;] as $item) { if (!$item[\u0026#39;down_id\u0026#39;]) { $action = \u0026#34;/files?action=create_download_url\u0026#34;; $p = [ \u0026#39;filename\u0026#39; =\u0026gt; \u0026#34;{$GetSystemConfig[\u0026#39;backup_path\u0026#39;]}/site/{$item[\u0026#39;filename\u0026#39;]}\u0026#34;, \u0026#39;ps\u0026#39; =\u0026gt; $item[\u0026#39;filename\u0026#39;], \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;expire\u0026#39; =\u0026gt; 1130800, ]; $create_download = $this-\u0026gt;request($action, $p); $down_id = $create_download[\u0026#39;msg\u0026#39;][\u0026#39;id\u0026#39;]; } else { $down_id = $item[\u0026#39;down_id\u0026#39;]; } $get_download_url_find = $this-\u0026gt;request(\u0026#34;/files?action=get_download_url_find\u0026#34;, [ \u0026#39;id\u0026#39; =\u0026gt; $down_id, ]); $data[] = [ \u0026#39;id\u0026#39; =\u0026gt; $item[\u0026#39;id\u0026#39;], \u0026#39;filename\u0026#39; =\u0026gt; $item[\u0026#39;filename\u0026#39;], \u0026#39;created_at\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d H:i:s\u0026#34;, $item[\u0026#39;mtime\u0026#39;]), \u0026#39;size\u0026#39; =\u0026gt; $item[\u0026#39;size\u0026#39;], \u0026#39;url\u0026#39; =\u0026gt; \u0026#34;http://{$this-\u0026gt;host}:8888/down/{$get_download_url_find[\u0026#39;token\u0026#39;]}\u0026#34; ]; } return $data; } public function RemoveBackup($vhost, $filename, $param = []) { $backup_remote_id = 0; $DataArray = $this-\u0026gt;GetData(\u0026#39;backup\u0026#39;, $vhost[\u0026#39;remoteID\u0026#39;], 1, 20, 0); foreach ($DataArray[\u0026#39;data\u0026#39;] as $item) { if ($filename == $item[\u0026#39;name\u0026#39;]) { $backup_remote_id = $item[\u0026#39;id\u0026#39;]; break; } } if (!$backup_remote_id) { return true; } $action = \u0026#34;/site?action=DelBackup\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $backup_remote_id ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function DescribeAccessLog($vhost, $param = []) { $action = \u0026#34;/site?action=GetSiteLogs\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); if (!$resp[\u0026#39;status\u0026#39;]) { return $resp[\u0026#39;msg\u0026#39;]; } $action = \u0026#34;/files?action=GetDirList\u0026#34;; $p = [ \u0026#39;p\u0026#39; =\u0026gt; 1, \u0026#39;showRow\u0026#39; =\u0026gt; 100, \u0026#39;path\u0026#39; =\u0026gt; $resp[\u0026#39;path\u0026#39;], \u0026#39;is_operating\u0026#39; =\u0026gt; true, ]; $fileResp = $this-\u0026gt;request($action, $p); $data = []; foreach ($fileResp[\u0026#39;LIST\u0026#39;] as $item) { $data[] = [ \u0026#39;name\u0026#39; =\u0026gt; $item[\u0026#39;filename\u0026#39;], ]; } return [ \u0026#39;Content\u0026#39; =\u0026gt; $resp[\u0026#39;msg\u0026#39;] ]; } public function DownloadAccessLog($vhost, $param = []) { //获取文件夹位置 $action = \u0026#34;/site?action=GetSiteLogs\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); if (!$resp[\u0026#39;status\u0026#39;]) { return $resp[\u0026#39;msg\u0026#39;]; } $fileArray = explode(\u0026#34;/\u0026#34;, $resp[\u0026#39;path\u0026#39;]); $sfile = array_pop($fileArray); $basePath = implode(\u0026#34;/\u0026#34;, $fileArray); // //删除文件 // $action = \u0026#34;/files?action=DeleteFile\u0026#34;; // $p = [ // \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$basePath}/{$sfile}.zip\u0026#34; // ]; // $this-\u0026gt;request($action, $p); //压缩文件 $action = \u0026#34;/files?action=Zip\u0026#34;; $p = [ \u0026#39;sfile\u0026#39; =\u0026gt; $sfile, \u0026#39;dfile\u0026#39; =\u0026gt; \u0026#34;{$basePath}/{$sfile}.zip\u0026#34;, \u0026#39;z_type\u0026#39; =\u0026gt; \u0026#39;zip\u0026#39;, \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$basePath}/\u0026#34;, ]; $resp = $this-\u0026gt;request($action, $p); if (!$resp[\u0026#39;status\u0026#39;]) return $resp[\u0026#39;msg\u0026#39;]; $action = \u0026#34;/files?action=GetDirList\u0026#34;; $p = [ \u0026#39;p\u0026#39; =\u0026gt; 1, \u0026#39;showRow\u0026#39; =\u0026gt; 100, \u0026#39;path\u0026#39; =\u0026gt; $basePath, \u0026#39;search\u0026#39; =\u0026gt; \u0026#34;{$sfile}.zip\u0026#34;, ]; $resp = $this-\u0026gt;request($action, $p); if (isset($resp[\u0026#34;LIST\u0026#34;]) \u0026amp;\u0026amp; count($resp[\u0026#34;LIST\u0026#34;]) \u0026gt; 0 \u0026amp;\u0026amp; $resp[\u0026#34;LIST\u0026#34;][0][\u0026#39;down_id\u0026#39;]) { $get_download_url_find = $this-\u0026gt;request(\u0026#34;/files?action=get_download_url_find\u0026#34;, [ \u0026#39;id\u0026#39; =\u0026gt; $resp[\u0026#34;LIST\u0026#34;][0][\u0026#39;down_id\u0026#39;], ]); $token = $get_download_url_find[\u0026#39;token\u0026#39;]; } else { //生成外链 $action = \u0026#34;/files?action=create_download_url\u0026#34;; $p = [ \u0026#39;filename\u0026#39; =\u0026gt; \u0026#34;{$basePath}/{$sfile}.zip\u0026#34;, \u0026#39;ps\u0026#39; =\u0026gt; \u0026#34;{$sfile}.zip\u0026#34;, \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;expire\u0026#39; =\u0026gt; 1130800, ]; $create_download_url = $this-\u0026gt;request($action, $p); $token = $create_download_url[\u0026#39;msg\u0026#39;][\u0026#39;token\u0026#39;]; } return [ \u0026#39;type\u0026#39; =\u0026gt; \u0026#39;url\u0026#39;, \u0026#39;Content\u0026#39; =\u0026gt; \u0026#34;http://{$this-\u0026gt;host}:{$this-\u0026gt;port}/down/{$token}\u0026#34;, ]; } public function DescribeNetVersion($vhost) { $action = \u0026#34;/site?action=get_iis_net_versions\u0026#34;; $resp = $this-\u0026gt;request($action); return $resp; } public function ModifyNetVersion($vhost, $version, $param = []) { $action = \u0026#34;/site?action=set_iis_apppool\u0026#34;; $p = [ \u0026#39;model\u0026#39; =\u0026gt; \u0026#39;Integrated\u0026#39;, // Integrated 集成 Classic 经典 \u0026#39;net_version\u0026#39; =\u0026gt; \u0026#34;{$version}\u0026#34;, \u0026#39;enable32BitAppOnWin64\u0026#39; =\u0026gt; \u0026#34;true\u0026#34;, \u0026#39;queueLength\u0026#39; =\u0026gt; \u0026#34;10000\u0026#34;, \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; if (isset($param[\u0026#39;Model\u0026#39;]) \u0026amp;\u0026amp; $param[\u0026#39;Model\u0026#39;]) { $p[\u0026#39;model\u0026#39;] = $param[\u0026#39;Model\u0026#39;]; } $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetNetConfig($vhost) { $action = \u0026#34;/site?action=get_net_version_byaspp\u0026#34;; $p = [ \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; return $this-\u0026gt;request($action, $p); } public function ChangeApppoolStatus($vhost, $status) { $action = \u0026#34;/site?action=set_apppool_status\u0026#34;; $p = [ \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;status\u0026#39; =\u0026gt; $status, ]; $logID = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $resp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID, $resp); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetRewriteList($vhost) { $action = \u0026#34;/site?action=GetRewriteList\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); $data = []; foreach ($resp[\u0026#34;rewrite\u0026#34;] as $item) { $data[] = $item == \u0026#39;0.当前\u0026#39; ? \u0026#39;self\u0026#39; : $item; } return $data; } public function GetFileBody($vhost, $template) { $systeminfo = $this-\u0026gt;GetSystemTotal(); if (stripos($systeminfo[\u0026#39;system\u0026#39;], \u0026#34;centos\u0026#34;) !== false) { $basePath = \u0026#34;/www/wwwroot/\u0026#34;; } else { $basePath = \u0026#34;D:/\u0026#34;; } $action = \u0026#34;/files?action=GetFileBody\u0026#34;; $p = [ \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;{$basePath}/BtSoft/panel/rewrite/iis/{$template}.conf\u0026#34; ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? [ \u0026#39;content\u0026#39; =\u0026gt; $resp[\u0026#39;data\u0026#39;] ] : $resp[\u0026#39;msg\u0026#39;]; } public function GetSiteRewrite($vhost) { $action = \u0026#34;/site?action=GetSiteRewrite\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? [ \u0026#39;content\u0026#39; =\u0026gt; $resp[\u0026#39;data\u0026#39;] ] : $resp[\u0026#39;msg\u0026#39;]; } public function SetSiteRewrite($vhost, $content) { $action = \u0026#34;/site?action=SetSiteRewrite\u0026#34;; $p = [ \u0026#39;siteName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;data\u0026#39; =\u0026gt; $content, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function DescribeSiteErrorPages($vhost) { $action = \u0026#34;/site?action=get_site_error_pages\u0026#34;; $p = [ \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); $data = []; foreach ($resp[\u0026#39;list\u0026#39;] as $item) { $data[] = [ \u0026#39;code\u0026#39; =\u0026gt; $item[\u0026#39;statusCode\u0026#39;], \u0026#39;path\u0026#39; =\u0026gt; $item[\u0026#39;path\u0026#39;], \u0026#39;mode\u0026#39; =\u0026gt; $item[\u0026#39;responseMode\u0026#39;] == \u0026#39;File\u0026#39; ? \u0026#39;default\u0026#39; : \u0026#39;self\u0026#39; ]; } return $data; } public function SetErrorPage($vhost, $code, $path, $param = []) { if (stripos($path, \u0026#34;%SystemDrive%\u0026#34;) !== false) { return \u0026#34;path.error\u0026#34;; } $action = \u0026#34;/site?action=set_error_page_bycode\u0026#34;; $p = [ \u0026#39;code\u0026#39; =\u0026gt; $code, \u0026#39;responseMode\u0026#39; =\u0026gt; \u0026#39;ExecuteURL\u0026#39;, \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;/{$path}\u0026#34;, \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function ResetErrorPage($vhost, $code, $param = []) { $action = \u0026#34;/site?action=re_error_page_bycode\u0026#34;; $p = [ \u0026#39;code\u0026#39; =\u0026gt; $code, \u0026#39;name\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;] ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function UnZip($vhost, $filename) { $action = \u0026#34;/files?action=UnZip\u0026#34;; $p = [ \u0026#39;sfile\u0026#39; =\u0026gt; \u0026#34;D:/{$vhost[\u0026#39;Quota\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}/{$filename}\u0026#34;, \u0026#39;dfile\u0026#39; =\u0026gt; \u0026#34;D:/{$vhost[\u0026#39;Quota\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, \u0026#39;type\u0026#39; =\u0026gt; \u0026#34;zip\u0026#34;, \u0026#39;coding\u0026#39; =\u0026gt; \u0026#34;UTF-8\u0026#34;, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function GetNetWork() { $action = \u0026#34;/system?action=GetNetWork\u0026#34;; return $this-\u0026gt;request($action); } public function StartFtp($vhost) { $GetData = $this-\u0026gt;GetData(\u0026#39;ftps\u0026#39;, $vhost[\u0026#39;UserName\u0026#39;]); $action = \u0026#34;/ftp?action=SetStatus\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $GetData[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;], \u0026#39;username\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;status\u0026#39; =\u0026gt; 1, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function StopFtp($vhost) { $GetData = $this-\u0026gt;GetData(\u0026#39;ftps\u0026#39;, $vhost[\u0026#39;UserName\u0026#39;]); $action = \u0026#34;/ftp?action=SetStatus\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $GetData[\u0026#39;data\u0026#39;][0][\u0026#39;id\u0026#39;], \u0026#39;username\u0026#39; =\u0026gt; $vhost[\u0026#39;UserName\u0026#39;], \u0026#39;status\u0026#39; =\u0026gt; 0, ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } private function get_mssql_row($database, $query) { $dbcfg = [ \u0026#39;server\u0026#39; =\u0026gt; $this-\u0026gt;host, \u0026#39;username\u0026#39; =\u0026gt; \u0026#39;sa\u0026#39;, \u0026#39;password\u0026#39; =\u0026gt; $this-\u0026gt;mssql_password, \u0026#39;database\u0026#39; =\u0026gt; \u0026#39;master\u0026#39;, ]; if (function_exists(\u0026#39;mssql_connect\u0026#39;)) { $link = @mssql_connect($dbcfg[\u0026#39;server\u0026#39;], $dbcfg[\u0026#39;username\u0026#39;], $dbcfg[\u0026#39;password\u0026#39;]); mssql_select_db($dbcfg[\u0026#39;database\u0026#39;], $link); $res = @mssql_query($query, $link); $row = @mssql_fetch_assoc($res); mssql_free_result($res); @mssql_close($link); } elseif (function_exists(\u0026#39;odbc_pconnect\u0026#39;)) { $conn = odbc_pconnect(\u0026#34;Driver={ODBC Driver 17 for SQL Server};Server={$dbcfg[\u0026#39;server\u0026#39;]};DataBase={$dbcfg[\u0026#39;database\u0026#39;]}\u0026#34;, $dbcfg[\u0026#39;username\u0026#39;], $dbcfg[\u0026#39;password\u0026#39;]); $result = odbc_exec($conn, $query); $row = odbc_fetch_array($result); odbc_close($conn); } elseif (function_exists(\u0026#39;sqlsrv_connect\u0026#39;)) { $connectionInfo = array(\u0026#34;Database\u0026#34; =\u0026gt; $dbcfg[\u0026#39;database\u0026#39;], \u0026#34;UID\u0026#34; =\u0026gt; $dbcfg[\u0026#39;username\u0026#39;], \u0026#34;PWD\u0026#34; =\u0026gt; $dbcfg[\u0026#39;password\u0026#39;]); $link = sqlsrv_connect($dbcfg[\u0026#39;server\u0026#39;], $connectionInfo); $result = sqlsrv_query($link, $query); $row = sqlsrv_fetch_array($result, SQLSRV_FETCH_ASSOC); sqlsrv_close($link); } else { $host = \u0026#34;sqlsrv:Server=\u0026#34; . str_replace(\u0026#34;:\u0026#34;, \u0026#34;,\u0026#34;, $dbcfg[\u0026#39;server\u0026#39;]) . \u0026#34;;Database=\u0026#34; . $dbcfg[\u0026#39;database\u0026#39;] . \u0026#34;;\u0026#34;; $obj = new PDO($host, $dbcfg[\u0026#39;username\u0026#39;], $dbcfg[\u0026#39;password\u0026#39;]); $row = []; foreach ($obj-\u0026gt;query($query) as $val) { $row = $val; break; } } return $row; } /** * 创建数据库 */ public function AddDatabase($vhost, $siteId) { $datauser = \u0026#34;{$vhost[\u0026#39;UserName\u0026#39;]}_ms\u0026#34;; $datapassword = $vhost[\u0026#39;Password\u0026#39;]; $database = VhostDB::whereIn(\u0026#39;fIDIDProd\u0026#39;, [\u0026#34;h{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;, \u0026#34;ch{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;]) -\u0026gt;with([\u0026#39;product\u0026#39;]) -\u0026gt;first(); if ($database \u0026amp;\u0026amp; !preg_match(\u0026#34;/mysql/i\u0026#34;, $database[\u0026#39;product\u0026#39;][\u0026#39;chrScript\u0026#39;])) { $datauser = $database[\u0026#39;DBLogin\u0026#39;]; $datapassword = $database[\u0026#39;Password\u0026#39;] ? $database[\u0026#39;Password\u0026#39;] : $vhost[\u0026#39;Password\u0026#39;]; } //数据库不能字母开头,如果迁移后的ftp是数字开通的,更换一下数据库名 if (intval($datauser[0]) \u0026gt; 0) { $datauser = \u0026#34;h{$datauser}\u0026#34;; } $action = \u0026#34;/database?action=AddDatabase\u0026#34;; $p = [ \u0026#39;name\u0026#39; =\u0026gt; $datauser, \u0026#39;codeing\u0026#39; =\u0026gt; \u0026#34;utf8\u0026#34;, \u0026#39;db_user\u0026#39; =\u0026gt; $datauser, \u0026#39;password\u0026#39; =\u0026gt; $datapassword, \u0026#39;dtype\u0026#39; =\u0026gt; \u0026#39;SQLServer\u0026#39;, \u0026#39;contact\u0026#39; =\u0026gt; $siteId, \u0026#39;dataAccess\u0026#39; =\u0026gt; \u0026#39;127.0.0.1\u0026#39;, \u0026#39;address\u0026#39; =\u0026gt; \u0026#39;127.0.0.1\u0026#39;, \u0026#39;ps\u0026#39; =\u0026gt; $datauser, ]; $logID_AddDatabase = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $AddDatabaseResp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID_AddDatabase, $AddDatabaseResp); if ($AddDatabaseResp[\u0026#39;status\u0026#39;] === true) { try { $this-\u0026gt;get_mssql_row(\u0026#34;{$vhost[\u0026#39;UserName\u0026#39;]}_ms\u0026#34;, \u0026#34;ALTER DATABASE [{$vhost[\u0026#39;UserName\u0026#39;]}_ms] MODIFY FILE ( NAME = N\u0026#39;{$vhost[\u0026#39;UserName\u0026#39;]}_ms\u0026#39;, MAXSIZE = 100MB )\u0026#34;); } catch (\\Throwable $e) { WebLog::log(\u0026#34;{$vhost[\u0026#39;UserName\u0026#39;]} 修改mssql容量失败:\u0026#34; . $e-\u0026gt;getMessage()); } } return $AddDatabaseResp[\u0026#39;status\u0026#39;] === true ? true : $AddDatabaseResp[\u0026#39;msg\u0026#39;]; } public function BatchRemoveCrontab($vhost) { $action = \u0026#34;/crontab?action=GetCrontab\u0026#34;; $p = [ \u0026#39;page\u0026#39; =\u0026gt; 1, ]; $CrontabList = $this-\u0026gt;request($action, $p); foreach ($CrontabList as $crontab) { if ($crontab[\u0026#39;sType\u0026#39;] == \u0026#39;database\u0026#39; \u0026amp;\u0026amp; in_array($crontab[\u0026#39;sName\u0026#39;], [\u0026#34;{$vhost[\u0026#39;UserName\u0026#39;]}_ms\u0026#34;, $vhost[\u0026#39;UserName\u0026#39;]])) { $this-\u0026gt;RemoveCrontab([\u0026#39;id\u0026#39; =\u0026gt; $crontab]); } elseif ($crontab[\u0026#39;sType\u0026#39;] == \u0026#39;site\u0026#39; \u0026amp;\u0026amp; $crontab[\u0026#39;sName\u0026#39;] == $vhost[\u0026#39;chrDomain\u0026#39;]) { $this-\u0026gt;RemoveCrontab([\u0026#39;id\u0026#39; =\u0026gt; $crontab]); } } } public function RemoveCrontab($crontab) { $action = \u0026#34;/crontab?action=DelCrontab\u0026#34;; $p = [ \u0026#39;id\u0026#39; =\u0026gt; $crontab[\u0026#39;id\u0026#39;], ]; $resp = $this-\u0026gt;request($action, $p); return $resp[\u0026#39;status\u0026#39;] === true ? true : $resp[\u0026#39;msg\u0026#39;]; } public function BatchAddCrontab($vhost) { //创建计划任务定时备份 $action = \u0026#34;/crontab?action=AddCrontab\u0026#34;; $p = [ \u0026#39;sType\u0026#39; =\u0026gt; \u0026#39;site\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#34;备份网站[{$vhost[\u0026#39;chrDomain\u0026#39;]}]\u0026#34;, \u0026#39;type\u0026#39; =\u0026gt; \u0026#39;day\u0026#39;, \u0026#39;hour\u0026#39; =\u0026gt; 1, \u0026#39;minute\u0026#39; =\u0026gt; 30, \u0026#39;sName\u0026#39; =\u0026gt; $vhost[\u0026#39;chrDomain\u0026#39;], \u0026#39;backupTo\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;save\u0026#39; =\u0026gt; 3, \u0026#39;sBody\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ]; $logID_AddCrontab = $this-\u0026gt;logRequest(array_merge($p, [\u0026#39;action\u0026#39; =\u0026gt; $action])); $AddCrontabResp = $this-\u0026gt;request($action, $p); $this-\u0026gt;logResponse($logID_AddCrontab, $AddCrontabResp); $databaseList = VhostDB::whereIn(\u0026#39;fIDIDProd\u0026#39;, [\u0026#34;h{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;, \u0026#34;ch{$vhost[\u0026#39;IDVHost\u0026#39;]}\u0026#34;]) -\u0026gt;with([\u0026#39;product\u0026#39;]) -\u0026gt;get(); $mysql_sName = $vhost[\u0026#39;UserName\u0026#39;]; $mssql_sName = \u0026#34;{$vhost[\u0026#39;UserName\u0026#39;]}_ms\u0026#34;; foreach ($databaseList as $database) { if (preg_match(\u0026#34;/mysql/i\u0026#34;, $database[\u0026#39;product\u0026#39;][\u0026#39;chrScript\u0026#39;])) { $mysql_sName = $database[\u0026#39;DBLogin\u0026#39;]; } else { $mssql_sName = $database[\u0026#39;DBLogin\u0026#39;]; } } $p = [ \u0026#39;sType\u0026#39; =\u0026gt; \u0026#39;database\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#34;备份数据库[{$vhost[\u0026#39;UserName\u0026#39;]}]\u0026#34;, \u0026#39;type\u0026#39; =\u0026gt; \u0026#39;day\u0026#39;, \u0026#39;hour\u0026#39; =\u0026gt; 2, \u0026#39;minute\u0026#39; =\u0026gt; 30, \u0026#39;sName\u0026#39; =\u0026gt; $mysql_sName, \u0026#39;backupTo\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;save\u0026#39; =\u0026gt; 3, \u0026#39;sBody\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ]; $this-\u0026gt;request($action, $p); $p = [ \u0026#39;sType\u0026#39; =\u0026gt; \u0026#39;database\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#34;备份数据库[{$vhost[\u0026#39;UserName\u0026#39;]}_ms]\u0026#34;, \u0026#39;type\u0026#39; =\u0026gt; \u0026#39;day\u0026#39;, \u0026#39;hour\u0026#39; =\u0026gt; 2, \u0026#39;minute\u0026#39; =\u0026gt; 30, \u0026#39;sName\u0026#39; =\u0026gt; $mssql_sName, \u0026#39;backupTo\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;save\u0026#39; =\u0026gt; 3, \u0026#39;sBody\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ]; $this-\u0026gt;request($action, $p); } public function DescribeInstanceMonitorData($vhost, $param = []) { $action = \u0026#34;/files?action=get_path_size\u0026#34;; $p = [ \u0026#39;path\u0026#39; =\u0026gt; \u0026#34;D:/{$vhost[\u0026#39;Quota\u0026#39;]}/{$vhost[\u0026#39;chrDomain\u0026#39;]}\u0026#34;, ]; $sizeResp = $this-\u0026gt;request($action, $p); return [ \u0026#39;Size\u0026#39; =\u0026gt; $sizeResp[\u0026#39;size\u0026#39;] ]; } } window 版 安装宝塔至d盘 打开服务器管理器-\u0026gt;添加角色和功能-\u0026gt;服务器角色-\u0026gt;文件和存储服务-\u0026gt;文件和ISCSI服务-\u0026gt;文件服务器资源管理器 打开文件服務器資源管理器\n","permalink":"/tech/baota/","summary":"前言 对比一般市场上的虚拟主机,宝塔都能兼容支持绝大多数的功能,并且宝塔有个比较大的特点为,页面上的接口均可以通过api请求,因此产生了这个想法定制出宝塔基础的虚拟主机\n目标 前置条件 window server的主机\n宝塔需安装在数据盘D盘上\n正式内容 定义的配置文件 /data/vhost/baota.conf.json\n[ { \u0026#34;fchrServer\u0026#34;:\u0026#34;flage\u0026#34;, \u0026#34;host\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;key\u0026#34;:\u0026#34;bt_api_key\u0026#34;, \u0026#34;port\u0026#34;:\u0026#34;8888\u0026#34;, \u0026#34;mysql\u0026#34;:\u0026#34;mysql_password\u0026#34;, \u0026#34;sqlserver\u0026#34;:\u0026#34;mssql_password\u0026#34;, \u0026#34;region_id\u0026#34;:\u0026#34;hk\u0026#34;, \u0026#34;zone_id\u0026#34;:\u0026#34;hk-02\u0026#34;, \u0026#34;network\u0026#34;:\u0026#34;bgp\u0026#34; } ] 封装好的交互php函数方法\nclass VhostBaotaClient implements VhostClientInterface { use ApiConfigTrait; use ApiLoggerTrait; private $client; private $key = \u0026#34;\u0026#34;; public $host = \u0026#34;\u0026#34;; private $port = \u0026#34;8888\u0026#34;; private $mssql_password = \u0026#34;\u0026#34;; /** * @var array 远端主机的状态转换 */ public $RemoteStatus = [ \u0026#39;1\u0026#39; =\u0026gt; \u0026#39;Running\u0026#39;, \u0026#39;0\u0026#39; =\u0026gt; \u0026#39;Stopped\u0026#39;, ]; public $IISRemoteStatus = [ \u0026#39;Started\u0026#39; =\u0026gt; \u0026#39;Running\u0026#39;, \u0026#39;Stopped\u0026#39; =\u0026gt; \u0026#39;Stopped\u0026#39;, ]; public static function getConfig() { return json_decode(file_get_contents(\u0026#39;/data/vhost/baota.","title":"从0到1 用宝塔集成虚拟主机提供商"},{"content":" static public $DEF_PI = 3.14159265359; // PI static public $DEF_2PI= 6.28318530712; // 2*PI static public $DEF_PI180= 0.01745329252; // PI/180.0 static public $DEF_R =6370693.5; // radius of earth /** * 适用于近距离测直线距离 */ public static function GetShortDistance($lon1, $lat1, $lon2, $lat2) { // 角度转换为弧度 $ew1 = $lon1 * self::$DEF_PI180; $ns1 = $lat1 * self::$DEF_PI180; $ew2 = $lon2 * self::$DEF_PI180; $ns2 = $lat2 * self::$DEF_PI180; // 经度差 $dew = $ew1 - $ew2; // 若跨东经和西经180 度，进行调整 if ($dew \u0026gt; self::$DEF_PI) $dew = self::$DEF_2PI - $dew; else if ($dew \u0026lt; -self::$DEF_PI) $dew = self::$DEF_2PI + $dew; $dx = self::$DEF_R * cos($ns1) * $dew; // 东西方向长度(在纬度圈上的投影长度) $dy = self::$DEF_R * ($ns1 - $ns2); // 南北方向长度(在经度圈上的投影长度) // 勾股定理求斜边长 $distance = sqrt($dx * $dx + $dy * $dy); return $distance; } ","permalink":"/study/php-distance/","summary":" static public $DEF_PI = 3.14159265359; // PI static public $DEF_2PI= 6.28318530712; // 2*PI static public $DEF_PI180= 0.01745329252; // PI/180.0 static public $DEF_R =6370693.5; // radius of earth /** * 适用于近距离测直线距离 */ public static function GetShortDistance($lon1, $lat1, $lon2, $lat2) { // 角度转换为弧度 $ew1 = $lon1 * self::$DEF_PI180; $ns1 = $lat1 * self::$DEF_PI180; $ew2 = $lon2 * self::$DEF_PI180; $ns2 = $lat2 * self::$DEF_PI180; // 经度差 $dew = $ew1 - $ew2; // 若跨东经和西经180 度，进行调整 if ($dew \u0026gt; self::$DEF_PI) $dew = self::$DEF_2PI - $dew; else if ($dew \u0026lt; -self::$DEF_PI) $dew = self::$DEF_2PI + $dew; $dx = self::$DEF_R * cos($ns1) * $dew; // 东西方向长度(在纬度圈上的投影长度) $dy = self::$DEF_R * ($ns1 - $ns2); // 南北方向长度(在经度圈上的投影长度) // 勾股定理求斜边长 $distance = sqrt($dx * $dx + $dy * $dy); return $distance; } ","title":"Php-根据经纬度计算直线距离"},{"content":"前言 域名的编码解码\n什么是PunyCode 英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。 中文域名在IIS或Apache中应如何设置主机头呢\n在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(xn\u0026ndash;fiqsC146Ah4ex80Cro7A.com)便可。 新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码\n目标 前置条件 正式内容 \u0026lt;?php class Punycode { const TMIN=1; const TMAX=26; const BASE = 36; const INITIAL_N = 128; const INITIAL_BIAS = 72; const DAMP = 700; const SKEW = 38; const DELIMITER = \u0026#39;-\u0026#39;; const MAXINT = 2147483647; //encode编码时候的错误返回值 const ERROR_BAD_INPUT = -1; const ERROR_BIG_OUTPUT = -2; const ERROR_OVERFLOW = -3; /** * 配置 * 1: 使用iconv * 2: iconv Unicode-1-1 * 3: 使用mb_convert_encoding(较通用，需mb_string支持) */ const CHARSET_MODE = 3; /** * punycode编码 * @param string $input * 输入的字符传不能有空格. * 以.分割几段来进行处理 * 对中文全角字母不区分大小写 * 中文字符不能包含@#$%之类的字符 * @param string $code 字符编码 */ public static function encode($input, $code=\u0026#34;UTF-8\u0026#34;) { $input=trim($input); //由于包括CNNIC在内的中国技术人员的倡导和推动，此次发布的国际标准在英文句号\u0026#34;.\u0026#34;的基础上，另外增加了中文句号作为多语种域名各级之间的分隔符。 //这主要是为了满足中文域名的独特需求，省去输入中文域名时中英文之间切换的麻烦。 $input=str_replace(\u0026#34;。\u0026#34;,\u0026#34;.\u0026#34;,$input); if (!self::hasChinese($input)) return $input; //$input = stripslashes($input); $strarr=array(); $strarr=explode(\u0026#34;.\u0026#34;,$input); $output=\u0026#34;\u0026#34;; for ($i=0;$i\u0026lt;count($strarr);$i++){ $tmp_output = self::encodeHandle($strarr[$i], $code); if(!$tmp_output || $tmp_output\u0026lt;0)\treturn; if ($i!=count($strarr)-1) $tmp_output.=\u0026#34;.\u0026#34;; $output.=$tmp_output; } return $output; } /** * 判断域名是否包含中文字符 * @param string $domain * @return bool */ public static function hasChinese($domain) { $len=strlen($domain); for($i=0;$i\u0026lt;$len;$i++){ if(ord(substr($domain,$i,1))\u0026gt;128) return true; } return false; } /** * unicode 编码 * @param string $str * @return string $newstr */ public static function unicodeEncode($str) { //$newstr = chr(255).chr(254); $newstr = \u0026#39;\u0026#39;; for ($i=0; $i\u0026lt;strlen($str); $i+=2) { $newstr .= chr(ord(substr($str, $i+1, 1))).chr(ord(substr($str, $i, 1))); } return $newstr; } /** * 判断数字是否是ansi字符,禁止 @#$%^ 之类的符号 * @param string $char * @return bool */ public static function isBasic($char) { return $char\u0026lt;128; //return $aa=(($c==45) || ($c\u0026gt;=48 \u0026amp;\u0026amp; $c\u0026lt;=57) || ($c\u0026gt;=65 \u0026amp;\u0026amp; $c\u0026lt;=90) || ($c\u0026gt;=97 \u0026amp;\u0026amp; $c\u0026lt;=122)); } /** * 处理数字,大小写字母 * @param string $bcp * @param string $flag */ public static function basicEncode($bcp, $flag) { //if ($bcp-97\u0026lt;26) $bcp-=32; $bcp-=($bcp-97\u0026lt;26)\u0026lt;\u0026lt;5; return $bcp+((!$flag \u0026amp;\u0026amp; ($bcp-65\u0026lt;26))\u0026lt;\u0026lt;5); } /** * 处理数字,大小写字母 * @param char $d * @param char $flag * @return char */ public static function digitEncode($d,$flag) { $s1=(int)($d\u0026lt;26);//0或1 $s2=(int)($flag!=0); return $d+22+75*$s1-($s2\u0026lt;\u0026lt;5); } /** * 编码的参数 */ public static function adapt($delta,$numpoints,$firsttime) { $delta= $firsttime ? (int)($delta/self::DAMP) : (int)($delta/2); $delta+=(int)($delta/$numpoints); for ($k=0; $delta\u0026gt;(int)(((self::BASE-self::TMIN)*self::TMAX)/2); $k+=self::BASE){ $delta = (int)($delta/(self::BASE-self::TMIN)); } return $k+(int)(((self::BASE-self::TMIN+1)*$delta)/($delta+self::SKEW)); } //主要的编码转换工作 public static function encodeHandle($input, $code=\u0026#34;UTF-8\u0026#34;) { $oldinput=$input; //将输入字符转换为Unicode.cnnic用GBK,GBK是GB2312的扩展.取代GBK的是GB18030 if (self::CHARSET_MODE == 1) { $input = iconv($code, \u0026#34;Unicode\u0026#34;, $input); } elseif (self::CHARSET_MODE == 2) { $input = iconv($code, \u0026#34;Unicode-1-1\u0026#34;, $input); $input = self::unicodeEncode($input); } elseif (self::CHARSET_MODE == 3) { $input = mb_convert_encoding($input, \u0026#34;Unicode\u0026#34;, $code); $input = self::unicodeEncode($input); } //去掉前面的255和254 if (ord(substr($input, 0)) == 255 \u0026amp;\u0026amp; ord(substr($input, 1)) == 254) $input = substr($input, 2); $n = self::INITIAL_N; $delta = 0; $out = 0; $max_out = 256; $bias = self::INITIAL_BIAS; $output = \u0026#34;\u0026#34;; $inputlen = strlen($input); $ar = array(); //用一个数组来保存字的编码 for ($i=0; $i\u0026lt;$inputlen; $i+=2){ $tmpar = ord($input{$i+1}) * 256 + ord($input{$i}); //32为空格的Unicode,空格后不作处理(参考cnnic).输入是最好限制输入不能包含空格 if ($tmpar == 32) break; $ar[]=$tmpar; } $inputlen = count($ar); //将大写全角字符转为小写 for ($i=0; $i\u0026lt;$inputlen; $i++) { if ($ar[$i] \u0026gt;= 65313 \u0026amp;\u0026amp; $ar[$i] \u0026lt;= 65338) $ar[$i] = $ar[$i]+32; } //$arr=array(); $case_flags = \u0026#39;\u0026#39;; for ($j=0; $j\u0026lt;$inputlen; $j++){ if (self::isBasic($ar[$j])){ if ($max_out-$out\u0026lt;2) return self::ERROR_BIG_OUTPUT; //$arr[]=$case_flags ? punycode_encode_basic($input{$j}, $case_flags{$j}) : ord($input{$j}); $output.=$case_flags ? chr(self::basicEncode($ar[$j], $case_flags{$j})) : chr($ar[$j]);//不考虑大小写 $out++; } } $h=$b=$out; if ($b\u0026gt;0) { $output .= self::DELIMITER; $out++; } while ($h\u0026lt;$inputlen){ for ($m=self::MAXINT,$j=0;$j\u0026lt;$inputlen;$j++){ if ($ar[$j]\u0026gt;=$n \u0026amp;\u0026amp; $ar[$j]\u0026lt;$m) $m=$ar[$j]; } if ($m-$n\u0026gt;(self::MAXINT-$delta)/($h+1)) return self::ERROR_OVERFLOW; $delta+=($m-$n)*($h+1); $n=$m; for ($j=0;$j\u0026lt;$inputlen;$j++){ if ($ar[$j]\u0026lt;$n){ if (++$delta==0) return self::ERROR_OVERFLOW; } if ($ar[$j]==$n){ $q=$delta; for ($k=self::BASE; ;$k+=self::BASE){ if ($out\u0026gt;=$max_out) return self::ERROR_BIG_OUTPUT; $t=$k\u0026lt;=$bias ? self::TMIN:($k\u0026gt;=($bias+self::TMAX) ? self::TMAX:($k-$bias)); if ($q\u0026lt;$t) break; //$arr[]=punycode_encode_digit($t+($q-$t)%(punycode_BASE-$t),0); $output.=chr(self::digitEncode($t+($q-$t)%(self::BASE-$t),0)); $out++; $q=(int)(($q-$t)/(self::BASE-$t)); } //$arr[]=punycode_encode_digit($q,$case_flags \u0026amp;\u0026amp; $case_flags{$j}); //$output.=chr(punycode_encode_digit($q,$case_flags \u0026amp;\u0026amp; $case_flags{$j})); $output.=chr(self::digitEncode($q,0));//忽略大小写（0输出小写字母,1输出大写字母） $out++; $bias=self::adapt($delta, $h+1, $h==$b); $delta=0; $h++; } } $delta++; $n++; } if (substr($output,-1,1)==self::DELIMITER) $output=substr($output,0,-1); if ($output!=$oldinput) $output=\u0026#34;xn--\u0026#34;.$output; return $output; } //============================================= /** * punycode 解码 * @param string $input * @param string $code * @return string */ public static function decode($input, $code=\u0026#34;UTF-8\u0026#34;) { $input=trim($input); if (self::hasChinese($input)) return $input; $strarr=array(); $strarr=explode(\u0026#34;.\u0026#34;,$input); $output=\u0026#34;\u0026#34;; for ($i=0;$i\u0026lt;count($strarr);$i++){ if (substr($strarr[$i],0,4)==\u0026#34;xn--\u0026#34;){ $input=substr($strarr[$i],4); $outtmp=self::decodeHandle($input, $code); if (!$outtmp || $outtmp\u0026lt;0) return; $output.=$outtmp; }else{ $output.=$strarr[$i]; } if ($i!=count($strarr)-1) $output.=\u0026#34;.\u0026#34;; }//for return $output; } /** * 主要的解码转换工作 * @param string $input * @param string $code * @return string */ public static function decodeHandle($input, $code=\u0026#34;UTF-8\u0026#34;) { $n = self::INITIAL_N; $out = 0; $i = 0; $max_out = 256; $bias = self::INITIAL_BIAS; $inputlen = strlen($input); $outputa = array(); $b = 0; for ($j=0;$j\u0026lt;$inputlen;$j++) if ($input{$j}==\u0026#34;-\u0026#34;) $b=$j; for ($j=0; $j\u0026lt;$b; $j++) { /*不考虑大小写 if (ord($input{$j})-65\u0026lt;26) $case_flags[$out]=\u0026#34;1\u0026#34;; else $case_flags[$out]=\u0026#34;0\u0026#34;; */ if (ord($input{$j})\u0026gt;128) return -1; //$output.=$input{$j}; $outputa[]=ord($input{$j}); $out++; } for ($in=$b\u0026gt;0?$b+1:0;$in\u0026lt;$inputlen;$out++) { $oldi=$i; $w=1; for ($k=self::BASE; ;$k+=self::BASE){ if ($in\u0026gt;=$inputlen) return -2; $digit = self::digitDecode(ord($input{$in++})); if ($digit\u0026gt;=self::BASE) return -3; if ($digit\u0026gt;(self::MAXINT-$i)/$w) return -4; $i=$i+$digit*$w; $t=$k\u0026lt;=$bias ? self::TMIN : ($k\u0026gt;=($bias+self::TMAX) ? self::TMAX:($k-$bias)); if ($digit\u0026lt;$t) break; if ($w\u0026gt;self::MAXINT/(self::BASE-$t)) return -5; $w=$w*(self::BASE-$t); } $bias = self::adapt($i-$oldi,$out+1,$oldi==0); if ($i/($out+1)\u0026gt;self::MAXINT-$n) return -6; $n+=(int)($i/($out+1)); $i=$i%($out+1); if ($out\u0026gt;=$max_out) return -7; /*不考虑大小写 for ($q=0;$q\u0026lt;$out-$i;$i++) $case_flags[$i+1+$q]= $case_flags[$i+$q]; if ($input[$in-1]-65\u0026lt;26) $case_flags[$i]=\u0026#39;1\u0026#39;; else $case_flags[$i]=\u0026#39;0\u0026#39;; */ for ($qq=0;$qq\u0026lt;($out-$i);$qq++) $outputa[($i+$out)-$i-$qq]=$outputa[($i+$out)-$i-$qq-1]; $outputa[$i++]=$n; } $outputstr=\u0026#34;\u0026#34;; for ($i=0;$i\u0026lt;count($outputa);$i++){ if ($outputa[$i]\u0026lt;128) $outputstr.=chr($outputa[$i]).chr(0); else{ $hx=dechex($outputa[$i]); $gaowei=substr($hx,2,2); $diwei=substr($hx,0,2); $tmp_output=chr(hexdec($gaowei)).chr(hexdec($diwei)); $outputstr.=$tmp_output; } } //echo $outputstr.\u0026#34; \u0026lt;br\u0026gt;\u0026#34;; //for ($i=0; $i\u0026lt;strlen($outputstr); $i++) echo ord(substr($outputstr,$i,1)).\u0026#34; \u0026#34;; if (self::CHARSET_MODE == 1) { $outputstr = iconv(\u0026#34;Unicode\u0026#34;, $code, $outputstr); } elseif (self::CHARSET_MODE == 2) { $outputstr = self::unicodeEncode($outputstr); $outputstr = iconv(\u0026#34;Unicode-1-1\u0026#34;, $code, $outputstr); } elseif (self::CHARSET_MODE == 3) { $outputstr = self::unicodeEncode($outputstr); $outputstr = mb_convert_encoding($outputstr, $code, \u0026#34;Unicode\u0026#34;); } return $outputstr; } /** * 处理数字,大小写字母 * @param char $char * @return char */ public static function digitDecode($char) { if (($char-48)\u0026lt;10) return ($char-22); if (($char-65)\u0026lt;26) return ($char-65); if (($char-97)\u0026lt;26) return ($char-97); return self::BASE; } } ","permalink":"/tech/php-punycode/","summary":"前言 域名的编码解码\n什么是PunyCode 英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。 中文域名在IIS或Apache中应如何设置主机头呢\n在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(xn\u0026ndash;fiqsC146Ah4ex80Cro7A.com)便可。 新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码\n目标 前置条件 正式内容 \u0026lt;?php class Punycode { const TMIN=1; const TMAX=26; const BASE = 36; const INITIAL_N = 128; const INITIAL_BIAS = 72; const DAMP = 700; const SKEW = 38; const DELIMITER = \u0026#39;-\u0026#39;; const MAXINT = 2147483647; //encode编码时候的错误返回值 const ERROR_BAD_INPUT = -1; const ERROR_BIG_OUTPUT = -2; const ERROR_OVERFLOW = -3; /** * 配置 * 1: 使用iconv * 2: iconv Unicode-1-1 * 3: 使用mb_convert_encoding(较通用，需mb_string支持) */ const CHARSET_MODE = 3; /** * punycode编码 * @param string $input * 输入的字符传不能有空格.","title":"Php-编码解码punycode"},{"content":" /** * 生成CSR和KEY */ public function CreateCsr() { $all = request()-\u0026gt;all(); $dn = [ \u0026#34;countryName\u0026#34; =\u0026gt; trim(strtoupper($all[\u0026#39;countryName\u0026#39;])), //所在国家 \u0026#34;stateOrProvinceName\u0026#34; =\u0026gt; trim($all[\u0026#39;stateOrProvinceName\u0026#39;]), //所在省份 \u0026#34;localityName\u0026#34; =\u0026gt; trim($all[\u0026#39;localityName\u0026#39;]), //所在城市 \u0026#34;organizationName\u0026#34; =\u0026gt; trim($all[\u0026#39;organizationName\u0026#39;]), //注册人姓名 \u0026#34;organizationalUnitName\u0026#34; =\u0026gt; trim($all[\u0026#39;organizationalUnitName\u0026#39;]), //组织名称 \u0026#34;commonName\u0026#34; =\u0026gt; trim($all[\u0026#39;commonName\u0026#39;]), //公共名称 ]; if (isset($all[\u0026#39;emailAddress\u0026#39;]) \u0026amp;\u0026amp; $all[\u0026#39;emailAddress\u0026#39;]) { $dn[\u0026#39;emailAddress\u0026#39;] = $all[\u0026#39;emailAddress\u0026#39;]; } $config = [ \u0026#34;private_key_bits\u0026#34; =\u0026gt; isset($all[\u0026#39;keysize\u0026#39;]) \u0026amp;\u0026amp; $all[\u0026#39;keysize\u0026#39;] ? $all[\u0026#39;keysize\u0026#39;] : 2048, //字节数 512 1024 2048 4096 等 \u0026#34;private_key_type\u0026#34; =\u0026gt; OPENSSL_KEYTYPE_RSA, //加密类型 \u0026#39;digest_alg\u0026#39; =\u0026gt; \u0026#39;sha256\u0026#39;, ]; $privkey = openssl_pkey_new($config); if ($privkey === false) { $config[\u0026#39;config\u0026#39;] = \u0026#34;D:/phpstudy_pro/Extensions/Apache2.4.39/conf/openssl.cnf\u0026#34;; // $config[\u0026#39;config\u0026#39;] = \u0026#34;/etc/pki/tls/openssl.cnf\u0026#34;; $privkey = openssl_pkey_new($config); } $csr = openssl_csr_new($dn, $privkey, $config); // $sscert = openssl_csr_sign($csr, null, $privkey, 365, $csr,$config); // openssl_x509_export($sscert, $csrkey); //将公钥证书存储到一个变量 $csrkey，由 PEM 编码格式命名。 openssl_csr_export($csr, $csrout); openssl_pkey_export($privkey, $privatekey, null, $config); return $this-\u0026gt;returnResponse([ \u0026#39;certificate\u0026#39; =\u0026gt; $csrout, \u0026#39;privatekey\u0026#39; =\u0026gt; $privatekey ]); } ","permalink":"/study/php-ssl/","summary":"/** * 生成CSR和KEY */ public function CreateCsr() { $all = request()-\u0026gt;all(); $dn = [ \u0026#34;countryName\u0026#34; =\u0026gt; trim(strtoupper($all[\u0026#39;countryName\u0026#39;])), //所在国家 \u0026#34;stateOrProvinceName\u0026#34; =\u0026gt; trim($all[\u0026#39;stateOrProvinceName\u0026#39;]), //所在省份 \u0026#34;localityName\u0026#34; =\u0026gt; trim($all[\u0026#39;localityName\u0026#39;]), //所在城市 \u0026#34;organizationName\u0026#34; =\u0026gt; trim($all[\u0026#39;organizationName\u0026#39;]), //注册人姓名 \u0026#34;organizationalUnitName\u0026#34; =\u0026gt; trim($all[\u0026#39;organizationalUnitName\u0026#39;]), //组织名称 \u0026#34;commonName\u0026#34; =\u0026gt; trim($all[\u0026#39;commonName\u0026#39;]), //公共名称 ]; if (isset($all[\u0026#39;emailAddress\u0026#39;]) \u0026amp;\u0026amp; $all[\u0026#39;emailAddress\u0026#39;]) { $dn[\u0026#39;emailAddress\u0026#39;] = $all[\u0026#39;emailAddress\u0026#39;]; } $config = [ \u0026#34;private_key_bits\u0026#34; =\u0026gt; isset($all[\u0026#39;keysize\u0026#39;]) \u0026amp;\u0026amp; $all[\u0026#39;keysize\u0026#39;] ? $all[\u0026#39;keysize\u0026#39;] : 2048, //字节数 512 1024 2048 4096 等 \u0026#34;private_key_type\u0026#34; =\u0026gt; OPENSSL_KEYTYPE_RSA, //加密类型 \u0026#39;digest_alg\u0026#39; =\u0026gt; \u0026#39;sha256\u0026#39;, ]; $privkey = openssl_pkey_new($config); if ($privkey === false) { $config[\u0026#39;config\u0026#39;] = \u0026#34;D:/phpstudy_pro/Extensions/Apache2.","title":"Php-生成ssl证书所需的csr信息"},{"content":"前言 良好的文档规范,对于前后端的沟通是很有必要的,减少没必要的误解和争执,前端也可以根据文档的格式先制定出页面的流程和提前mock数据开发\n目标 前置条件 zircote/swagger-php document\n正式内容 1. 基础了解定义文档的语法 文档描述 @OA\\Info(title=\u0026ldquo;Fapi\u0026rdquo;, version=\u0026ldquo;0.1\u0026rdquo;,description=\u0026ldquo;antdv5的接口前缀为/api/v2\n当前版本为/api/返回列表的格式有区别外其他一致\u0026rdquo;),\n文档中的api路径 @OA\\Server(url=\u0026ldquo;http://www.github.com/\u0026quot;,description=\u0026quot;github\u0026quot;,),\n预先定义好返回数据的格式 @OA\\Schema(\nschema=\u0026ldquo;Pagination\u0026rdquo;,\n@OA\\Property(property=\u0026ldquo;current\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n@OA\\Property(property=\u0026ldquo;total\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n@OA\\Property(property=\u0026ldquo;pageSize\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n)\n分组每种接口的类别,如/user, /order /record 等, @OA\\Tag(name=\u0026ldquo;api-tag\u0026rdquo;, description=\u0026ldquo;Tag\u0026rdquo;)\n编写接口的声明 @OA\\Post( path=\u0026#34;/api/index\u0026#34;, summary=\u0026#34;api name\u0026#34;, operationId=\u0026#34;UniqueOperationId\u0026#34;, tags={\u0026#34;api-tag\u0026#34;}, @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;fIDDomainFolder\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;},description=\u0026#34;\u0026#34;), @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;intActive\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;integer\u0026#34;},description=\u0026#34;\u0026#34;), @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;timetype\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;enum\u0026#34;:{\u0026#34;created_at\u0026#34;,\u0026#34;expired_at\u0026#34;,\u0026#34;update_at\u0026#34;}},description=\u0026#34;时间类型\u0026#34;), @OA\\Response( response=\u0026#34;200\u0026#34;, description=\u0026#34;An example resource\u0026#34;, @OA\\JsonContent( @OA\\Property(property=\u0026#34;Pagination\u0026#34;,type=\u0026#34;object\u0026#34;, ref=\u0026#34;#/components/schemas/Pagination\u0026#34;), ) ), ) 2. 将定义好的注释声明生成openapi.json $openapi = \\OpenApi\\Generator::scan([ path . \u0026#39;api\u0026#39;, path . \u0026#39;model\u0026#39;, ]); $openapi-\u0026gt;toJson() 3. 生成好的json文件,在页面中引入后就可以提供给前端查看 \u0026lt;!-- HTML for static distribution bundle build --\u0026gt; \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Swagger UI\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;./swagger-ui.css\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; href=\u0026#34;./favicon-32x32.png\u0026#34; sizes=\u0026#34;32x32\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; href=\u0026#34;./favicon-16x16.png\u0026#34; sizes=\u0026#34;16x16\u0026#34; /\u0026gt; \u0026lt;style\u0026gt; html { box-sizing: border-box; overflow: -moz-scrollbars-vertical; overflow-y: scroll; } *, *:before, *:after { box-sizing: inherit; } body { margin:0; background: #fafafa; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;swagger-ui\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;./swagger-ui-bundle.js\u0026#34; charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;./swagger-ui-standalone-preset.js\u0026#34; charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; window.onload = function() { // Begin Swagger UI call region const ui = SwaggerUIBundle({ urls: [ {url: \u0026#34;swagger.json\u0026#34;, name: \u0026#39;main\u0026#39;}, {url: \u0026#34;https://petstore.swagger.io/v2/swagger.json\u0026#34;, name: \u0026#39;example\u0026#39;}, ], dom_id: \u0026#39;#swagger-ui\u0026#39;, deepLinking: true, presets: [ SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset ], plugins: [ SwaggerUIBundle.plugins.DownloadUrl ], layout: \u0026#34;StandaloneLayout\u0026#34; }); // End Swagger UI call region window.ui = ui; }; \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ","permalink":"/tech/php-swagger/","summary":"前言 良好的文档规范,对于前后端的沟通是很有必要的,减少没必要的误解和争执,前端也可以根据文档的格式先制定出页面的流程和提前mock数据开发\n目标 前置条件 zircote/swagger-php document\n正式内容 1. 基础了解定义文档的语法 文档描述 @OA\\Info(title=\u0026ldquo;Fapi\u0026rdquo;, version=\u0026ldquo;0.1\u0026rdquo;,description=\u0026ldquo;antdv5的接口前缀为/api/v2\n当前版本为/api/返回列表的格式有区别外其他一致\u0026rdquo;),\n文档中的api路径 @OA\\Server(url=\u0026ldquo;http://www.github.com/\u0026quot;,description=\u0026quot;github\u0026quot;,),\n预先定义好返回数据的格式 @OA\\Schema(\nschema=\u0026ldquo;Pagination\u0026rdquo;,\n@OA\\Property(property=\u0026ldquo;current\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n@OA\\Property(property=\u0026ldquo;total\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n@OA\\Property(property=\u0026ldquo;pageSize\u0026rdquo;, type=\u0026ldquo;integer\u0026rdquo;),\n)\n分组每种接口的类别,如/user, /order /record 等, @OA\\Tag(name=\u0026ldquo;api-tag\u0026rdquo;, description=\u0026ldquo;Tag\u0026rdquo;)\n编写接口的声明 @OA\\Post( path=\u0026#34;/api/index\u0026#34;, summary=\u0026#34;api name\u0026#34;, operationId=\u0026#34;UniqueOperationId\u0026#34;, tags={\u0026#34;api-tag\u0026#34;}, @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;fIDDomainFolder\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;},description=\u0026#34;\u0026#34;), @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;intActive\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;integer\u0026#34;},description=\u0026#34;\u0026#34;), @OA\\Parameter(in=\u0026#34;query\u0026#34;, name=\u0026#34;timetype\u0026#34;, required=false,schema={\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;enum\u0026#34;:{\u0026#34;created_at\u0026#34;,\u0026#34;expired_at\u0026#34;,\u0026#34;update_at\u0026#34;}},description=\u0026#34;时间类型\u0026#34;), @OA\\Response( response=\u0026#34;200\u0026#34;, description=\u0026#34;An example resource\u0026#34;, @OA\\JsonContent( @OA\\Property(property=\u0026#34;Pagination\u0026#34;,type=\u0026#34;object\u0026#34;, ref=\u0026#34;#/components/schemas/Pagination\u0026#34;), ) ), ) 2. 将定义好的注释声明生成openapi.json $openapi = \\OpenApi\\Generator::scan([ path . \u0026#39;api\u0026#39;, path . \u0026#39;model\u0026#39;, ]); $openapi-\u0026gt;toJson() 3.","title":"Php-Swagger代码了解"},{"content":"前言 项目上需要接触到不同种类的支付平台,有一些其他第三方平台的支付也是为了企业没资质或为了得到更好的费率原因,因此也总结一下个人在开发中的使用记录\n目标 通过合并支付的接口,让用户在选择支付上能更简单快捷\n前置条件 相关支付平台都有自己的支付申请条件,因此根据需求自行了解注册 环境 PHP\n正式内容 支付的需求最主要在于3个接口的实现\ninterface PaymentClientInterface { /** * 支付请求 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function pay($out_trade_no,$total_fee,$param=[]); /** * 查询支付结果 * @return mixed */ public function query($out_trade_no,$param=[]); /** * 支付回调,由于各支付平台的参数都不同,因此返回原始信息自己处理 * @param $all * @return mixed */ public function handle($all); } wechat 微信支付 public function query($out_trade_no, $param = []) { $action = \u0026#34;/v3/pay/transactions/out-trade-no/{$out_trade_no}\u0026#34;; $resp = $this-\u0026gt;request($action, [], \u0026#39;GET\u0026#39;); return $resp; } private function sign($url, $params, $method) { $params[\u0026#39;mchid\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;mch_id\u0026#39;]; $serial_no = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;serial_no\u0026#39;]; $mch_private_key = file_get_contents(\u0026#34;/conf/wechat_private_key.pem\u0026#34;); ksort($params); $timestamp = time(); $nonce = $this-\u0026gt;getNonceStr(32); $body = ($method == \u0026#34;POST\u0026#34; ? json_encode($params, JSON_UNESCAPED_UNICODE) : \u0026#34;\u0026#34;); $url_parts = parse_url($url); $canonical_url = $url_parts[\u0026#39;path\u0026#39;] . ($method == \u0026#34;POST\u0026#34; ? \u0026#34;\u0026#34; : \u0026#34;?\u0026#34; . http_build_query($params)); $message = $method . \u0026#34;\\n\u0026#34; . $canonical_url . \u0026#34;\\n\u0026#34; . $timestamp . \u0026#34;\\n\u0026#34; . $nonce . \u0026#34;\\n\u0026#34; . $body . \u0026#34;\\n\u0026#34;; openssl_sign($message, $raw_sign, $mch_private_key, \u0026#39;sha256WithRSAEncryption\u0026#39;); $sign = base64_encode($raw_sign); $token = sprintf(\u0026#39;mchid=\u0026#34;%s\u0026#34;,nonce_str=\u0026#34;%s\u0026#34;,timestamp=\u0026#34;%d\u0026#34;,serial_no=\u0026#34;%s\u0026#34;,signature=\u0026#34;%s\u0026#34;\u0026#39;, $params[\u0026#39;mchid\u0026#39;], $nonce, $timestamp, $serial_no, $sign); return [\u0026#39;query\u0026#39; =\u0026gt; $params, \u0026#39;token\u0026#39; =\u0026gt; $token]; } /** * @param $action * @param $params * @return mixed * @throws GuzzleHttp\\Exception\\GuzzleException */ private function request($action, $params, $method = \u0026#34;POST\u0026#34;) { $url = $this-\u0026gt;apiConfig-\u0026gt;Host . $action; $data = $this-\u0026gt;sign($url, $params, $method); $option = [ \u0026#39;verify\u0026#39; =\u0026gt; false, \u0026#39;headers\u0026#39; =\u0026gt; [ \u0026#39;User-Agent\u0026#39; =\u0026gt; \u0026#39;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)\u0026#39;, \u0026#39;Accept\u0026#39; =\u0026gt; \u0026#39;*/*\u0026#39;, \u0026#39;Content-Type\u0026#39; =\u0026gt; \u0026#39;application/json\u0026#39;, \u0026#39;Authorization\u0026#39; =\u0026gt; \u0026#34;WECHATPAY2-SHA256-RSA2048 {$data[\u0026#39;token\u0026#39;]}\u0026#34;, ], \u0026#39;http_errors\u0026#39; =\u0026gt; false, ]; if ($method == \u0026#34;GET\u0026#34;) { $option[\u0026#39;query\u0026#39;] = $data[\u0026#39;query\u0026#39;]; } else { $option[\u0026#39;body\u0026#39;] = json_encode($data[\u0026#39;query\u0026#39;], JSON_UNESCAPED_UNICODE); } try { $request = $this-\u0026gt;client-\u0026gt;request($method, $url, $option ) -\u0026gt;getBody() -\u0026gt;getContents(); return json_decode($request, 1); } catch (GuzzleHttp\\Exception\\GuzzleException $e) { return [\u0026#39;error\u0026#39; =\u0026gt; $e-\u0026gt;getMessage()]; } catch (\\Throwable $e) { return [\u0026#39;error\u0026#39;=\u0026gt;$e-\u0026gt;getMessage()] ; } } /** * * 产生随机字符串，不长于32位 * @param int $length * @return string 产生的随机字符串 */ public function getNonceStr($length = 32) { $chars = \u0026#34;abcdefghijklmnopqrstuvwxyz0123456789\u0026#34;; $str = \u0026#34;\u0026#34;; for ($i = 0; $i \u0026lt; $length; $i++) { $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); } return $str; } /** * 支付请求 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function jsapi($out_trade_no, $total_fee, $param = []) { $action = \u0026#34;/v3/pay/transactions/jsapi\u0026#34;; $p = [ \u0026#39;appid\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;appid\u0026#39;], \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;充值\u0026#39;, \u0026#39;out_trade_no\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;amount\u0026#39; =\u0026gt; [ \u0026#39;total\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;currency\u0026#39; =\u0026gt; \u0026#39;CNY\u0026#39;, ], \u0026#39;notify_url\u0026#39; =\u0026gt; (isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] ? $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] : request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/wxpay_notify_v3.php\u0026#34;, // \u0026#39;notify_url\u0026#39; =\u0026gt; \u0026#34;http://\u0026#34; . MAINSITE . \u0026#34;/payment/wxpay_notify_v3.php\u0026#34;, \u0026#39;payer\u0026#39; =\u0026gt; [ \u0026#39;openid\u0026#39; =\u0026gt; $param[\u0026#39;openid\u0026#39;], ], ]; $resp = $this-\u0026gt;request($action, $p); if (isset($resp[\u0026#39;code\u0026#39;])) return $resp[\u0026#39;message\u0026#39;]; $data = [ \u0026#39;appId\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;appid\u0026#39;], \u0026#39;timeStamp\u0026#39; =\u0026gt; strval(time()), \u0026#39;nonceStr\u0026#39; =\u0026gt; DomainUtil::generateDomainPassword(24, false), \u0026#39;package\u0026#39; =\u0026gt; \u0026#34;prepay_id={$resp[\u0026#39;prepay_id\u0026#39;]}\u0026#34;, ]; $message=\u0026#34;{$data[\u0026#39;appId\u0026#39;]}\\n{$data[\u0026#39;timeStamp\u0026#39;]}\\n{$data[\u0026#39;nonceStr\u0026#39;]}\\n{$data[\u0026#39;package\u0026#39;]}\\n\u0026#34;; openssl_sign($message, $raw_sign, file_get_contents(WWWBASE . \u0026#34;/conf/global/wechat_private_key.pem\u0026#34;), \u0026#39;sha256WithRSAEncryption\u0026#39;); $data[\u0026#39;paySign\u0026#39;] = base64_encode($raw_sign); $data[\u0026#39;openid\u0026#39;]=$param[\u0026#39;openid\u0026#39;]; $data[\u0026#39;signType\u0026#39;]=\u0026#39;RSA\u0026#39;; return [\u0026#39;content\u0026#39;=\u0026gt;$data,\u0026#39;Type\u0026#39;=\u0026gt;\u0026#39;JSAPI\u0026#39;]; } /** * 支付请求 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function pay($out_trade_no, $total_fee, $param = []) { $action = \u0026#34;/v3/pay/transactions/native\u0026#34;; $p = [ \u0026#39;appid\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;appid\u0026#39;], \u0026#39;description\u0026#39; =\u0026gt; \u0026#39;充值\u0026#39;, \u0026#39;out_trade_no\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;amount\u0026#39; =\u0026gt; [ \u0026#39;total\u0026#39; =\u0026gt; intval(strval(round($total_fee,2) * 100)), \u0026#39;currency\u0026#39; =\u0026gt; \u0026#39;CNY\u0026#39;, ], \u0026#39;notify_url\u0026#39; =\u0026gt; \u0026#34;your website url\u0026#34;, ]; $resp = $this-\u0026gt;request($action, $p); if (isset($resp[\u0026#39;error\u0026#39;])\u0026amp;\u0026amp;$resp[\u0026#39;error\u0026#39;]) return $resp[\u0026#39;error\u0026#39;]; if(isset($resp[\u0026#39;message\u0026#39;])\u0026amp;\u0026amp;$resp[\u0026#39;message\u0026#39;]) return $resp[\u0026#39;message\u0026#39;]; return [ \u0026#39;content\u0026#39; =\u0026gt; $resp[\u0026#39;code_url\u0026#39;], \u0026#39;QrcodeUrl\u0026#39; =\u0026gt; $resp[\u0026#39;code_url\u0026#39;], \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;qrcode_url\u0026#39;]; } /** * 支付回调,由于各支付平台的参数都不同,因此返回原始信息自己处理 * @param $all * @return mixed */ public function handle($all) { // TODO: Implement handle() method. } public function decode($associatedData, $nonceStr, $ciphertext) { $ciphertext = base64_decode($ciphertext); if (strlen($ciphertext) \u0026lt;= self::AUTH_TAG_LENGTH_BYTE) { return false; } if (function_exists(\u0026#39;\\sodium_crypto_aead_aes256gcm_is_available\u0026#39;) \u0026amp;\u0026amp; sodium_crypto_aead_aes256gcm_is_available()) { return sodium_crypto_aead_aes256gcm_decrypt($ciphertext, $associatedData, $nonceStr, $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;key\u0026#39;]); } // ext-libsodium (need install libsodium-php 1.x via pecl) if (function_exists(\u0026#39;\\Sodium\\crypto_aead_aes256gcm_is_available\u0026#39;) \u0026amp;\u0026amp; \\Sodium\\crypto_aead_aes256gcm_is_available()) { return \\Sodium\\crypto_aead_aes256gcm_decrypt($ciphertext, $associatedData, $nonceStr, $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;key\u0026#39;]); } // openssl (PHP \u0026gt;= 7.1 support AEAD) if (PHP_VERSION_ID \u0026gt;= 70100 \u0026amp;\u0026amp; in_array(\u0026#39;aes-256-gcm\u0026#39;, \\openssl_get_cipher_methods())) { $ctext = substr($ciphertext, 0, -self::AUTH_TAG_LENGTH_BYTE); $authTag = substr($ciphertext, -self::AUTH_TAG_LENGTH_BYTE); return \\openssl_decrypt($ctext, \u0026#39;aes-256-gcm\u0026#39;, $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;key\u0026#39;], \\OPENSSL_RAW_DATA, $nonceStr, $authTag, $associatedData); } return false; } alipay 支付宝支付 public function pay($out_trade_no, $total_fee, $param = []) { $p = [ \u0026#39;service\u0026#39; =\u0026gt; $this-\u0026gt;is_mobile_request()?\u0026#39;alipay.wap.create.direct.pay.by.user\u0026#39;:\u0026#34;create_direct_pay_by_user\u0026#34;, \u0026#39;partner\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;partner\u0026#39;], \u0026#39;return_url\u0026#39; =\u0026gt; (isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] ? $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] : request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/alipay_return_url.php\u0026#34;, \u0026#39;notify_url\u0026#39; =\u0026gt; (isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] ? $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] : request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/alipay_notify_url.php\u0026#34;, \u0026#39;_input_charset\u0026#39;=\u0026gt;\u0026#39;utf-8\u0026#39;, \u0026#39;subject\u0026#39;=\u0026gt;\u0026#39;网上汇入\u0026#39;, \u0026#39;body\u0026#39;=\u0026gt;\u0026#39;网上汇入\u0026#39;, \u0026#39;out_trade_no\u0026#39;=\u0026gt;$out_trade_no, \u0026#39;total_fee\u0026#39;=\u0026gt;$total_fee, \u0026#39;payment_type\u0026#39;=\u0026gt;1, \u0026#39;show_url\u0026#39;=\u0026gt;(isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] ? $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] : request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)).\u0026#34;://\u0026#34;.MAINSITE, \u0026#39;seller_email\u0026#39;=\u0026gt;$this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;seller_email\u0026#39;], ]; $action=\u0026#34;https://mapi.alipay.com/gateway.do\u0026#34;; $resp=$this-\u0026gt;sign($p); return [\u0026#39;content\u0026#39; =\u0026gt; $action.\u0026#34;?\u0026#34;.http_build_query($resp), \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;url\u0026#39;]; } public function sign($p){ $prestr=\u0026#34;\u0026#34;; ksort($p); foreach ($p as $key=\u0026gt;$value){ $prestr.=\u0026#34;{$key}={$value}\u0026amp;\u0026#34;; } $prestr=trim($prestr,\u0026#34;\u0026amp;\u0026#34;); $p[\u0026#39;sign_type\u0026#39;]=\u0026#39;MD5\u0026#39;; $p[\u0026#39;sign\u0026#39;]=md5($prestr.$this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;security_code\u0026#39;]); return $p; } function is_mobile_request() { $_SERVER[\u0026#39;ALL_HTTP\u0026#39;] = isset($_SERVER[\u0026#39;ALL_HTTP\u0026#39;]) ? $_SERVER[\u0026#39;ALL_HTTP\u0026#39;] : \u0026#39;\u0026#39;; $mobile_browser = \u0026#39;0\u0026#39;; if(isset($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;])\u0026amp;\u0026amp;preg_match(\u0026#39;/(up.browser|up.link|mmp|symbian|smartphone|midp|wap|phone|iphone|ipad|ipod|android|xoom)/i\u0026#39;, strtolower($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]))) $mobile_browser++; if((isset($_SERVER[\u0026#39;HTTP_ACCEPT\u0026#39;])) and (strpos(strtolower($_SERVER[\u0026#39;HTTP_ACCEPT\u0026#39;]),\u0026#39;application/vnd.wap.xhtml+xml\u0026#39;) !== false)) $mobile_browser++; if(isset($_SERVER[\u0026#39;HTTP_X_WAP_PROFILE\u0026#39;])) $mobile_browser++; if(isset($_SERVER[\u0026#39;HTTP_PROFILE\u0026#39;])) $mobile_browser++; if(isset($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;])) { $mobile_ua = strtolower(substr($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;], 0, 4)); $mobile_agents = array( \u0026#39;w3c \u0026#39;, \u0026#39;acs-\u0026#39;, \u0026#39;alav\u0026#39;, \u0026#39;alca\u0026#39;, \u0026#39;amoi\u0026#39;, \u0026#39;audi\u0026#39;, \u0026#39;avan\u0026#39;, \u0026#39;benq\u0026#39;, \u0026#39;bird\u0026#39;, \u0026#39;blac\u0026#39;, \u0026#39;blaz\u0026#39;, \u0026#39;brew\u0026#39;, \u0026#39;cell\u0026#39;, \u0026#39;cldc\u0026#39;, \u0026#39;cmd-\u0026#39;, \u0026#39;dang\u0026#39;, \u0026#39;doco\u0026#39;, \u0026#39;eric\u0026#39;, \u0026#39;hipt\u0026#39;, \u0026#39;inno\u0026#39;, \u0026#39;ipaq\u0026#39;, \u0026#39;java\u0026#39;, \u0026#39;jigs\u0026#39;, \u0026#39;kddi\u0026#39;, \u0026#39;keji\u0026#39;, \u0026#39;leno\u0026#39;, \u0026#39;lg-c\u0026#39;, \u0026#39;lg-d\u0026#39;, \u0026#39;lg-g\u0026#39;, \u0026#39;lge-\u0026#39;, \u0026#39;maui\u0026#39;, \u0026#39;maxo\u0026#39;, \u0026#39;midp\u0026#39;, \u0026#39;mits\u0026#39;, \u0026#39;mmef\u0026#39;, \u0026#39;mobi\u0026#39;, \u0026#39;mot-\u0026#39;, \u0026#39;moto\u0026#39;, \u0026#39;mwbp\u0026#39;, \u0026#39;nec-\u0026#39;, \u0026#39;newt\u0026#39;, \u0026#39;noki\u0026#39;, \u0026#39;oper\u0026#39;, \u0026#39;palm\u0026#39;, \u0026#39;pana\u0026#39;, \u0026#39;pant\u0026#39;, \u0026#39;phil\u0026#39;, \u0026#39;play\u0026#39;, \u0026#39;port\u0026#39;, \u0026#39;prox\u0026#39;, \u0026#39;qwap\u0026#39;, \u0026#39;sage\u0026#39;, \u0026#39;sams\u0026#39;, \u0026#39;sany\u0026#39;, \u0026#39;sch-\u0026#39;, \u0026#39;sec-\u0026#39;, \u0026#39;send\u0026#39;, \u0026#39;seri\u0026#39;, \u0026#39;sgh-\u0026#39;, \u0026#39;shar\u0026#39;, \u0026#39;sie-\u0026#39;, \u0026#39;siem\u0026#39;, \u0026#39;smal\u0026#39;, \u0026#39;smar\u0026#39;, \u0026#39;sony\u0026#39;, \u0026#39;sph-\u0026#39;, \u0026#39;symb\u0026#39;, \u0026#39;t-mo\u0026#39;, \u0026#39;teli\u0026#39;, \u0026#39;tim-\u0026#39;, \u0026#39;tosh\u0026#39;, \u0026#39;tsm-\u0026#39;, \u0026#39;upg1\u0026#39;, \u0026#39;upsi\u0026#39;, \u0026#39;vk-v\u0026#39;, \u0026#39;voda\u0026#39;, \u0026#39;wap-\u0026#39;, \u0026#39;wapa\u0026#39;, \u0026#39;wapi\u0026#39;, \u0026#39;wapp\u0026#39;, \u0026#39;wapr\u0026#39;, \u0026#39;webc\u0026#39;, \u0026#39;winw\u0026#39;, \u0026#39;winw\u0026#39;, \u0026#39;xda\u0026#39;, \u0026#39;xda-\u0026#39; ); if(in_array($mobile_ua, $mobile_agents)) $mobile_browser++; } if(strpos(strtolower($_SERVER[\u0026#39;ALL_HTTP\u0026#39;]), \u0026#39;operamini\u0026#39;) !== false) $mobile_browser++; // Pre-final check to reset everything if the user is on Windows if( isset($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;])\u0026amp;\u0026amp;strpos(strtolower($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]), \u0026#39;windows\u0026#39;) !== false) $mobile_browser=0; // But WP7 is also Windows, with a slightly different characteristic if(isset($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;])\u0026amp;\u0026amp;strpos(strtolower($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]), \u0026#39;windows phone\u0026#39;) !== false) $mobile_browser++; if($mobile_browser\u0026gt;0) return true; else return false; } globalalipay 海外支付宝支付 /** * 支付请求 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function pay($out_trade_no, $total_fee, $param = []) { $p = [ // \u0026#39;product_code\u0026#39; =\u0026gt; \u0026#39;NEW_OVERSEAS_SELLER\u0026#39;, \u0026#39;service\u0026#39; =\u0026gt; \u0026#39;create_forex_trade\u0026#39;, \u0026#39;partner\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;partner\u0026#39;], \u0026#39;return_url\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;return_url\u0026#39;], \u0026#39;notify_url\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;notify_url\u0026#39;], \u0026#39;_input_charset\u0026#39;=\u0026gt;\u0026#39;utf-8\u0026#39;, \u0026#39;subject\u0026#39;=\u0026gt;\u0026#39;網上匯入\u0026#39;, \u0026#39;body\u0026#39;=\u0026gt;\u0026#39;網上匯入\u0026#39;, \u0026#39;out_trade_no\u0026#39;=\u0026gt;$out_trade_no, \u0026#39;total_fee\u0026#39;=\u0026gt;$total_fee, \u0026#39;payment_type\u0026#39;=\u0026gt;1, \u0026#39;show_url\u0026#39;=\u0026gt;(isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] ? $_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;] : request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)).\u0026#34;://\u0026#34;.MAINSITE, \u0026#39;seller_email\u0026#39;=\u0026gt;$this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;seller_email\u0026#39;], \u0026#39;currency\u0026#39;=\u0026gt;isset($param[\u0026#39;currency\u0026#39;])\u0026amp;\u0026amp;$param[\u0026#39;currency\u0026#39;]?$param[\u0026#39;currency\u0026#39;]:\u0026#34;HKD\u0026#34;, ]; $action=\u0026#34;https://mapi.alipay.com/gateway.do\u0026#34;; $resp=$this-\u0026gt;sign($p); return [\u0026#39;content\u0026#39; =\u0026gt; $action.\u0026#34;?\u0026#34;.http_build_query($resp), \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;url\u0026#39;]; } public function sign($p){ $prestr=\u0026#34;\u0026#34;; ksort($p); foreach ($p as $key=\u0026gt;$value){ $prestr.=\u0026#34;{$key}={$value}\u0026amp;\u0026#34;; } $prestr=trim($prestr,\u0026#34;\u0026amp;\u0026#34;); $p[\u0026#39;sign_type\u0026#39;]=\u0026#39;MD5\u0026#39;; $p[\u0026#39;sign\u0026#39;]=md5($prestr.$this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;security_code\u0026#39;]); return $p; } Tonglian 通联支付 /** * 网关支付 * @param $out_trade_no * @param $total_fee * @param array $param * @return array */ public function gateway($out_trade_no, $total_fee, $param = []) { $p = [ \u0026#39;cusid\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;cusid\u0026#39;], \u0026#39;appid\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;Username, \u0026#39;charset\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, // \u0026#39;returl\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;returl\u0026#39; =\u0026gt;( isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;])\u0026amp;\u0026amp;$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]?$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]: request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/allinpay_notify_url.php\u0026#34;, \u0026#39;notifyurl\u0026#39; =\u0026gt;( isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;])\u0026amp;\u0026amp;$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]?$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]: request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/allinpay_notify_url.php\u0026#34;, \u0026#39;trxamt\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;orderid\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;randomstr\u0026#39; =\u0026gt; time(), \u0026#39;gateid\u0026#39; =\u0026gt; isset($param[\u0026#39;bankid\u0026#39;])\u0026amp;\u0026amp;$param[\u0026#39;bankid\u0026#39;]?$param[\u0026#39;bankid\u0026#39;]:\u0026#34;\u0026#34;, \u0026#39;paytype\u0026#39; =\u0026gt;isset($param[\u0026#39;bankid\u0026#39;])\u0026amp;\u0026amp;$param[\u0026#39;bankid\u0026#39;]?\u0026#34;B2C\u0026#34;: \u0026#39;B2C,B2B\u0026#39;, ]; $p[\u0026#39;sign\u0026#39;] = $this-\u0026gt;sign($p); $url = \u0026#34;{$this-\u0026gt;apiConfig-\u0026gt;Host}/gateway/pay\u0026#34;; $str = \u0026#34;\u0026lt;form id=\u0026#39;myform1\u0026#39; method=\u0026#39;post\u0026#39; action=\u0026#39;{$url}\u0026#39; target=\u0026#39;_blank\u0026#39; \u0026gt;\u0026#34;; foreach ($p as $key =\u0026gt; $value) { $str .= \u0026#34;\u0026lt;input type=\u0026#39;hidden\u0026#39; name=\u0026#39;{$key}\u0026#39; value=\u0026#39;{$value}\u0026#39;/\u0026gt;\u0026#34;; } $str .= \u0026#39;\u0026lt;/form\u0026gt;\u0026#39;; return [\u0026#39;content\u0026#39; =\u0026gt; $str, \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;form\u0026#39;]; } /** * 支付请求 * 文档url: https://aipboss.allinpay.com/know/devhelp/main.php?pid=15#mid=88 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function pay($out_trade_no, $total_fee, $param = []) { $action = \u0026#34;/unitorder/pay\u0026#34;; $paytype = \u0026#34;W01\u0026#34;; if (isset($param[\u0026#39;paytype\u0026#39;])) { switch ($param[\u0026#39;paytype\u0026#39;]) { case \u0026#34;wechat\u0026#34;: $paytype = \u0026#34;W01\u0026#34;; break; case \u0026#34;alipay\u0026#34;: $paytype = \u0026#34;A01\u0026#34;; break; case \u0026#34;qq\u0026#34;: $paytype = \u0026#34;Q01\u0026#34;; break; case \u0026#34;union\u0026#34;: $paytype = \u0026#34;U01\u0026#34;; break; } } $p = [ \u0026#39;trxamt\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;reqsn\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;paytype\u0026#39; =\u0026gt; $paytype, \u0026#39;randomstr\u0026#39; =\u0026gt; time(), \u0026#39;body\u0026#39; =\u0026gt; \u0026#39;充值\u0026#39;, \u0026#39;remark\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;notify_url\u0026#39; =\u0026gt;( isset($_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;])\u0026amp;\u0026amp;$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]?$_SERVER[\u0026#39;REQUEST_SCHEME\u0026#39;]: request()-\u0026gt;server(\u0026#39;REQUEST_SCHEME\u0026#39;)) . \u0026#34;://\u0026#34; . MAINSITE . \u0026#34;/payment/allinpay_notify_url.php\u0026#34;, ]; $resp = $this-\u0026gt;request($action, $p); if (isset($resp[\u0026#39;errmsg\u0026#39;])) { return $resp[\u0026#39;errmsg\u0026#39;]; } $array = [ \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;qrcode_url\u0026#39;, \u0026#39;QrcodeUrl\u0026#39; =\u0026gt; $resp[\u0026#39;payinfo\u0026#39;], \u0026#39;content\u0026#39; =\u0026gt; $resp[\u0026#39;payinfo\u0026#39;], ]; return $array; } public function gateway_query($out_trade_no, $param = []) { $action=\u0026#34;/gateway/query\u0026#34;; $p=[ \u0026#39;orderid\u0026#39;=\u0026gt;$out_trade_no, ]; $resp=$this-\u0026gt;request($action,$p); return isset($resp[\u0026#39;errmsg\u0026#39;])?$resp[\u0026#39;errmsg\u0026#39;]: $resp; } /** * 查询支付结果 * @return mixed */ public function query($out_trade_no, $param = []) { $action=\u0026#34;/unitorder/query\u0026#34;; $p=[ \u0026#39;reqsn\u0026#39;=\u0026gt;$out_trade_no, ]; $resp=$this-\u0026gt;request($action,$p); return isset($resp[\u0026#39;errmsg\u0026#39;])?$resp[\u0026#39;errmsg\u0026#39;]: $resp; } public function sign($param) { $param[\u0026#39;key\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;Password; ksort($param); $buff = \u0026#34;\u0026#34;; foreach ($param as $k =\u0026gt; $v) { if ($v != \u0026#34;\u0026#34; \u0026amp;\u0026amp; !is_array($v)) { $buff .= $k . \u0026#34;=\u0026#34; . $v . \u0026#34;\u0026amp;\u0026#34;; } } return md5(trim($buff, \u0026#34;\u0026amp;\u0026#34;)); } public function request($action, $param) { $param[\u0026#39;cusid\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;cusid\u0026#39;]; $param[\u0026#39;appid\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;Username; $param[\u0026#39;version\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;version\u0026#39;]; $sign = $this-\u0026gt;sign($param); $param[\u0026#34;sign\u0026#34;] = $sign; $content = $this-\u0026gt;client-\u0026gt;request(\u0026#34;POST\u0026#34;, $this-\u0026gt;apiConfig-\u0026gt;Host . $action, [ \u0026#39;form_params\u0026#39; =\u0026gt; $param ])-\u0026gt;getBody()-\u0026gt;getContents(); return json_decode($content, 1); } /** * 支付回调,由于各支付平台的参数都不同,因此返回原始信息自己处理 * @param $all * @return mixed */ public function handle($all) { $sign = $all[\u0026#39;sign\u0026#39;]; unset($all[\u0026#39;sign\u0026#39;]); $mySign = $this-\u0026gt;sign($all); if (strtolower($sign) == strtolower($mySign)) { return [ \u0026#39;out_trade_no\u0026#39; =\u0026gt; $all[\u0026#39;cusorderid\u0026#39;], \u0026#39;amount\u0026#39; =\u0026gt; $all[\u0026#39;trxamt\u0026#39;] / 100, \u0026#39;attach\u0026#39; =\u0026gt; isset($all[\u0026#39;trxreserved\u0026#39;]) ? $all[\u0026#39;trxreserved\u0026#39;] : \u0026#34;\u0026#34;, \u0026#39;created_at\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d H:i:s\u0026#34;, strtotime($all[\u0026#39;trxdate\u0026#39;])), \u0026#39;payed_at\u0026#39; =\u0026gt; date(\u0026#34;Y-m-d H:i:s\u0026#34;, strtotime($all[\u0026#39;paytime\u0026#39;])), ]; } return false; } public function refund($out_trade_no, $total_fee, $param = []) { $action = \u0026#34;/unitorder/refund\u0026#34;; $p = [ \u0026#39;trxamt\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;oldreqsn\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;reqsn\u0026#39;=\u0026gt;\u0026#34;{$out_trade_no}_refund\u0026#34;, \u0026#39;remark\u0026#39;=\u0026gt;\u0026#39;退款\u0026#39; ]; return $this-\u0026gt;request($action, $p); } union 银联支付 public function pay($out_trade_no, $total_fee, $param = []) { $http_type = ((isset($_SERVER[\u0026#39;HTTPS\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;HTTPS\u0026#39;] == \u0026#39;on\u0026#39;) || (isset($_SERVER[\u0026#39;HTTP_X_FORWARDED_PROTO\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;HTTP_X_FORWARDED_PROTO\u0026#39;] == \u0026#39;https\u0026#39;)) ? \u0026#39;https://\u0026#39; : \u0026#39;http://\u0026#39;; $returnUrl = $http_type . \u0026#39;/payment/unionpay_result.php?\u0026#39;;//返回URL $notifyUrl = $http_type . \u0026#39;/payment/unionpay_result.php?\u0026#39;;//通知URL $p = [ \u0026#39;version\u0026#39; =\u0026gt; \u0026#39;1.0.0\u0026#39;, \u0026#39;charset\u0026#39; =\u0026gt; \u0026#39;UTF-8\u0026#39;, \u0026#39;merId\u0026#39; =\u0026gt; $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;merId\u0026#39;], \u0026#39;merAbbr\u0026#39; =\u0026gt; \u0026#39;merAbbr\u0026#39;, \u0026#39;acqCode\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;merCode\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;transType\u0026#39; =\u0026gt; \u0026#39;01\u0026#39;, \u0026#39;origQid\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;commodityUrl\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;commodityName\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;commodityUnitPrice\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;commodityQuantity\u0026#39; =\u0026gt; 1, \u0026#39;commodityDiscount\u0026#39; =\u0026gt; 0, \u0026#39;transferFee\u0026#39; =\u0026gt; 0, \u0026#39;orderNumber\u0026#39; =\u0026gt; $out_trade_no, \u0026#39;orderAmount\u0026#39; =\u0026gt; $total_fee * 100, \u0026#39;orderCurrency\u0026#39; =\u0026gt; \u0026#39;156\u0026#39;, \u0026#39;orderTime\u0026#39; =\u0026gt; date(\u0026#39;YmdHis\u0026#39;), \u0026#39;customerIp\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;customerName\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;defaultPayType\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;defaultBankNumber\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;transTimeout\u0026#39; =\u0026gt; \u0026#39;300000\u0026#39;, \u0026#39;merReserved\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;frontEndUrl\u0026#39; =\u0026gt; $returnUrl, \u0026#39;backEndUrl\u0026#39; =\u0026gt; $notifyUrl, ]; $url=$this-\u0026gt;apiConfig-\u0026gt;Host.\u0026#34;/api/Pay.action\u0026#34;; $p=$this-\u0026gt;sign($p); $str = \u0026#34;\u0026lt;form id=\u0026#39;myform1\u0026#39; method=\u0026#39;post\u0026#39; action=\u0026#39;{$url}\u0026#39; target=\u0026#39;_blank\u0026#39; \u0026gt;\u0026#34;; foreach ($p as $key =\u0026gt; $value) { $str .= \u0026#34;\u0026lt;input type=\u0026#39;hidden\u0026#39; name=\u0026#39;{$key}\u0026#39; id=\u0026#39;{$key}\u0026#39; value=\u0026#39;{$value}\u0026#39;/\u0026gt;\u0026#34;; } $str .= \u0026#39;\u0026lt;/form\u0026gt;\u0026#39;; return [\u0026#39;content\u0026#39; =\u0026gt; $str, \u0026#39;Type\u0026#39; =\u0026gt; \u0026#39;form\u0026#39;]; } public function sign($p){ $prestr=\u0026#34;\u0026#34;; ksort($p); reset($p); foreach ($p as $key=\u0026gt;$value){ $prestr.=\u0026#34;{$key}={$value}\u0026amp;\u0026#34;; } $p[\u0026#39;signMethod\u0026#39;]=\u0026#39;MD5\u0026#39;; $p[\u0026#39;signature\u0026#39;]=md5($prestr.md5($this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;sucurity_key\u0026#39;])); return $p; } ","permalink":"/tech/php-pay/","summary":"前言 项目上需要接触到不同种类的支付平台,有一些其他第三方平台的支付也是为了企业没资质或为了得到更好的费率原因,因此也总结一下个人在开发中的使用记录\n目标 通过合并支付的接口,让用户在选择支付上能更简单快捷\n前置条件 相关支付平台都有自己的支付申请条件,因此根据需求自行了解注册 环境 PHP\n正式内容 支付的需求最主要在于3个接口的实现\ninterface PaymentClientInterface { /** * 支付请求 * @param $order_out_no * @param $total_fee * @param array $param * @return mixed */ public function pay($out_trade_no,$total_fee,$param=[]); /** * 查询支付结果 * @return mixed */ public function query($out_trade_no,$param=[]); /** * 支付回调,由于各支付平台的参数都不同,因此返回原始信息自己处理 * @param $all * @return mixed */ public function handle($all); } wechat 微信支付 public function query($out_trade_no, $param = []) { $action = \u0026#34;/v3/pay/transactions/out-trade-no/{$out_trade_no}\u0026#34;; $resp = $this-\u0026gt;request($action, [], \u0026#39;GET\u0026#39;); return $resp; } private function sign($url, $params, $method) { $params[\u0026#39;mchid\u0026#39;] = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;mch_id\u0026#39;]; $serial_no = $this-\u0026gt;apiConfig-\u0026gt;ExtraConfig[\u0026#39;serial_no\u0026#39;]; $mch_private_key = file_get_contents(\u0026#34;/conf/wechat_private_key.","title":"Php支付接口"},{"content":"学习来源Bilibili 根据例子编写出线性回归方程\nimport tensorflow as tf import pandas as pd data=pd.read_csv(\u0026#39;./demo1.csv\u0026#39;) x=data.Education y=data.Income model=tf.keras.Sequential(()) model.add(tf.keras.layers.Dense(1,input_shape=(1,))) model.compile(optimizer=\u0026#39;adam\u0026#39;,loss=\u0026#39;mse\u0026#39;) history=model.fit(x,y,epochs=10000) res=model.predict(pd.Series([20])) print(res) ,Education,Income\n1,10.000000 ,26.658839\n2,10.401338 ,27.306435\n3,10.842809 ,22.132410\n4,11.244147 ,21.169841\n5,11.645449 ,15.192634\n6,12.086957 ,26.398951\n7,12.048829 ,17.435307\n8,12.889632 ,25.507885\n9,13.290970 ,36.884595\n10,13.732441 ,39.666109\n11,14.133779 ,34.396281\n12,14.635117 ,41.497994\n13,14.978589 ,44.981575\n14,15.377926 ,47.039595\n15,15.779264 ,48.252578\n16,16.220736 ,57.034251\n17,16.622074 ,51.490919\n18,17.023411 ,51.336621\n19,17.464883 ,57.681998\n20,17.866221 ,68.553714\n21,18.267559 ,64.310925\n22,18.709030 ,68.959009\n23,19.110368 ,74.614639\n24,19.511706 ,71.867195\n25,19.913043 ,76.098135\n26,20.354515 ,75.775216\n27,20.755853 ,72.486055\n28,21.167191 ,77.355021\n29,21.598662 ,72.118790\n30,22.000000 ,80.260571\n","permalink":"/study/python-tensorflow-002/","summary":"学习来源Bilibili 根据例子编写出线性回归方程\nimport tensorflow as tf import pandas as pd data=pd.read_csv(\u0026#39;./demo1.csv\u0026#39;) x=data.Education y=data.Income model=tf.keras.Sequential(()) model.add(tf.keras.layers.Dense(1,input_shape=(1,))) model.compile(optimizer=\u0026#39;adam\u0026#39;,loss=\u0026#39;mse\u0026#39;) history=model.fit(x,y,epochs=10000) res=model.predict(pd.Series([20])) print(res) ,Education,Income\n1,10.000000 ,26.658839\n2,10.401338 ,27.306435\n3,10.842809 ,22.132410\n4,11.244147 ,21.169841\n5,11.645449 ,15.192634\n6,12.086957 ,26.398951\n7,12.048829 ,17.435307\n8,12.889632 ,25.507885\n9,13.290970 ,36.884595\n10,13.732441 ,39.666109\n11,14.133779 ,34.396281\n12,14.635117 ,41.497994\n13,14.978589 ,44.981575\n14,15.377926 ,47.039595\n15,15.779264 ,48.252578\n16,16.220736 ,57.034251\n17,16.622074 ,51.490919\n18,17.023411 ,51.336621\n19,17.464883 ,57.681998\n20,17.866221 ,68.553714\n21,18.267559 ,64.310925\n22,18.709030 ,68.959009\n23,19.110368 ,74.614639\n24,19.511706 ,71.867195\n25,19.913043 ,76.098135","title":"Python-初学tensorflow第二天-学习例子"},{"content":"初学第一天主要学习如果搭建环境和快捷安装TensorFlow的扩展\n打开miniconda官网 选择合适自己的系统来安装python环境 安装TensorFlow扩展 : pip install tensorflow==2.8.0 可能pip版本不够导致安装失败 easy_install -U pip 安装其他所需的包: pip install pandas matplotlib nodebook pandas 数据分析库 matplotlib python绘图库 nodebook 基于web的开发环境 安装cuda 安装pytorch Q: 运行失败时返回 Could not load dynamic library \u0026lsquo;cudart64_110.dll\u0026rsquo;; dlerror: cudart64_110.dll not found A: 在截图中找到相应的版本后,打开 nvidia\nQ: 安装cuda失败时返回 you already have a newer version of the nvdia frameview sdk installed\nA: 找到C:\\Program Files\\NVIDIA Corporation\\FrameViewSDK文件夹进行卸载\nQ: 安装cuda一直安装不成功,nsight visual studio edition提示安装失败 A: 尝试卸载电脑的Visual Studio Community\nQ: Downgrade the protobuf package to 3.20.x or lower.Downgrade the protobuf package to 3.20.x or lower.\nA: pip uninstall protobuf和pip install protobuf==3.19.0\n","permalink":"/study/python-tensorflow-001/","summary":"初学第一天主要学习如果搭建环境和快捷安装TensorFlow的扩展\n打开miniconda官网 选择合适自己的系统来安装python环境 安装TensorFlow扩展 : pip install tensorflow==2.8.0 可能pip版本不够导致安装失败 easy_install -U pip 安装其他所需的包: pip install pandas matplotlib nodebook pandas 数据分析库 matplotlib python绘图库 nodebook 基于web的开发环境 安装cuda 安装pytorch Q: 运行失败时返回 Could not load dynamic library \u0026lsquo;cudart64_110.dll\u0026rsquo;; dlerror: cudart64_110.dll not found A: 在截图中找到相应的版本后,打开 nvidia\nQ: 安装cuda失败时返回 you already have a newer version of the nvdia frameview sdk installed\nA: 找到C:\\Program Files\\NVIDIA Corporation\\FrameViewSDK文件夹进行卸载\nQ: 安装cuda一直安装不成功,nsight visual studio edition提示安装失败 A: 尝试卸载电脑的Visual Studio Community\nQ: Downgrade the protobuf package to 3.","title":"Python-初学tensorflow第一天-搭建环境"},{"content":"import sys import threading import queue import traceback import statistics class NoResultsPending(Exception): \u0026#34;\u0026#34;\u0026#34;All works requests have been processed\u0026#34;\u0026#34;\u0026#34; pass class NoWorkersAvailable(Exception): \u0026#34;\u0026#34;\u0026#34;No worket threads available to process remaining requests.\u0026#34;\u0026#34;\u0026#34; pass def _handle_thread_exception(request, exc_info): \u0026#34;\u0026#34;\u0026#34;默认的异常处理函数，只是简单的打印\u0026#34;\u0026#34;\u0026#34; traceback.print_exception(*exc_info) #classes class WorkerThread(threading.Thread): \u0026#34;\u0026#34;\u0026#34;后台线程，真正的工作线程，从请求队列(requestQueue)中获取work， 并将执行后的结果添加到结果队列(resultQueue)\u0026#34;\u0026#34;\u0026#34; def __init__(self,requestQueue,resultQueue,poll_timeout=5,**kwds): threading.Thread.__init__(self,**kwds) \u0026#39;\u0026#39;\u0026#39;设置为守护进行\u0026#39;\u0026#39;\u0026#39; self.setDaemon(True) self._requestQueue = requestQueue self._resultQueue = resultQueue self._poll_timeout = poll_timeout \u0026#39;\u0026#39;\u0026#39;设置一个flag信号，用来表示该线程是否还被dismiss,默认为false\u0026#39;\u0026#39;\u0026#39; self._dismissed = threading.Event() self.start() # self.join() def run(self): \u0026#39;\u0026#39;\u0026#39;每个线程尽可能多的执行work，所以采用loop， 只要线程可用，并且requestQueue有work未完成，则一直loop\u0026#39;\u0026#39;\u0026#39; while True: if self._dismissed.is_set(): break try: \u0026#39;\u0026#39;\u0026#39; Queue.Queue队列设置了线程同步策略，并且可以设置timeout。 一直block，直到requestQueue有值，或者超时 \u0026#39;\u0026#39;\u0026#39; request = self._requestQueue.get(True, self._poll_timeout) except queue.Empty: continue else: \u0026#39;\u0026#39;\u0026#39;之所以在这里再次判断dimissed，是因为之前的timeout时间里，很有可能，该线程被dismiss掉了\u0026#39;\u0026#39;\u0026#39; if self._dismissed.is_set(): self._requestQueue.put(request) break try: \u0026#39;\u0026#39;\u0026#39;执行callable，讲请求和结果以tuple的方式放入requestQueue\u0026#39;\u0026#39;\u0026#39; result = request.callable(*request.args, **request.kwds) # statistics.g_logger.debug self.getName() self._resultQueue.put((request, result)) except: \u0026#39;\u0026#39;\u0026#39;异常处理\u0026#39;\u0026#39;\u0026#39; request.exception = True self._resultQueue.put((request, sys.exc_info())) def dismiss(self): \u0026#39;\u0026#39;\u0026#39; 设置一个标志，表示完成当前work之后，退出 \u0026#39;\u0026#39;\u0026#39; self._dismissed.set() class WorkRequest: \u0026#39;\u0026#39;\u0026#39; @param callable_:，可定制的，执行work的函数 @param args: 列表参数 @param kwds: 字典参数 @param requestID: id @param callback: 可定制的，处理resultQueue队列元素的函数 @param exc_callback:可定制的，处理异常的函数 \u0026#39;\u0026#39;\u0026#39; def __init__(self, callable_, args=None, kwds=None, requestID=None, callback=None, exc_callback=_handle_thread_exception): if requestID == None: self.requestID = id(self) else: try: self.requestID = hash(requestID) except TypeError: raise TypeError(\u0026#34;requestId must be hashable\u0026#34;) self.exception = False self.callback = callback self.exc_callback = exc_callback self.callable = callable_ self.args = args or [] self.kwds = kwds or {} def __str__(self): return \u0026#34;WorkRequest id=%s args=%r kwargs=%r exception=%s\u0026#34; % \\ (self.requestID, self.args, self.kwds, self.exception) class ThreadPool: \u0026#39;\u0026#39;\u0026#39; @param num_workers:初始化的线程数量 @param q_size,resq_size: requestQueue和result队列的初始大小 @param poll_timeout: 设置工作线程WorkerThread的timeout，也就是等待requestQueue的timeout \u0026#39;\u0026#39;\u0026#39; def __init__(self, num_workers, q_size=0, resq_size=0, poll_timeout=5): self._requestQueue = queue.Queue(q_size) self._resultQueue = queue.Queue(resq_size) self.workers = [] self.dismissedWorkers = [] self.workRequests = {} #设置个字典，方便使用 self.createWorkers(num_workers,poll_timeout) def createWorkers(self,num_workers,poll_timeout=5): \u0026#39;\u0026#39;\u0026#39;创建num_workers个WorkThread,默认timeout为5\u0026#39;\u0026#39;\u0026#39; for i in range(num_workers): self.workers.append(WorkerThread(self._requestQueue, self._resultQueue, poll_timeout=poll_timeout)) def dismissWorkers(self, num_workers, do_join=False): \u0026#39;\u0026#39;\u0026#39;停用num_workers数量的线程，并加入dismiss_list\u0026#39;\u0026#39;\u0026#39; dismiss_list = [] for i in range(min(num_workers, len(self.workers))): worker = self.workers.pop() worker.dismiss() dismiss_list.append(worker) if do_join: for worker in dismiss_list: worker.join() else: self.dismissedWorkers.extend(dismiss_list) def joinAllDismissedWorkers(self): \u0026#39;\u0026#39;\u0026#39;join 所有停用的thread\u0026#39;\u0026#39;\u0026#39; #statistics.g_logger.info len(self.dismissedWorkers) for worker in self.dismissedWorkers: worker.join() self.dismissedWorkers = [] def putRequest(self, request, block=True, timeout=None): assert isinstance(request, WorkRequest) assert not getattr(request, \u0026#39;exception\u0026#39;, None) \u0026#39;\u0026#39;\u0026#39;当queue满了，也就是容量达到了前面设定的q_size,它将一直阻塞，直到有空余位置，或是timeout\u0026#39;\u0026#39;\u0026#39; self._requestQueue.put(request, block, timeout) self.workRequests[request.requestID] = request def poll(self, block=False): while True: if not self.workRequests: raise NoResultsPending elif block and not self.workers: raise NoWorkersAvailable try: \u0026#39;\u0026#39;\u0026#39;默认只要resultQueue有值，则取出，否则一直block\u0026#39;\u0026#39;\u0026#39; request, result = self._resultQueue.get(block=block) if request.exception and request.exc_callback: request.exc_callback(request, result) if request.callback and not (request.exception and request.exc_callback): request.callback(request, result) del self.workRequests[request.requestID] except queue.Empty: break except Exception as e: # statistics.g_logger.error(traceback.print_exc()) # statistics.g_logger.info(e) pass def wait(self): while True: try: self.poll(True) except NoResultsPending: break def workersize(self): return len(self.workers) def stop(self): \u0026#39;\u0026#39;\u0026#39;join 所有的thread,确保所有的线程都执行完毕\u0026#39;\u0026#39;\u0026#39; self.dismissWorkers(self.workersize(), True) self.joinAllDismissedWorkers() #Test a demo if __name__==\u0026#39;__main__\u0026#39;: import random import time import datetime def do_work(data): time.sleep(random.randint(1, 3)) res = str(datetime.datetime.now()) + \u0026#34; \u0026#34; + str(data) return res def print_result(request,result): print(\u0026#34;---Result from request %s : %r\u0026#34; % (request.requestID, result)) # statistics.g_logger.info(\u0026#34;---Result from request %s : %r\u0026#34; % (request.requestID, result)) main = ThreadPool(3) for i in range(40): req = WorkRequest(do_work, args=[i], kwds={}, callback=print_result) main.putRequest(req) print(\u0026#34;work request #%s added.\u0026#34; % req.requestID) # statistics.g_logger.info(\u0026#34;work request #%s added.\u0026#34; % req.requestID) print(\u0026#34;work request #%s added.\u0026#34; % req.requestID) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize() + \u0026#39;-\u0026#39;*20) counter = 0 while True: try: time.sleep(0.5) main.poll() if(counter==5): statistics.g_logger.info(\u0026#34;Add 3 more workers threads\u0026#34;) main.createWorkers(3) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize()+\u0026#39;-\u0026#39;*20) if(counter==10): statistics.g_logger.info(\u0026#34;dismiss 2 workers threads\u0026#34;) main.dismissWorkers(2) statistics.g_logger.info(\u0026#39;-\u0026#39;*20 + main.workersize() + \u0026#39;-\u0026#39;*20) counter+=1 except NoResultsPending: statistics.g_logger.info(\u0026#34;no pending results\u0026#34;) break main.stop() statistics.g_logger.info(\u0026#34;Stop\u0026#34;) ","permalink":"/tech/python-thread/","summary":"import sys import threading import queue import traceback import statistics class NoResultsPending(Exception): \u0026#34;\u0026#34;\u0026#34;All works requests have been processed\u0026#34;\u0026#34;\u0026#34; pass class NoWorkersAvailable(Exception): \u0026#34;\u0026#34;\u0026#34;No worket threads available to process remaining requests.\u0026#34;\u0026#34;\u0026#34; pass def _handle_thread_exception(request, exc_info): \u0026#34;\u0026#34;\u0026#34;默认的异常处理函数，只是简单的打印\u0026#34;\u0026#34;\u0026#34; traceback.print_exception(*exc_info) #classes class WorkerThread(threading.Thread): \u0026#34;\u0026#34;\u0026#34;后台线程，真正的工作线程，从请求队列(requestQueue)中获取work， 并将执行后的结果添加到结果队列(resultQueue)\u0026#34;\u0026#34;\u0026#34; def __init__(self,requestQueue,resultQueue,poll_timeout=5,**kwds): threading.Thread.__init__(self,**kwds) \u0026#39;\u0026#39;\u0026#39;设置为守护进行\u0026#39;\u0026#39;\u0026#39; self.setDaemon(True) self._requestQueue = requestQueue self._resultQueue = resultQueue self._poll_timeout = poll_timeout \u0026#39;\u0026#39;\u0026#39;设置一个flag信号，用来表示该线程是否还被dismiss,默认为false\u0026#39;\u0026#39;\u0026#39; self._dismissed = threading.Event() self.start() # self.join() def run(self): \u0026#39;\u0026#39;\u0026#39;每个线程尽可能多的执行work，所以采用loop， 只要线程可用，并且requestQueue有work未完成，则一直loop\u0026#39;\u0026#39;\u0026#39; while True: if self._dismissed.is_set(): break try: \u0026#39;\u0026#39;\u0026#39; Queue.","title":"Python-多线程"},{"content":"Selenium是一个用于测试网站的自动化测试工具，支持各种浏览器包括Chrome、Firefox、Safari等主流界面浏览器，同时也支持phantomJS无界面浏览器。\n以下是我在实际使用中对于selenium的一些心得和用法\nimplicitly_wait\n等待浏览器的相应时间,与sleep的区别在于implicitly_wait是设置的值或页面超时优先,而sleep则是固定睡眠时间,我在用的时候则是2个都同时使用.确保页面能顺利加载到需要的数据\nxpath 如果需要用selenium进行简单的爬虫和模拟浏览,那么xpath的语法是必须要了解明白的,html语言中比起正则,xpath的代码更加清晰和直观\nclick 对于按钮的点击事件,推荐用\ndriver.execute_script(\u0026#34;arguments[0].click();\u0026#34;, nextButton) 据说.click()会导致报错,虽然我还没遇到过\n","permalink":"/study/python-selenium/","summary":"Selenium是一个用于测试网站的自动化测试工具，支持各种浏览器包括Chrome、Firefox、Safari等主流界面浏览器，同时也支持phantomJS无界面浏览器。\n以下是我在实际使用中对于selenium的一些心得和用法\nimplicitly_wait\n等待浏览器的相应时间,与sleep的区别在于implicitly_wait是设置的值或页面超时优先,而sleep则是固定睡眠时间,我在用的时候则是2个都同时使用.确保页面能顺利加载到需要的数据\nxpath 如果需要用selenium进行简单的爬虫和模拟浏览,那么xpath的语法是必须要了解明白的,html语言中比起正则,xpath的代码更加清晰和直观\nclick 对于按钮的点击事件,推荐用\ndriver.execute_script(\u0026#34;arguments[0].click();\u0026#34;, nextButton) 据说.click()会导致报错,虽然我还没遇到过","title":"初始Python-自动化操作"},{"content":"列出指定目录下的全部文件\nimport os file_array=[] dir_array=[ os.getcwd() + \u0026#34;/directory1/\u0026#34;, os.getcwd() + \u0026#34;/directory2/\u0026#34;, ] for dir in dir_array: for root, dirs, files in os.walk(dir): for filename in files: file_array.append(dir+filename) Excel操作读写\nwb = xlrd.open_workbook(filepath) sh = wb.sheet_by_name(\u0026#39;数据明细\u0026#39;) # print(sh.nrows) # 有效数据行数 # print(sh.ncols) # 有效数据列数 for index in range(len(sh.row_values(0))): title = sh.row_values(0)[index] ","permalink":"/study/python-001/","summary":"列出指定目录下的全部文件\nimport os file_array=[] dir_array=[ os.getcwd() + \u0026#34;/directory1/\u0026#34;, os.getcwd() + \u0026#34;/directory2/\u0026#34;, ] for dir in dir_array: for root, dirs, files in os.walk(dir): for filename in files: file_array.append(dir+filename) Excel操作读写\nwb = xlrd.open_workbook(filepath) sh = wb.sheet_by_name(\u0026#39;数据明细\u0026#39;) # print(sh.nrows) # 有效数据行数 # print(sh.ncols) # 有效数据列数 for index in range(len(sh.row_values(0))): title = sh.row_values(0)[index] ","title":"初始Python-文件操作"},{"content":"前言 由于公司需求一些措施加强员工登录企业后台网站的验证,所以了解了一下有关https的双向认证,并部署到生产环境上,因此记录下来部署的流程分享一下遇到的问题\n目标 每个员工有各自的验证密钥,只能在自己的电脑上登录验证,防止员工之间的替名篡改或者恶意操作\n前置条件 拥有一张根证书,用于签发员工用的,如没有可参考教程创建 PHP\n正式内容 参考链接:\n阿里云指导openssl签发流程 https://help.aliyun.com/document_detail/160093.html?spm=5176.10695662.1996646101.searchclickresult.480f29d22TQ6uz\nphp官方文档\nhttps://www.php.net/manual/en/function.openssl-csr-sign.php\n$cacert = \u0026ldquo;file://path/to/ca.crt\u0026rdquo;; 文档中此处值得ca.crt是下面所指的root.pem,不是根证书的root.crt,不一样的~~\n使用工具 openssl 创建根证书私钥： openssl genrsa -out root.key 1024\n创建根证书请求文件： openssl req -new -out root.csr -key root.key\n后续参数的例子提供:\nCountry Name (2 letter code) [AU]:cn State or Province Name (full name) [Some-State]:gd Locality Name (eg, city) []:zh Organization Name (eg, company) [Internet Widgits Pty Ltd]:company Organizational Unit Name (eg, section) []:it Common Name (e.g. server FQDN or YOUR name) []:root 创建根证书： openssl x509 -req -in root.csr -out root.crt -signkey root.key -CAcreateserial -days 36500\n创建根证书.pem openssl req -new -x509 -key root.key -out root.pem -days 36500\nphp签发个人证书的流程 $dn = array( \u0026#34;countryName\u0026#34; =\u0026gt; \u0026#39;cn\u0026#39;, //所在国家 \u0026#34;stateOrProvinceName\u0026#34; =\u0026gt; \u0026#39;gd\u0026#39;, //所在省份 \u0026#34;localityName\u0026#34; =\u0026gt; \u0026#39;zh\u0026#39;, //所在城市 \u0026#34;organizationName\u0026#34; =\u0026gt; \u0026#39;company\u0026#39;, //注册人姓名 \u0026#34;organizationalUnitName\u0026#34; =\u0026gt; \u0026#39;it\u0026#39;, //组织名称 \u0026#34;commonName\u0026#34; =\u0026gt; \u0026#39;员工账号\u0026#39;, //公共名称 ); $config = array( \u0026#39;config\u0026#39;=\u0026gt;\u0026#34;openssl.cnf\u0026#34;, ); $privkey = openssl_pkey_new($config); $csr = openssl_csr_new($dn, $privkey, $config); //php的openssl_csr_sign的时候,调用公钥证书为个人证书签名的时候,要调用root.pem $cart=openssl_csr_sign($csr,\u0026#34;file://conf/ssl/root.pem\u0026#34;,\u0026#34;file://conf/ssl/root.key\u0026#34;,365,$config); openssl_pkey_export($privkey, $privatekey, null, $config); $resp = openssl_pkcs12_export_to_file($cart, \u0026#34;/data/ssl/{$account}.p12\u0026#34;, $privatekey, \u0026#34;\u0026#34;,$config); apache配置流程 \u0026lt;VirtualHost *:443\u0026gt; DocumentRoot \u0026#34;D:/phpserver/website/public\u0026#34; ServerName domain.cn ServerAlias SSLEngine on #单向认证 SSLCertificateFile \u0026#34;D:/phpstudy_pro/Extensions/Apache2.4.39/conf/ssl/.crt\u0026#34; SSLCertificateKeyFile \u0026#34;D:/phpstudy_pro/Extensions/Apache2.4.39/conf/ssl/.key\u0026#34; SSLCertificateChainFile \u0026#34;D:/phpstudy_pro/Extensions/Apache2.4.39/conf/ssl/.cnchain.crt\u0026#34; #双向认证的关键代码 SSLCACertificateFile \u0026#34;D:/phpserver/website/public/conf/ssl/root.crt\u0026#34; SSLVerifyClient require SSLVerifyDepth 1 SSLCertificateFile \u0026#34;C:/Users/staff/Desktop/ssl/cacert.pem\u0026#34; SSLCertificateKeyFile \u0026#34;C:/Users/staff/Desktop/ssl/server.key\u0026#34; FcgidInitialEnv PHPRC \u0026#34;D:/phpstudy_pro/Extensions/php/php7.3.4nts\u0026#34; AddHandler fcgid-script .php FcgidWrapper \u0026#34;D:/phpstudy_pro/Extensions/php/php7.3.4nts/php-cgi.exe\u0026#34; .php \u0026lt;Directory \u0026#34;D:/phpserver/website/public\u0026#34;\u0026gt; Options FollowSymLinks ExecCGI AllowOverride All Order allow,deny Allow from all Require all granted DirectoryIndex index.php index.html error/index.html \u0026lt;/Directory\u0026gt; \u0026lt;/VirtualHost\u0026gt; php校验证书 https开启后 $_SERVER[\u0026lsquo;SSL_CLIENT_S_DN_CN\u0026rsquo;]的信息会是之前签发的commonName,此时可校验commonName和当前登录的员工账号是否一致 ","permalink":"/tech/https/","summary":"前言 由于公司需求一些措施加强员工登录企业后台网站的验证,所以了解了一下有关https的双向认证,并部署到生产环境上,因此记录下来部署的流程分享一下遇到的问题\n目标 每个员工有各自的验证密钥,只能在自己的电脑上登录验证,防止员工之间的替名篡改或者恶意操作\n前置条件 拥有一张根证书,用于签发员工用的,如没有可参考教程创建 PHP\n正式内容 参考链接:\n阿里云指导openssl签发流程 https://help.aliyun.com/document_detail/160093.html?spm=5176.10695662.1996646101.searchclickresult.480f29d22TQ6uz\nphp官方文档\nhttps://www.php.net/manual/en/function.openssl-csr-sign.php\n$cacert = \u0026ldquo;file://path/to/ca.crt\u0026rdquo;; 文档中此处值得ca.crt是下面所指的root.pem,不是根证书的root.crt,不一样的~~\n使用工具 openssl 创建根证书私钥： openssl genrsa -out root.key 1024\n创建根证书请求文件： openssl req -new -out root.csr -key root.key\n后续参数的例子提供:\nCountry Name (2 letter code) [AU]:cn State or Province Name (full name) [Some-State]:gd Locality Name (eg, city) []:zh Organization Name (eg, company) [Internet Widgits Pty Ltd]:company Organizational Unit Name (eg, section) []:it Common Name (e.g. server FQDN or YOUR name) []:root 创建根证书： openssl x509 -req -in root.","title":"Https双向认证"},{"content":" apacha限制某个目录的php执行 \u0026lt;Directory /public/protected/controllers\u0026gt; php_flag engine off \u0026lt;/Directory\u0026gt; 需要注意网站已经定义的路径，如果涉及到软路径，一律以已经定义的路径为准。\napacha动态IP黑名单 能简单的设置apache黑名单,配合自己的项目能有效禁止非法IP高频的访问 http.conf \u0026lt;VirtualHost *:443\u0026gt; RewriteMap ipmap txt:ipmap.txt 项目.htaccess\nRewriteCond ${ipmap:%{REMOTE_ADDR}} ^b$ [NC] RewriteRule .* - [F,L] ipmap.txt 内容\n127.0.0.1 b 8.8.8.8 b ","permalink":"/study/apache/","summary":" apacha限制某个目录的php执行 \u0026lt;Directory /public/protected/controllers\u0026gt; php_flag engine off \u0026lt;/Directory\u0026gt; 需要注意网站已经定义的路径，如果涉及到软路径，一律以已经定义的路径为准。\napacha动态IP黑名单 能简单的设置apache黑名单,配合自己的项目能有效禁止非法IP高频的访问 http.conf \u0026lt;VirtualHost *:443\u0026gt; RewriteMap ipmap txt:ipmap.txt 项目.htaccess\nRewriteCond ${ipmap:%{REMOTE_ADDR}} ^b$ [NC] RewriteRule .* - [F,L] ipmap.txt 内容\n127.0.0.1 b 8.8.8.8 b ","title":"Apache"},{"content":" CentOS7利用yum安装node.js curl -sL https://rpm.nodesource.com/setup_16.x | bash - yum install -y nodejs node -v cnpm安装 npm install -g cnpm --registry=https://registry.npmmirror.com CentOS7 安装pip3 yum install epel-release yum install https://centos7.iuscommunity.org/ius-release.rpm 多个文件内容搜索特定关键词 grep -ln \u0026ldquo;keyword\u0026rdquo; 05-01-00hour.log \u0026hellip;(可以携带多个文件名)\n打印存在关键词的文件名\n05-19-19hour.log\n05-20-00hour.log ","permalink":"/study/centos/","summary":" CentOS7利用yum安装node.js curl -sL https://rpm.nodesource.com/setup_16.x | bash - yum install -y nodejs node -v cnpm安装 npm install -g cnpm --registry=https://registry.npmmirror.com CentOS7 安装pip3 yum install epel-release yum install https://centos7.iuscommunity.org/ius-release.rpm 多个文件内容搜索特定关键词 grep -ln \u0026ldquo;keyword\u0026rdquo; 05-01-00hour.log \u0026hellip;(可以携带多个文件名)\n打印存在关键词的文件名\n05-19-19hour.log\n05-20-00hour.log ","title":"Centos-工作中随手的记录"},{"content":"预渲染,用于前端单页面的项目,做到被seo收录的\n#创建用户 useradd -d /home/prerender -m prerender\n#安装nginx cd /usr/local wget http://nginx.org/download/nginx-1.16.1.tar.gz tar -xzf nginx-1.16.1.tar.gz cd nginx-1.16.1 ./configure \u0026ndash;with-http_ssl_module make make install\n#测试prerender cd /home/prerender #https://github.com/prerender/prerender npm install prerender npm install prerender-memory-cache \u0026ndash;save vi server.js const prerender = require(\u0026lsquo;prerender\u0026rsquo;); const server = prerender();\nserver.use(require(\u0026lsquo;prerender-memory-cache\u0026rsquo;))\nserver.start(); node server #访问 http://ip:3000/render?url=http://www.baidu.com\n#配置nginx #参考https://gist.github.com/thoop/8165802 /usr/local/nginx/sbin/nginx -c /home/prerender/nginx.conf /usr/local/nginx/sbin/nginx -s stop\nnginx.conf\nevents { worker_connections 1024; } http { include /usr/local/nginx/conf/mime.types; default_type application/octet-stream; # Change YOUR_TOKEN to your prerender token # Change example.com (server_name) to your website url # Change /path/to/your/root to the correct value server { listen 81; server_name baidu.com; root /data/home/h5; index index.html; location / { try_files $uri @prerender; } location @prerender { #0 只有搜索引擎访问才走预渲染 #set $prerender 0; set $prerender 1; if ($http_user_agent ~* \u0026#34;googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp\u0026#34;) { set $prerender 1; } if ($args ~ \u0026#34;_escaped_fragment_\u0026#34;) { set $prerender 1; } if ($http_user_agent ~ \u0026#34;Prerender\u0026#34;) { set $prerender 0; } if ($uri ~* \u0026#34;\\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)\u0026#34;) { set $prerender 0; } #resolve using Google\u0026#39;s DNS server to force DNS resolution and prevent caching of IPs resolver 8.8.8.8; if ($prerender = 1) { #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing set $prerender \u0026#34;127.0.0.1:3000\u0026#34;; rewrite .* /$scheme://$host$request_uri? break; proxy_pass http://$prerender; } if ($prerender = 0) { #rewrite .* /index.html break; } } } } ","permalink":"/tech/prerender/","summary":"预渲染,用于前端单页面的项目,做到被seo收录的\n#创建用户 useradd -d /home/prerender -m prerender\n#安装nginx cd /usr/local wget http://nginx.org/download/nginx-1.16.1.tar.gz tar -xzf nginx-1.16.1.tar.gz cd nginx-1.16.1 ./configure \u0026ndash;with-http_ssl_module make make install\n#测试prerender cd /home/prerender #https://github.com/prerender/prerender npm install prerender npm install prerender-memory-cache \u0026ndash;save vi server.js const prerender = require(\u0026lsquo;prerender\u0026rsquo;); const server = prerender();\nserver.use(require(\u0026lsquo;prerender-memory-cache\u0026rsquo;))\nserver.start(); node server #访问 http://ip:3000/render?url=http://www.baidu.com\n#配置nginx #参考https://gist.github.com/thoop/8165802 /usr/local/nginx/sbin/nginx -c /home/prerender/nginx.conf /usr/local/nginx/sbin/nginx -s stop\nnginx.conf\nevents { worker_connections 1024; } http { include /usr/local/nginx/conf/mime.types; default_type application/octet-stream; # Change YOUR_TOKEN to your prerender token # Change example.","title":"Prerender-单页面前端渲染"},{"content":"用于git角色登录服务器,触发版本pull和同步 /home/git/gitfun.inc.sh\n#!/bin/sh /bin/stty intr \u0026#39;\u0026#39; function git_checkout() { if [ -d $checkout_path/.git ];then cd $checkout_path git pull $git_url #git pull $git_url $branch #checkout a branch chmod 700 $checkout_path/.git echo $git_url update finish! else mkdir -p $checkout_path if [ ! -d $checkout_path ];then exit fi cd $checkout_path/../ git clone $git_url #git checkout $branch #switch to branch chmod 700 $checkout_path/.git if [ -d $checkout_path/.git ];then echo $git_url has checkout successfully! fi fi } function git_checkout_branch() { if [ -d $checkout_path/.git ];then cd $checkout_path #git pull $git_url git pull $git_url $branch #checkout a branch chmod 700 $checkout_path/.git echo $git_url update finish! else mkdir -p $checkout_path if [ ! -d $checkout_path ];then exit fi cd $checkout_path/../ git clone $git_url $checkout_path chmod 700 $checkout_path/.git cd $checkout_path git checkout $branch #switch to branch if [ -d $checkout_path/.git ];then echo $git_url has checkout successfully! fi fi } /home/git/.bashrc\n/bin/stty intr \u0026#39;\u0026#39; . /home/git/gitfun.inc.sh echo passwd echo project while read -p \u0026#34;input the repository name[input \u0026#39;end\u0026#39; to exit] ?\u0026#34; repos do #########start if [ \u0026#34;$repos\u0026#34; = \u0026#34;passwd\u0026#34; ];then /usr/bin/passwd continue elif [ \u0026#34;$repos\u0026#34; = \u0026#34;project\u0026#34; ];then branch=released git_url=\u0026#34;url.git\u0026#34; checkout_path=/home/git/$repos git_checkout_branch cd /home/git/$repos echo \u0026#34;build ok\u0026#34; rsync -avu --delete --exclude \u0026#34;.git\u0026#34; /home/git/$repos/ /targetpath continue elif [ \u0026#34;$repos\u0026#34; = \u0026#34;end\u0026#34; ];then break else echo \u0026#34;no such repository\u0026#34; fi done exit 使用git角色登录服务器 或者 su git\npasswd project input the repository name[input \u0026#39;end\u0026#39; to exit] ? ","permalink":"/study/gitfun/","summary":"用于git角色登录服务器,触发版本pull和同步 /home/git/gitfun.inc.sh\n#!/bin/sh /bin/stty intr \u0026#39;\u0026#39; function git_checkout() { if [ -d $checkout_path/.git ];then cd $checkout_path git pull $git_url #git pull $git_url $branch #checkout a branch chmod 700 $checkout_path/.git echo $git_url update finish! else mkdir -p $checkout_path if [ ! -d $checkout_path ];then exit fi cd $checkout_path/../ git clone $git_url #git checkout $branch #switch to branch chmod 700 $checkout_path/.git if [ -d $checkout_path/.git ];then echo $git_url has checkout successfully! fi fi } function git_checkout_branch() { if [ -d $checkout_path/.","title":"gitfun"},{"content":"这个利用nginx（openresty）+lua+opencc，写10行代码左右就可以实现的类似繁简通的功能 可充分利用nginx的快反应和可靠性\n所需插件\nhttps://github.com/BYVoid/OpenCC\nhttps://github.com/Finalcheat/lua-resty-opencc/blob/master/lib/resty/opencc.lua\nopencc在centos7可以用yum安装，但版本很旧 yum install doxygen opencc opencc-tools opencc-devel centos7上编译新版本可能要升级gcc，比较麻烦，我在centos8上编译过新版本 参考： yum install cmake gcc-c++ bison flex http://www.doxygen.nl/download.html https://bintray.com/byvoid/opencc/OpenCC ln -s /user/bin/python3.6 /user/bin/python ln -s /usr/lib/libopencc.so.2 /usr/lib64/libopencc.so.2\n安装openresty后opencc.lua放到/usr/local/openresty/lualib/resty/\nopencc.lua\nif (ngx.var.sent_http_content_type ~= nil and string.sub(ngx.var.sent_http_content_type, 1, 4) == \u0026#34;text\u0026#34;) then local data=ngx.ctx.data or \u0026#34;\u0026#34; local cdata=ngx.arg[1] data=data..cdata ngx.ctx.data=data if ngx.arg[2] then local opencc = require(\u0026#34;resty.opencc\u0026#34;) -- local o = opencc:new(\u0026#34;zhs2zht.ini\u0026#34;) -- opencc 0.4.x local o = opencc:new(\u0026#34;s2hk.json\u0026#34;) ngx.log(ngx.ERR, \u0026#34; ngx.arg[1]:\u0026#34;, data) local c = o:convert(data) o:close() ngx.arg[1] = c else ngx.arg[1] = \u0026#34;\u0026#34; end end nginx_file.conf\n#user nobody; worker_processes 1; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; #log_format main \u0026#39;$remote_addr - $remote_user [$time_local] \u0026#34;$request\u0026#34; \u0026#39; # \u0026#39;$status $body_bytes_sent \u0026#34;$http_referer\u0026#34; \u0026#39; # \u0026#39;\u0026#34;$http_user_agent\u0026#34; \u0026#34;$http_x_forwarded_for\u0026#34;\u0026#39;; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server { listen 8080; server_name localhost; location / { proxy_pass https://www.eweb.hk; body_filter_by_lua_file lua/opencc.lua; } } } ","permalink":"/tech/nginx-002/","summary":"这个利用nginx（openresty）+lua+opencc，写10行代码左右就可以实现的类似繁简通的功能 可充分利用nginx的快反应和可靠性\n所需插件\nhttps://github.com/BYVoid/OpenCC\nhttps://github.com/Finalcheat/lua-resty-opencc/blob/master/lib/resty/opencc.lua\nopencc在centos7可以用yum安装，但版本很旧 yum install doxygen opencc opencc-tools opencc-devel centos7上编译新版本可能要升级gcc，比较麻烦，我在centos8上编译过新版本 参考： yum install cmake gcc-c++ bison flex http://www.doxygen.nl/download.html https://bintray.com/byvoid/opencc/OpenCC ln -s /user/bin/python3.6 /user/bin/python ln -s /usr/lib/libopencc.so.2 /usr/lib64/libopencc.so.2\n安装openresty后opencc.lua放到/usr/local/openresty/lualib/resty/\nopencc.lua\nif (ngx.var.sent_http_content_type ~= nil and string.sub(ngx.var.sent_http_content_type, 1, 4) == \u0026#34;text\u0026#34;) then local data=ngx.ctx.data or \u0026#34;\u0026#34; local cdata=ngx.arg[1] data=data..cdata ngx.ctx.data=data if ngx.arg[2] then local opencc = require(\u0026#34;resty.opencc\u0026#34;) -- local o = opencc:new(\u0026#34;zhs2zht.ini\u0026#34;) -- opencc 0.4.x local o = opencc:new(\u0026#34;s2hk.json\u0026#34;) ngx.","title":"Nginx-实现网站简繁体转换"},{"content":"用lua实现访问限制,木桶效应\nnginx.conf\nserver{ location / { access_by_lua_file /usr/local/openresty/nginx/conf/lua/domain_check.lua; index index.html index.htm; } } 限制每个IP一段时间内能访问多少次\ndomain_check.lua\nlocal client = require \u0026#34;resty.websocket.client\u0026#34; local limit_req = require \u0026#34;resty.limit.req\u0026#34; local limit_rate = 150 local limit_burst = 50 local limit_req = require \u0026#34;resty.limit.req\u0026#34; local lim, err = limit_req.new(\u0026#34;my_limit_req_store\u0026#34;, limit_rate, limit_burst) -- 这里设置rate=2/s，漏桶桶容量设置为0，（也就是来多少水就留多少水） -- 因为resty.limit.req代码中控制粒度为毫秒级别，所以可以做到毫秒级别的平滑处理 if not lim then -- ngx.log(ngx.ERR, \u0026#34;failed to instantiate a resty.limit.req object: \u0026#34;, err) return ngx.exit(500) end local key = ngx.var.binary_remote_addr local delay, err = lim:incoming(key, true) if not delay then if err == \u0026#34;rejected\u0026#34; then return ngx.exit(401) end --此处如果请求超过每秒2次的话，就会报错403 ，禁止访问 --ngx.log(ngx.ERR, \u0026#34;failed to limit req: \u0026#34;, err) return ngx.exit(500) end if delay \u0026gt;= 0.001 then local excess = err ngx.sleep(delay) end ~ ~ ~ ","permalink":"/tech/nginx-001/","summary":"用lua实现访问限制,木桶效应\nnginx.conf\nserver{ location / { access_by_lua_file /usr/local/openresty/nginx/conf/lua/domain_check.lua; index index.html index.htm; } } 限制每个IP一段时间内能访问多少次\ndomain_check.lua\nlocal client = require \u0026#34;resty.websocket.client\u0026#34; local limit_req = require \u0026#34;resty.limit.req\u0026#34; local limit_rate = 150 local limit_burst = 50 local limit_req = require \u0026#34;resty.limit.req\u0026#34; local lim, err = limit_req.new(\u0026#34;my_limit_req_store\u0026#34;, limit_rate, limit_burst) -- 这里设置rate=2/s，漏桶桶容量设置为0，（也就是来多少水就留多少水） -- 因为resty.limit.req代码中控制粒度为毫秒级别，所以可以做到毫秒级别的平滑处理 if not lim then -- ngx.log(ngx.ERR, \u0026#34;failed to instantiate a resty.limit.req object: \u0026#34;, err) return ngx.exit(500) end local key = ngx.var.binary_remote_addr local delay, err = lim:incoming(key, true) if not delay then if err == \u0026#34;rejected\u0026#34; then return ngx.","title":"Nginx-了解Lua用法"},{"content":"How to format log (eg: Y-m-d.log) http { map $host $fmt_localdate { default \u0026#39;\u0026#39;;} map $host $fmt_localtime { default \u0026#39;\u0026#39;;} log_by_lua_block { ngx.var.fmt_localdate = os.date(\u0026#34;%Y-%m-%d\u0026#34;); ngx.var.fmt_localtime = os.date(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;); } log_format main \u0026#39;[$host][$remote_addr][$fmt_localtime][$http_referer][$http_user_agent]\u0026#39;; server { access_log /var/log/nginx/access-$fmt_localdate.log main; } } ","permalink":"/tech/nginx-node/","summary":"How to format log (eg: Y-m-d.log) http { map $host $fmt_localdate { default \u0026#39;\u0026#39;;} map $host $fmt_localtime { default \u0026#39;\u0026#39;;} log_by_lua_block { ngx.var.fmt_localdate = os.date(\u0026#34;%Y-%m-%d\u0026#34;); ngx.var.fmt_localtime = os.date(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;); } log_format main \u0026#39;[$host][$remote_addr][$fmt_localtime][$http_referer][$http_user_agent]\u0026#39;; server { access_log /var/log/nginx/access-$fmt_localdate.log main; } } ","title":"Nginx使用过程中的记录"},{"content":" 安装好apache 确保监控模块开启 /etc/httpd/conf.modules.d/00-base.conf 查看这个文件，确保监控模块开启 LoadModule status_module modules/mod_status.so 没有被注释 一旦启用了mod_status ，接下来需要为Apache服务器状态页面创建一个server-status.conf配置文件 # vim /etc/httpd/conf.d/server-status.conf \u0026lt;Location \u0026#34;/server-status\u0026#34;\u0026gt; SetHandler server-status #Require host localhost #uncomment to only allow requests from localhost \u0026lt;/Location\u0026gt; 通过使用命令行Web浏览器 （如lynx）验证Apache服务器状态和统计信息页是否正常工作，如图所示。 yum install lynx\nlynx http://localhost/server-status\n5.创建netdata读取apache属性的配置文件\nvi /etc/netdata/python.d/apache.conf\n# # if the URL is password protected, the following are supported: # # user:\u0026#39;username\u0026#39; # pass:\u0026#39;password\u0026#39; # ------------------------------------------------------------------- # AUTO-DETECTION JOBS # only one of them will run (they have the same name) localhost: name : \u0026#39;local\u0026#39; url : \u0026#39;http://localhost/server-status?auto\u0026#39; localipv4: name : \u0026#39;local\u0026#39; url : \u0026#39;http://127.0.0.1/server-status?auto\u0026#39; localipv6: name : \u0026#39;local\u0026#39; url : \u0026#39;http://::1/server-status?auto\u0026#39; ","permalink":"/tech/netdata-002/","summary":"安装好apache 确保监控模块开启 /etc/httpd/conf.modules.d/00-base.conf 查看这个文件，确保监控模块开启 LoadModule status_module modules/mod_status.so 没有被注释 一旦启用了mod_status ，接下来需要为Apache服务器状态页面创建一个server-status.conf配置文件 # vim /etc/httpd/conf.d/server-status.conf \u0026lt;Location \u0026#34;/server-status\u0026#34;\u0026gt; SetHandler server-status #Require host localhost #uncomment to only allow requests from localhost \u0026lt;/Location\u0026gt; 通过使用命令行Web浏览器 （如lynx）验证Apache服务器状态和统计信息页是否正常工作，如图所示。 yum install lynx\nlynx http://localhost/server-status\n5.创建netdata读取apache属性的配置文件\nvi /etc/netdata/python.d/apache.conf\n# # if the URL is password protected, the following are supported: # # user:\u0026#39;username\u0026#39; # pass:\u0026#39;password\u0026#39; # ------------------------------------------------------------------- # AUTO-DETECTION JOBS # only one of them will run (they have the same name) localhost: name : \u0026#39;local\u0026#39; url : \u0026#39;http://localhost/server-status?","title":"Netdata-监控apache"},{"content":"###1. 如何用netdata监控redis,官网教程\ncd /etc/netdata # Replace this path with your Netdata config directory sudo ./edit-config go.d/redis.conf # by tcp socket redis://\u0026lt;user\u0026gt;:\u0026lt;password\u0026gt;@\u0026lt;host\u0026gt;:\u0026lt;port\u0026gt; # by unix socket unix://\u0026lt;user\u0026gt;:\u0026lt;password\u0026gt;@\u0026lt;/path/to/redis.sock 例如\nsocket1: name : \u0026#39;local\u0026#39; socket : \u0026#39;/tmp/redis.sock\u0026#39; pass : \u0026#39;pass\u0026#39; socket2: name : \u0026#39;local\u0026#39; socket : \u0026#39;/var/run/redis/redis.sock\u0026#39; # pass : \u0026#39;\u0026#39; socket3: name : \u0026#39;local\u0026#39; socket : \u0026#39;/var/lib/redis/redis.sock\u0026#39; # pass : \u0026#39;\u0026#39; localhost: name : \u0026#39;local\u0026#39; host : \u0026#39;localhost\u0026#39; port : 6379 pass : \u0026#39;pass\u0026#39; localipv4: name : \u0026#39;local\u0026#39; host : \u0026#39;127.0.0.1\u0026#39; port : 6379 # pass : \u0026#39;\u0026#39; localipv6: name : \u0026#39;local\u0026#39; host : \u0026#39;::1\u0026#39; port : 6379 # pass : \u0026#39;\u0026#39; ","permalink":"/tech/netdata-001/","summary":"###1. 如何用netdata监控redis,官网教程\ncd /etc/netdata # Replace this path with your Netdata config directory sudo ./edit-config go.d/redis.conf # by tcp socket redis://\u0026lt;user\u0026gt;:\u0026lt;password\u0026gt;@\u0026lt;host\u0026gt;:\u0026lt;port\u0026gt; # by unix socket unix://\u0026lt;user\u0026gt;:\u0026lt;password\u0026gt;@\u0026lt;/path/to/redis.sock 例如\nsocket1: name : \u0026#39;local\u0026#39; socket : \u0026#39;/tmp/redis.sock\u0026#39; pass : \u0026#39;pass\u0026#39; socket2: name : \u0026#39;local\u0026#39; socket : \u0026#39;/var/run/redis/redis.sock\u0026#39; # pass : \u0026#39;\u0026#39; socket3: name : \u0026#39;local\u0026#39; socket : \u0026#39;/var/lib/redis/redis.sock\u0026#39; # pass : \u0026#39;\u0026#39; localhost: name : \u0026#39;local\u0026#39; host : \u0026#39;localhost\u0026#39; port : 6379 pass : \u0026#39;pass\u0026#39; localipv4: name : \u0026#39;local\u0026#39; host : \u0026#39;127.","title":"Netdata-监控redis"},{"content":"SSL证书也就是支持https访问,其中具体的用处就不在此展开说了,主要介绍下个人使用中可以免费获取的证书渠道以及如何部署\n申请SSL证书,对于个人的需要列出几种免费获取证书的方式\n阿里云，腾讯云，七牛云\n注意：阿里云证书的领取限制是一个自然年内可以领取一次数量为20的云盾单域名试用证书 部署证书\nnginx流程 server { ssl_certificate fullchain.pem; ssl_certificate_key privkey.pem; ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5; ssl_prefer_server_ciphers on; ssl_session_cache shared:SSL:10m; ssl_session_timeout 10m; } apache流程\n\u0026lt;VirtualHost *:443\u0026gt; DocumentRoot \u0026#34;project_path\u0026#34; ServerName domain.com:443 ErrorLog error_log_ssl SSLEngine on SSLProtocol ALL -SSLv2 -SSLv3 #SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!RC4 SSLCertificateFile /etc/httpd/conf.d/tls/crt SSLCertificateKeyFile /etc/httpd/conf.d/tls/key SSLCertificateChainFile /etc/httpd/conf.d/tls/ca-bundle SSLVerifyClient none \u0026lt;Files ~ \u0026#34;\\.(cgi|shtml|net|php?)$\u0026#34;\u0026gt; SSLOptions +StdEnvVars \u0026lt;/Files\u0026gt; \u0026lt;Directory \u0026#34;project_path\u0026#34;\u0026gt; Options FollowSymLinks AllowOverride All Require all granted \u0026lt;/Directory\u0026gt; \u0026lt;/VirtualHost\u0026gt; ","permalink":"/tech/ssl-001/","summary":"SSL证书也就是支持https访问,其中具体的用处就不在此展开说了,主要介绍下个人使用中可以免费获取的证书渠道以及如何部署\n申请SSL证书,对于个人的需要列出几种免费获取证书的方式\n阿里云，腾讯云，七牛云\n注意：阿里云证书的领取限制是一个自然年内可以领取一次数量为20的云盾单域名试用证书 部署证书\nnginx流程 server { ssl_certificate fullchain.pem; ssl_certificate_key privkey.pem; ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5; ssl_prefer_server_ciphers on; ssl_session_cache shared:SSL:10m; ssl_session_timeout 10m; } apache流程\n\u0026lt;VirtualHost *:443\u0026gt; DocumentRoot \u0026#34;project_path\u0026#34; ServerName domain.com:443 ErrorLog error_log_ssl SSLEngine on SSLProtocol ALL -SSLv2 -SSLv3 #SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!RC4 SSLCertificateFile /etc/httpd/conf.d/tls/crt SSLCertificateKeyFile /etc/httpd/conf.d/tls/key SSLCertificateChainFile /etc/httpd/conf.d/tls/ca-bundle SSLVerifyClient none \u0026lt;Files ~ \u0026#34;\\.(cgi|shtml|net|php?)$\u0026#34;\u0026gt; SSLOptions +StdEnvVars \u0026lt;/Files\u0026gt; \u0026lt;Directory \u0026#34;project_path\u0026#34;\u0026gt; Options FollowSymLinks AllowOverride All Require all granted \u0026lt;/Directory\u0026gt; \u0026lt;/VirtualHost\u0026gt; ","title":"初识SSL证书"},{"content":"How to show binlog mysqlbinlog --no-defaults --start-datetime=\u0026#34;2021-09-30 00:00:00\u0026#34; --stop-datetime=\u0026#34;2021-09-30 23:00:00\u0026#34; -d database --base64-output=DECODE-ROWS -v /binlog/master-bin.001255 --result-file=/root/binlog/mysqllog001255.sql How to get distance ( lat and lng) lat = X lng = X select * , ROUND(6378.138 * 2 * ASIN(SQRT(POW(SIN(({$lat} * PI() / 180 - lat * PI() / 180) / 2),2) + COS({$lat} * PI() / 180) * COS(lat * PI() / 180) * POW(SIN(({$lng} * PI() / 180 - lng * PI() / 180) / 2),2))), 5)*1000 AS distance from table order by distance asc ","permalink":"/study/mysql-note/","summary":"How to show binlog mysqlbinlog --no-defaults --start-datetime=\u0026#34;2021-09-30 00:00:00\u0026#34; --stop-datetime=\u0026#34;2021-09-30 23:00:00\u0026#34; -d database --base64-output=DECODE-ROWS -v /binlog/master-bin.001255 --result-file=/root/binlog/mysqllog001255.sql How to get distance ( lat and lng) lat = X lng = X select * , ROUND(6378.138 * 2 * ASIN(SQRT(POW(SIN(({$lat} * PI() / 180 - lat * PI() / 180) / 2),2) + COS({$lat} * PI() / 180) * COS(lat * PI() / 180) * POW(SIN(({$lng} * PI() / 180 - lng * PI() / 180) / 2),2))), 5)*1000 AS distance from table order by distance asc ","title":"Mysql数据库-使用记录"},{"content":"当前日期\nselect curdate(); 当月最后一天\nselect last_day(curdate()); 下个月的上一天,例如今天2022-06-01 ,结果为2022-06-30\nselect DATE_SUB(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),INTERVAL 1 DAY) 下个月的最后一天\nselect LAST_DAY(DATE_ADD(CURDATE(),INTERVAL 1 MONTH)); ","permalink":"/study/mysql-001/","summary":"当前日期\nselect curdate(); 当月最后一天\nselect last_day(curdate()); 下个月的上一天,例如今天2022-06-01 ,结果为2022-06-30\nselect DATE_SUB(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),INTERVAL 1 DAY) 下个月的最后一天\nselect LAST_DAY(DATE_ADD(CURDATE(),INTERVAL 1 MONTH)); ","title":"Mysql数据库-日期函数"},{"content":" 能说下myisam 和 innodb的区别吗\nmyisam引擎是5.1版本之前的默认引擎，支持全文检索、压缩、空间函数等，但是不支持事务和行级锁，所以一般用于有大量查询少量插入的场景来使用，而且myisam不支持外键，并且索引和数据是分开存储的。\ninnodb是基于聚簇索引建立的，和myisam相反它支持事务、外键，并且通过MVCC来支持高并发，索引和数据存储在一起。\n说下mysql的索引有哪些吧，聚簇和非聚簇索引又是什么？\ncreate table user( id int(11) not null, age int(11) not null, primary key(id), key(age) ); B+树是左小右大的顺序存储结构，节点只包含id索引列，而叶子节点包含索引列和数据，这种数据和索引在一起存储的索引方式叫做聚簇索引，一张表只能有一个聚簇索引。假设没有定义主键，InnoDB会选择一个唯一的非空索引代替，如果没有的话则会隐式定义一个主键作为聚簇索引。\n事务的基本特性\n原子性指的是一个事务中的操作要么全部成功，要么全部失败。\n一致性指的是数据库总是从一个一致性的状态转换到另外一个一致性的状态。比如A转账给B100块钱，假设中间sql执行过程中系统崩溃A也不会损失100块，因为事务没有提交，修改也就不会保存到数据库。\n隔离性指的是一个事务的修改在最终提交前，对其他事务是不可见的。\n持久性指的是一旦事务提交，所做的修改就会永久保存到数据库中。\n主从同步\n首先先了解mysql主从同步的原理 master提交完事务后，写入binlog\nslave连接到master，获取binlog\nmaster创建dump线程，推送binglog到slave\nslave启动一个IO线程读取同步过来的master的binlog，记录到relay log中继日志中\nslave再开启一个sql线程读取relay log事件并在slave执行，完成同步\nslave记录自己的binglog\n","permalink":"/study/mysql-question/","summary":"能说下myisam 和 innodb的区别吗\nmyisam引擎是5.1版本之前的默认引擎，支持全文检索、压缩、空间函数等，但是不支持事务和行级锁，所以一般用于有大量查询少量插入的场景来使用，而且myisam不支持外键，并且索引和数据是分开存储的。\ninnodb是基于聚簇索引建立的，和myisam相反它支持事务、外键，并且通过MVCC来支持高并发，索引和数据存储在一起。\n说下mysql的索引有哪些吧，聚簇和非聚簇索引又是什么？\ncreate table user( id int(11) not null, age int(11) not null, primary key(id), key(age) ); B+树是左小右大的顺序存储结构，节点只包含id索引列，而叶子节点包含索引列和数据，这种数据和索引在一起存储的索引方式叫做聚簇索引，一张表只能有一个聚簇索引。假设没有定义主键，InnoDB会选择一个唯一的非空索引代替，如果没有的话则会隐式定义一个主键作为聚簇索引。\n事务的基本特性\n原子性指的是一个事务中的操作要么全部成功，要么全部失败。\n一致性指的是数据库总是从一个一致性的状态转换到另外一个一致性的状态。比如A转账给B100块钱，假设中间sql执行过程中系统崩溃A也不会损失100块，因为事务没有提交，修改也就不会保存到数据库。\n隔离性指的是一个事务的修改在最终提交前，对其他事务是不可见的。\n持久性指的是一旦事务提交，所做的修改就会永久保存到数据库中。\n主从同步\n首先先了解mysql主从同步的原理 master提交完事务后，写入binlog\nslave连接到master，获取binlog\nmaster创建dump线程，推送binglog到slave\nslave启动一个IO线程读取同步过来的master的binlog，记录到relay log中继日志中\nslave再开启一个sql线程读取relay log事件并在slave执行，完成同步\nslave记录自己的binglog","title":"Mysql数据库-常见问题"},{"content":"find MongoDB中查询数据的基本指令,类似mysql中的select\nexample:\ndb.movies.find({\u0026#34;year\u0026#34;:1975}) db.movies.find({\u0026#34;year\u0026#34;:1975,\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;}) db.movies.find({$and:[{\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;},{\u0026#34;year\u0026#34;:1989}]}) db.movies.find({$or:[{\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;},{\u0026#34;year\u0026#34;:1989}]}) 子文档查询,如文档内容\n{\u0026#34;name\u0026#34;:\u0026#34;apple\u0026#34;,\u0026#34;from\u0026#34;:{country:\u0026#34;China\u0026#34;,province:\u0026#34;Guangdong\u0026#34;}} db.fruit.find({\u0026#34;from.country\u0026#34;:\u0026#34;China\u0026#34;}) 条件语法\n\u0026lt;\u0026gt; $ne \u0026gt; $gt \u0026gt;= $gte \u0026lt; $gt \u0026lt;= $lte is null {$exists:false} in {$in:[]} not in {$nin:[]} or $or and $and ##remove 删除文档\nupdate updateOne 表示无论条件匹配多少条,只更新第一条\nupdateMany 匹配多少就更新多少\n$push 增加一个对象到数组底部\n$pushAll 增加多个对象到数组底部\n$pop 从数组底部删除一个对象\n$pull 如果匹配指定的值,从数组中删除对应的对象 $pullAll 如果匹配任意的值,从数据中删除对应的对象\n$addToSet 如果不存在则增加一个值到数组\ndb.fruit.updateOne({name:\u0026#34;apple\u0026#34;},{$set:{from:\u0026#34;China\u0026#34;}}) drop 删除集合 ","permalink":"/study/mongodb-003/","summary":"find MongoDB中查询数据的基本指令,类似mysql中的select\nexample:\ndb.movies.find({\u0026#34;year\u0026#34;:1975}) db.movies.find({\u0026#34;year\u0026#34;:1975,\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;}) db.movies.find({$and:[{\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;},{\u0026#34;year\u0026#34;:1989}]}) db.movies.find({$or:[{\u0026#34;title\u0026#34;:\u0026#34;Kill\u0026#34;},{\u0026#34;year\u0026#34;:1989}]}) 子文档查询,如文档内容\n{\u0026#34;name\u0026#34;:\u0026#34;apple\u0026#34;,\u0026#34;from\u0026#34;:{country:\u0026#34;China\u0026#34;,province:\u0026#34;Guangdong\u0026#34;}} db.fruit.find({\u0026#34;from.country\u0026#34;:\u0026#34;China\u0026#34;}) 条件语法\n\u0026lt;\u0026gt; $ne \u0026gt; $gt \u0026gt;= $gte \u0026lt; $gt \u0026lt;= $lte is null {$exists:false} in {$in:[]} not in {$nin:[]} or $or and $and ##remove 删除文档\nupdate updateOne 表示无论条件匹配多少条,只更新第一条\nupdateMany 匹配多少就更新多少\n$push 增加一个对象到数组底部\n$pushAll 增加多个对象到数组底部\n$pop 从数组底部删除一个对象\n$pull 如果匹配指定的值,从数组中删除对应的对象 $pullAll 如果匹配任意的值,从数据中删除对应的对象\n$addToSet 如果不存在则增加一个值到数组\ndb.fruit.updateOne({name:\u0026#34;apple\u0026#34;},{$set:{from:\u0026#34;China\u0026#34;}}) drop 删除集合 ","title":"Mongodb数据库-增删查改"},{"content":"本地测试结果如下\n|- D:\\mongodata\\db1\n|\u0026mdash;\u0026mdash; mongo.conf\n|- D:\\mongodata\\db2\n|\u0026mdash;\u0026mdash; mongo.conf\nmongo.conf\nstorage: dbPath: D:\\mongodata\\db1 journal: enabled: true systemLog: destination: file logAppend: true path: D:\\mongodata\\db1\\mongod.log net: port: 28017 bindIp: 127.0.0.1 replication: replSetName: rs0 ","permalink":"/study/mongodb-002/","summary":"本地测试结果如下\n|- D:\\mongodata\\db1\n|\u0026mdash;\u0026mdash; mongo.conf\n|- D:\\mongodata\\db2\n|\u0026mdash;\u0026mdash; mongo.conf\nmongo.conf\nstorage: dbPath: D:\\mongodata\\db1 journal: enabled: true systemLog: destination: file logAppend: true path: D:\\mongodata\\db1\\mongod.log net: port: 28017 bindIp: 127.0.0.1 replication: replSetName: rs0 ","title":"Mongodb数据库-复制集"},{"content":"了解mongodb的基本情况\n数据类型 描述 String 字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。 Integer 整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。 Boolean 布尔值。用于存储布尔值（真/假） Double 双精度浮点值。用于存储浮点值。 Min/Max keys 将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。 Array 用于将数组或列表或多个值存储为一个键。 Timestamp 时间戳。记录文档修改或添加的具体时间。 Object 用于内嵌文档 Null 用于创建空值 Symbol 符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言 Date 日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息 Object ID 对象 ID。用于创建文档的 ID。　(每个文档都有) Binary Data 二进制数据。用于存储二进制数据 Code 代码类型。用于在文档中存储 JavaScript 代码 Regular expression 正则表达式 ","permalink":"/study/mongodb-001/","summary":"了解mongodb的基本情况\n数据类型 描述 String 字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。 Integer 整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。 Boolean 布尔值。用于存储布尔值（真/假） Double 双精度浮点值。用于存储浮点值。 Min/Max keys 将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。 Array 用于将数组或列表或多个值存储为一个键。 Timestamp 时间戳。记录文档修改或添加的具体时间。 Object 用于内嵌文档 Null 用于创建空值 Symbol 符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言 Date 日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息 Object ID 对象 ID。用于创建文档的 ID。　(每个文档都有) Binary Data 二进制数据。用于存储二进制数据 Code 代码类型。用于在文档中存储 JavaScript 代码 Regular expression 正则表达式 ","title":"Mongodb数据库-初识"},{"content":"上文讲述了Hugo的如何搭建,这次讲述作者个人博客用的Hugo选用的模板hugo-PaperMod ，对于像我这种鉴赏能力为0的程序员，这么简单明了的风格瞬间让我沉迷了，因此也简单分享下搭建主题的过程\ngit pull https://github.com/adityatelange/hugo-PaperMod.git git switch exampleSite 此时目录结构包含有 content\nassets\nconfig.yml\n复制到你的相应hugo项目下\nconfig.yml的代码调整为:\nprofileMode: enabled: true 运行hugo后首页展示就和我当前的首页类似,简洁明了,恭喜你主题的搭建就完成了\n","permalink":"/tech/hugo-002/","summary":"上文讲述了Hugo的如何搭建,这次讲述作者个人博客用的Hugo选用的模板hugo-PaperMod ，对于像我这种鉴赏能力为0的程序员，这么简单明了的风格瞬间让我沉迷了，因此也简单分享下搭建主题的过程\ngit pull https://github.com/adityatelange/hugo-PaperMod.git git switch exampleSite 此时目录结构包含有 content\nassets\nconfig.yml\n复制到你的相应hugo项目下\nconfig.yml的代码调整为:\nprofileMode: enabled: true 运行hugo后首页展示就和我当前的首页类似,简洁明了,恭喜你主题的搭建就完成了","title":"从0到1 记录搭建Hugo个人博客-02 选用模板"},{"content":"使用HUGO搭建一个自己的博客Blog 对于常在敲代码的程序员来说,有个博客能记录和分享是一个相当有意义的事情， Hugo 是一个高效的网站搭建框架,能用简单的markdown语法编辑生成出富有个性的网页,即使是刚学的小白也能很简单的入门使用\n说明：Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，同时也对图片、图表、数学公式提供了支持，可以用来书写电子书、软件文档等，同时也可以非常方便的转换为HTML页面或者是PDF文档。\nstep 1:安装环境\n首先选择适合自己操作系统的环境https://github.com/gohugoio/hugo/releases/tag/v0.101.0 ,如我在window上使用就下载了 hugo_extended_0.101.0_Windows-64bit.zip step 2:创建一个新站点\nhugo new site quickstart -f yml step 3:添加主题\n根据自己的兴趣或者网站的用途,可以选择合适的博客主题,避免了例如我这种设计能力不足的程序员,只需简单的二次修饰即可上线\nhttps://themes.gohugo.io/ cd quickstart git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke step 4:添加内容\n辅助命令 hugo new posts/my-first-post.md 当然也可以自己手工创建在content目录下,如该页面就是在person/_index.md,文件格式如下:\n--- title: \u0026#34;个人介绍\u0026#34; date: 2022-06-19T08:47:11+08:00 --- step 4:开始启动 如果在本地测试环境下想随时编辑查看,可使用 hugo server 此时打开http://localhost:1313就可以看到效果了 而需要上线编译的时候则可以简单的\nhugo step 5:完成\n最后把编译后的文件部署到你的服务器或者其他地方,搭配域名等就大功告成了 ","permalink":"/tech/hugo-001/","summary":"使用HUGO搭建一个自己的博客Blog 对于常在敲代码的程序员来说,有个博客能记录和分享是一个相当有意义的事情， Hugo 是一个高效的网站搭建框架,能用简单的markdown语法编辑生成出富有个性的网页,即使是刚学的小白也能很简单的入门使用\n说明：Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，同时也对图片、图表、数学公式提供了支持，可以用来书写电子书、软件文档等，同时也可以非常方便的转换为HTML页面或者是PDF文档。\nstep 1:安装环境\n首先选择适合自己操作系统的环境https://github.com/gohugoio/hugo/releases/tag/v0.101.0 ,如我在window上使用就下载了 hugo_extended_0.101.0_Windows-64bit.zip step 2:创建一个新站点\nhugo new site quickstart -f yml step 3:添加主题\n根据自己的兴趣或者网站的用途,可以选择合适的博客主题,避免了例如我这种设计能力不足的程序员,只需简单的二次修饰即可上线\nhttps://themes.gohugo.io/ cd quickstart git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke step 4:添加内容\n辅助命令 hugo new posts/my-first-post.md 当然也可以自己手工创建在content目录下,如该页面就是在person/_index.md,文件格式如下:\n--- title: \u0026#34;个人介绍\u0026#34; date: 2022-06-19T08:47:11+08:00 --- step 4:开始启动 如果在本地测试环境下想随时编辑查看,可使用 hugo server 此时打开http://localhost:1313就可以看到效果了 而需要上线编译的时候则可以简单的\nhugo step 5:完成\n最后把编译后的文件部署到你的服务器或者其他地方,搭配域名等就大功告成了 ","title":"从0到1 记录搭建Hugo个人博客-01 搭建环境"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Inline Code This is Inline Code\nOnly pre This is pre text Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gist List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"/posts/markdown-syntax/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n","permalink":"/posts/rich-content/","summary":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates (extend_head.html) like so: refer ISSUE #236 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\) Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"/posts/math-typesetting/","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","permalink":"/posts/emoji-support/","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","title":"Emoji Support"}]